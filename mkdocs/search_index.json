{
    "docs": [
        {
            "location": "/",
            "text": "Introduction\n\n\nThe MD2K software platform includes mobile phone software platform called mCerebrum and a cloud counterpart called Cerebral Cortex. mCerebrum is a configurable software platform for mobile and wearable sensors. It provides support for reliable data collection from mobile and wearable sensors, and real-time processing of these data for sensor triggered just-in-time adaptive interventions.\n\n\nCerebral Cortex is the big data companion of mCerebrum designed to support population-scale data analysis, visualization, model development, and intervention design for mobile sensor data. It provides the ability to do machine learning model development on population scale data sets and provides interoperable interfaces for aggregation of diverse data sources.\n\n\n\n\nLimitations of Existing mHealth Platforms\n\n\nSeveral software platforms have recently emerged for collecting mobile health data. For example, Apple and Google each provide a set of APIs and tools for mobile mHeath data collection. But, Apple HealthKit and Google Fit APIs are primarily designed for low frequency data collection of digital biomarkers including: blood pressure, weight, or physical activity. Both of these platforms have limited expressiveness for time series data streams.\n\n\nUniqueness of MD2K\n\n\nThe \nMD2K\n platform , on the other hand, is designed from the ground up as a high-frequency data stream processing toolchain that provides flexible data types and custom object storage. It can collect and analyze data from tens of wearable sensors via a wide array of wireless radios (ANT, Bluetooth, Bluetooth LE, etc.). It also provides native support for triggering notifications, self-report prompts, and interventions based on real-time values of digital biomarkers derived from sensor data.\n\n\nBackground\n\n\nmCerebrum is backed by 9 years of software development on the \nFieldstream\n and \nAutoSense\n projects which yielded in excess of 20,000 hours of wearable sensor data from a variety of lab and field studies with hundreds of participants. Over 27 research articles (with over 400 citations) have been published using analysis of these data (see list of articles below; go here for citations). mCerebrum is based on these extensive experiences with real-life high-frequency sensor data and its analysis for both technology and health research.\n\n\nThe signal processing for Fieldstream and AutoSense were on a Matlab batch-processing codebase that operates on data after a participant has returned the data collection device to the lab. Therefore, no real-time sensor-triggered notifications or interventions were possible with the existing framework and furthermore, the codebase does not lend itself well to distributed processing for scalable application performance.\n\n\nNovelty of MD2K\n\n\nmCerebrum, on the other hand, is designed to be compatible with mobile platforms so as to support real-time signal processing of high-frequency data streams in excess of 800 hertz, while meeting quality of service requirements for the mobile platform. In addition, mCerebrum is designed as an open-source project so that it can be easily used by the community and modified to suit specific research needs.\n\n\nCerebral Cortex is the big data companion to mCerebrum designed to support population-scale analytics, model development, and data visualizations. One of the primary capabilities of Cerebral Cortex is its ability to support scalable big data machine learning model development and iterative data analysis and model generation across population-scale data sets. Models learned on population-scale data can be sent back to a smartphone in the field to improve detection and classification accuracy.",
            "title": "Introduction"
        },
        {
            "location": "/#introduction",
            "text": "The MD2K software platform includes mobile phone software platform called mCerebrum and a cloud counterpart called Cerebral Cortex. mCerebrum is a configurable software platform for mobile and wearable sensors. It provides support for reliable data collection from mobile and wearable sensors, and real-time processing of these data for sensor triggered just-in-time adaptive interventions.  Cerebral Cortex is the big data companion of mCerebrum designed to support population-scale data analysis, visualization, model development, and intervention design for mobile sensor data. It provides the ability to do machine learning model development on population scale data sets and provides interoperable interfaces for aggregation of diverse data sources.",
            "title": "Introduction"
        },
        {
            "location": "/#limitations-of-existing-mhealth-platforms",
            "text": "Several software platforms have recently emerged for collecting mobile health data. For example, Apple and Google each provide a set of APIs and tools for mobile mHeath data collection. But, Apple HealthKit and Google Fit APIs are primarily designed for low frequency data collection of digital biomarkers including: blood pressure, weight, or physical activity. Both of these platforms have limited expressiveness for time series data streams.",
            "title": "Limitations of Existing mHealth Platforms"
        },
        {
            "location": "/#uniqueness-of-md2k",
            "text": "The  MD2K  platform , on the other hand, is designed from the ground up as a high-frequency data stream processing toolchain that provides flexible data types and custom object storage. It can collect and analyze data from tens of wearable sensors via a wide array of wireless radios (ANT, Bluetooth, Bluetooth LE, etc.). It also provides native support for triggering notifications, self-report prompts, and interventions based on real-time values of digital biomarkers derived from sensor data.",
            "title": "Uniqueness of MD2K"
        },
        {
            "location": "/#background",
            "text": "mCerebrum is backed by 9 years of software development on the  Fieldstream  and  AutoSense  projects which yielded in excess of 20,000 hours of wearable sensor data from a variety of lab and field studies with hundreds of participants. Over 27 research articles (with over 400 citations) have been published using analysis of these data (see list of articles below; go here for citations). mCerebrum is based on these extensive experiences with real-life high-frequency sensor data and its analysis for both technology and health research.  The signal processing for Fieldstream and AutoSense were on a Matlab batch-processing codebase that operates on data after a participant has returned the data collection device to the lab. Therefore, no real-time sensor-triggered notifications or interventions were possible with the existing framework and furthermore, the codebase does not lend itself well to distributed processing for scalable application performance.",
            "title": "Background"
        },
        {
            "location": "/#novelty-of-md2k",
            "text": "mCerebrum, on the other hand, is designed to be compatible with mobile platforms so as to support real-time signal processing of high-frequency data streams in excess of 800 hertz, while meeting quality of service requirements for the mobile platform. In addition, mCerebrum is designed as an open-source project so that it can be easily used by the community and modified to suit specific research needs.  Cerebral Cortex is the big data companion to mCerebrum designed to support population-scale analytics, model development, and data visualizations. One of the primary capabilities of Cerebral Cortex is its ability to support scalable big data machine learning model development and iterative data analysis and model generation across population-scale data sets. Models learned on population-scale data can be sent back to a smartphone in the field to improve detection and classification accuracy.",
            "title": "Novelty of MD2K"
        },
        {
            "location": "/software/",
            "text": "Software Release Information\n\n\nSchedule\n\n\nMD2K software is released based on a monthly development and testing cycle.  Typically, we allocate \n3 1-week sprints\n for development activities followed by a \nsingle 1-week sprint\n dedicated towards testing.  \n\n\n\n\nMajor \nX.0.0\n software updates will occur approximately every year\n\n\nMinor/Feature \n1.X.0\n updates will occur each month on the 3\nrd\n Wednesday\n\n\nCritical bug fixes \n1.2.X\n will be released immediately\n\n\n\n\n\n\n\n\n\n\nYear\n\n\nMonth\n\n\nRelease Day\n\n\n\n\n\n\n\n\n\n\n2016\n\n\nSeptember\n\n\n2016/09/14  (Wed)\n\n\n\n\n\n\n2016\n\n\nOctober\n\n\n2016/10/19  (Wed)\n\n\n\n\n\n\n2016\n\n\nNovember\n\n\n2016/11/16  (Wed)\n\n\n\n\n\n\n2016\n\n\nDecember\n\n\n2016/12/21  (Wed)\n\n\n\n\n\n\n2017\n\n\nJanuary\n\n\n2017/01/18  (Wed)\n\n\n\n\n\n\n2017\n\n\nFebruary\n\n\n2017/02/15  (Wed)\n\n\n\n\n\n\n2017\n\n\nMarch\n\n\n2017/03/15  (Wed)\n\n\n\n\n\n\n2017\n\n\nApril\n\n\n2017/04/19  (Wed)\n\n\n\n\n\n\n2017\n\n\nMay\n\n\n2017/05/17  (Wed)\n\n\n\n\n\n\n\n\n\n\nFeature Requests\n\n\n\n\nAll feature requests should be submitted prior to the scheduled release day of the prior month.  For example, for a feature request to be considered for the September 2016 release, it should be submitted to the \nJIRA\n tracker before the August release day \n2016/08/17\n.  This will allow the software engineers sufficient time to plan and execute the upcoming activities.\n\n\nDownload\n\n\nmCerebrum instructions\n\n\nmCerebrum is a suite of several Android applications that are combined with a\nset of configuration files.  These instructions will guide you in downloading,\ninstalling, and configuring the mCerebrum software suite.  All source code is\navailable in the \nMD2K's GitHub organization\n.\n\n\n\n\nDownload the latest version of mCerebrum (\nlatest release\n ) and install the APK file on and Android 5.0+ device.\n\n\nmCerebrum will run and the \nSettings\n button will be highlighted in red, press it.\n\n\nA prompt will be shown asking you to enter a filename of a configuration file to download, enter \ndefault\n and press \nOK\n.\n\n\nOnce a configuration file is successfully downloaded and installed, you will be prompted with an Admin password screen.  The default password is \n1234\n.\n\n\nCongratulations, you have successfully installed the main mCerebrum application.  Please follow the instructions \nhere\n for configuring the platform\n\n\n\n\nList of mCerebrum Apps\n\n\n\n\n\n\n\n\nApplications\n\n\nDownload\n\n\n\n\n\n\n\n\n\n\nAutoSense\n\n\nlatest release\n\n\n\n\n\n\nMicrosoft Band\n\n\nlatest release\n\n\n\n\n\n\nPhone Sensor\n\n\nlatest release\n\n\n\n\n\n\nStream Processor\n\n\nlatest release\n\n\n\n\n\n\nMood Surfing\n\n\nlatest release\n\n\n\n\n\n\nThought Shakeup\n\n\nlatest release\n\n\n\n\n\n\nEcological Momentary Assessment (EMA)\n\n\nlatest release\n\n\n\n\n\n\nEMA Scheduler\n\n\nlatest release\n\n\n\n\n\n\nNotification Manager\n\n\nlatest release\n\n\n\n\n\n\nData stream plotter\n\n\nlatest release\n\n\n\n\n\n\nDataKit\n\n\nlatest release\n\n\n\n\n\n\nmCerebrum (Study)\n\n\nlatest release\n\n\n\n\n\n\n\n\nSupported by\n\n\n \nGitHub\n\n\n \nJetBrains - IntelliJ IDEA",
            "title": "Overview"
        },
        {
            "location": "/software/#software-release-information",
            "text": "",
            "title": "Software Release Information"
        },
        {
            "location": "/software/#schedule",
            "text": "MD2K software is released based on a monthly development and testing cycle.  Typically, we allocate  3 1-week sprints  for development activities followed by a  single 1-week sprint  dedicated towards testing.     Major  X.0.0  software updates will occur approximately every year  Minor/Feature  1.X.0  updates will occur each month on the 3 rd  Wednesday  Critical bug fixes  1.2.X  will be released immediately      Year  Month  Release Day      2016  September  2016/09/14  (Wed)    2016  October  2016/10/19  (Wed)    2016  November  2016/11/16  (Wed)    2016  December  2016/12/21  (Wed)    2017  January  2017/01/18  (Wed)    2017  February  2017/02/15  (Wed)    2017  March  2017/03/15  (Wed)    2017  April  2017/04/19  (Wed)    2017  May  2017/05/17  (Wed)      Feature Requests   All feature requests should be submitted prior to the scheduled release day of the prior month.  For example, for a feature request to be considered for the September 2016 release, it should be submitted to the  JIRA  tracker before the August release day  2016/08/17 .  This will allow the software engineers sufficient time to plan and execute the upcoming activities.",
            "title": "Schedule"
        },
        {
            "location": "/software/#download",
            "text": "",
            "title": "Download"
        },
        {
            "location": "/software/#mcerebrum-instructions",
            "text": "mCerebrum is a suite of several Android applications that are combined with a\nset of configuration files.  These instructions will guide you in downloading,\ninstalling, and configuring the mCerebrum software suite.  All source code is\navailable in the  MD2K's GitHub organization .   Download the latest version of mCerebrum ( latest release  ) and install the APK file on and Android 5.0+ device.  mCerebrum will run and the  Settings  button will be highlighted in red, press it.  A prompt will be shown asking you to enter a filename of a configuration file to download, enter  default  and press  OK .  Once a configuration file is successfully downloaded and installed, you will be prompted with an Admin password screen.  The default password is  1234 .  Congratulations, you have successfully installed the main mCerebrum application.  Please follow the instructions  here  for configuring the platform",
            "title": "mCerebrum instructions"
        },
        {
            "location": "/software/#list-of-mcerebrum-apps",
            "text": "Applications  Download      AutoSense  latest release    Microsoft Band  latest release    Phone Sensor  latest release    Stream Processor  latest release    Mood Surfing  latest release    Thought Shakeup  latest release    Ecological Momentary Assessment (EMA)  latest release    EMA Scheduler  latest release    Notification Manager  latest release    Data stream plotter  latest release    DataKit  latest release    mCerebrum (Study)  latest release",
            "title": "List of mCerebrum Apps"
        },
        {
            "location": "/software/#supported-by",
            "text": "GitHub    JetBrains - IntelliJ IDEA",
            "title": "Supported by"
        },
        {
            "location": "/software/releasenotes/",
            "text": "Software Release notes\n\n\n1.2.0 - 2016.08.17\n\n\nDescription\n\n\nThis release is primarily a bug fix release and fixes system stability\nproblems that affect all of mCerebrum's applications\n\n\nFeatures added\n\n\nCapabilities\n\n\n\n\nNew data quality metric for improved incentive payment accuracy\n\n\nInternal restructuring of wrist sensor data in anticipation MotionSense\n\n\nImproved software management and upgrade process\n\n\n\n\nBiomarkers\n\n\n\n\nSmoking episodes\n\n\nDriving/riding in a vehicle\n\n\n\n\nBugs fixed\n\n\n\n\nDatapoint corruption\n\n\nHigh-frequency data logging changes to reduce the load on the system\n\n\nApplication slowdown and crashing after 5+ hours\n\n\nApplication crash and restart problems\n\n\nPrompts during physical activity restricted\n\n\n\n\n1.0.0 - 2016.06.15\n\n\nDescription\n\n\nInitial release of the mCerebrum application suite.  This release is designed\nto support various smoking cessation studies.\n\n\nFeatures added\n\n\nCapabilities\n\n\n\n\nAutoSense mCerebrum data interface\n\n\nMicrosoft Band mCerebrum data interface\n\n\nSmartphone data interface\n\n\nMood Surfing application\n\n\nThought Shakeup application\n\n\nSupport for calling third-party applications\n\n\nParticipant application interface\n\n\nParticipant self-report\n\n\nTriggered prompting\n\n\nSensor\n\n\nRandom\n\n\nScheduled\n\n\n\n\n\n\nEcological momentary assessment (EMA)\n\n\nEcological momentary intervention (EMI)\n\n\nNotification management system\n\n\nStudy coordinator interface\n\n\nCloud data uploader\n\n\nHighly customizable application suite via JSON\n\n\nIn-application help including text and video\n\n\n\n\nBiomarkers\n\n\n\n\nStress probability\n\n\nStress episodes\n\n\nActivity\n\n\n\n\nBugs fixed\n\n\n\n\nNone: initial release",
            "title": "Release Notes"
        },
        {
            "location": "/software/releasenotes/#software-release-notes",
            "text": "",
            "title": "Software Release notes"
        },
        {
            "location": "/software/releasenotes/#120-20160817",
            "text": "",
            "title": "1.2.0 - 2016.08.17"
        },
        {
            "location": "/software/releasenotes/#description",
            "text": "This release is primarily a bug fix release and fixes system stability\nproblems that affect all of mCerebrum's applications",
            "title": "Description"
        },
        {
            "location": "/software/releasenotes/#features-added",
            "text": "",
            "title": "Features added"
        },
        {
            "location": "/software/releasenotes/#capabilities",
            "text": "New data quality metric for improved incentive payment accuracy  Internal restructuring of wrist sensor data in anticipation MotionSense  Improved software management and upgrade process",
            "title": "Capabilities"
        },
        {
            "location": "/software/releasenotes/#biomarkers",
            "text": "Smoking episodes  Driving/riding in a vehicle",
            "title": "Biomarkers"
        },
        {
            "location": "/software/releasenotes/#bugs-fixed",
            "text": "Datapoint corruption  High-frequency data logging changes to reduce the load on the system  Application slowdown and crashing after 5+ hours  Application crash and restart problems  Prompts during physical activity restricted",
            "title": "Bugs fixed"
        },
        {
            "location": "/software/releasenotes/#100-20160615",
            "text": "",
            "title": "1.0.0 - 2016.06.15"
        },
        {
            "location": "/software/releasenotes/#description_1",
            "text": "Initial release of the mCerebrum application suite.  This release is designed\nto support various smoking cessation studies.",
            "title": "Description"
        },
        {
            "location": "/software/releasenotes/#features-added_1",
            "text": "",
            "title": "Features added"
        },
        {
            "location": "/software/releasenotes/#capabilities_1",
            "text": "AutoSense mCerebrum data interface  Microsoft Band mCerebrum data interface  Smartphone data interface  Mood Surfing application  Thought Shakeup application  Support for calling third-party applications  Participant application interface  Participant self-report  Triggered prompting  Sensor  Random  Scheduled    Ecological momentary assessment (EMA)  Ecological momentary intervention (EMI)  Notification management system  Study coordinator interface  Cloud data uploader  Highly customizable application suite via JSON  In-application help including text and video",
            "title": "Capabilities"
        },
        {
            "location": "/software/releasenotes/#biomarkers_1",
            "text": "Stress probability  Stress episodes  Activity",
            "title": "Biomarkers"
        },
        {
            "location": "/software/releasenotes/#bugs-fixed_1",
            "text": "None: initial release",
            "title": "Bugs fixed"
        },
        {
            "location": "/software/testingguidelines/",
            "text": "Software Testing Guidelines\n\n\nThe purpose of this procedure is to provide a set of recommendations for someone evaluating the platform to both get he/she up to speed on some of the capabilities and to ensure the basic functionality is functioning properly.\n\n\nmCerebrum (Study Application)\n\n\nSensors\n\n\nAutoSense\n\n\nMicrosoft Band\n\n\nPhone\n\n\nEMA\n\n\nEMI",
            "title": "Testing Guidelines"
        },
        {
            "location": "/software/testingguidelines/#software-testing-guidelines",
            "text": "The purpose of this procedure is to provide a set of recommendations for someone evaluating the platform to both get he/she up to speed on some of the capabilities and to ensure the basic functionality is functioning properly.",
            "title": "Software Testing Guidelines"
        },
        {
            "location": "/software/testingguidelines/#mcerebrum-study-application",
            "text": "",
            "title": "mCerebrum (Study Application)"
        },
        {
            "location": "/software/testingguidelines/#sensors",
            "text": "",
            "title": "Sensors"
        },
        {
            "location": "/software/testingguidelines/#autosense",
            "text": "",
            "title": "AutoSense"
        },
        {
            "location": "/software/testingguidelines/#microsoft-band",
            "text": "",
            "title": "Microsoft Band"
        },
        {
            "location": "/software/testingguidelines/#phone",
            "text": "",
            "title": "Phone"
        },
        {
            "location": "/software/testingguidelines/#ema",
            "text": "",
            "title": "EMA"
        },
        {
            "location": "/software/testingguidelines/#emi",
            "text": "",
            "title": "EMI"
        },
        {
            "location": "/contributing/",
            "text": "Contributing guidelines\n\n\nThank you for your interest in helping us with the MD2K software platforms.  We always welcome new contributions in any form including:\n\n\n\n\nBug reports regarding the software, documentation, website, etc...\n\n\nDocumentation improvements, tutorials, examples\n\n\nCode patches and new features\n\n\n\n\nGetting started\n\n\nPlease join and explore our \nmailing list\n.  This is all our discussions occur regarding the MD2K software projects.\n\n\nWhat can I help with\n\n\nWe try to keep all open issues for MD2K software on \nJIRA\n but please ask on the mailing list before starting work on any issues.\n\n\nCode contribution process\n\n\nWhile contributing to any MD2K software modules, you will encounter a variety of coding styles, frameworks, and principles.  The most important thing to do is to communicate with the development teams throughout the whole process.\n\n\nBefore you start the work\n\n\nMost issues should be brought up in the \nmailing list\n. After discussion, a JIRA issue will be created\n\n\nCreating the contribution as a GitHub Pull request\n\n\nMD2K utilizes \nGitHub's Pull Requests\n as the primary mechanism to accept changes: fork the specific MD2K software repository, make your changes, and send a pull request.\n\n\n\n\nFork a MD2K repository\n\n\nCreate a branch\n\n\nMake changes on your local machine\n\n\nMerge the master branch into your branch\n\n\nPush commits into your remote forked repository\n\n\nSend pull request to the MD2K team\n\n\nParticipate in the code review process on GitHub\n\n\n\n\nFork repository\n\n\nGoto the appropriate \nGitHub repository\n and click the \"Fork\" button to have your own copy.  Clone this onto your local machine:\n\n$ git clone https://github.com/[YOUR_GITHUB_ID]/[REPOSITORY_NAME].github\n\n\n\n\n\nAdd a remote upstream to your repository:\n\n$ git remote add upstream https://github.com/MD2Korg/[REPOSITORY_NAME]\n\n\n\n\n\nConfigure your name and email if necessary:\n\n$ git config user.name \nFirstName LastName\n\n$ git config user.email email@domain.com\n\n\n\n\n\nCreate a branch to work with\n\n\nEnsure that the issue you are going to solve is allocated and assigned in the \nJIRA\n issue tracker.  Create a branch to address the issue and the name should reference the JIRA issue, e.g., MD2K-[ISSUE NUMBER].\n\n\nMake local changes\n\n\nWrite code and make commits and usual.  Code should contain appropriate licensing in headers and ensure that existing tests pass.\n\n\nMerge the master branch into your branch\n\n\nPrior to sending a pull request, you should ensure that your branch contain the latest changes.  Run the following:\n\n$ git fetch upstream\n$ git checkout [YOUR_BRANCH] # Skip the step if you are already on your branch\n$ git merge upstream/master\n\n\n\n\n\nPlease resolve all conflicts that arise and test your merged code so that it does not break anything.\n\n\nAs a courtesy to the merger, you should rebase to master and squash all the commits from your PR into one:\n\n# rebase\n$ git rebase -i upstream/master\n\n\n\n\n\nIn the rebase process, make sure that the contribution is squashed to a single commit. From the list of commits, \"pick\" the commit in the first line (the oldest), and \"squash\" the commits in the remaining lines:\n\npick   7387a49 Comment for first commit\nsquash 3371411 Comment for second commit\nsquash 9bf956d Comment for third commit\n\n\n\n\n\nFor more information, please see \nchapter 3\n and \nchapter 4\n of the \nGit Book\n.\n\n\nDuring this process, git will allow you to edit the commit message for the final, squashed commit and it will serve as the description of the pull request.  A common template for the commit message is:\n\n[MD2K-JIRA_ISSUE_NUMBER] Title of the JIRA issue\n\nDescription of issues addressed:\n  * Something\n  * Something else\n  * ...\n\n\n\n\n\nPush commits into your remote repository\n\n\nAlmost done, push your commits to GitHub.\n\n$ git push origin head\n\n\n\n\n\nSend a pull request\n\n\nPlease read \nthis\n for more information about pull requests.  Go to your repository on the GitHub website and click the button \"Compare \n Pull request\".  You will be given an option to choose which branches to compare and merge, choose the base as the MD2Korg repository master branch and the head as [your_alias]:[branch_name].  Feel free to edit the description with more details.\n\n\nPlease update the JIRA issue with a link to the Pull Request to alert the MD2K team to start a code review process.\n\n\nCode review\n\n\nWe utilize the GitHub commenting system on Pull Requests for the code review and once this process is complete, the MD2K team will squash and merge your contribution into the MD2K codebase.  Thank you for your effort and support.",
            "title": "Contributing"
        },
        {
            "location": "/contributing/#contributing-guidelines",
            "text": "Thank you for your interest in helping us with the MD2K software platforms.  We always welcome new contributions in any form including:   Bug reports regarding the software, documentation, website, etc...  Documentation improvements, tutorials, examples  Code patches and new features",
            "title": "Contributing guidelines"
        },
        {
            "location": "/contributing/#getting-started",
            "text": "Please join and explore our  mailing list .  This is all our discussions occur regarding the MD2K software projects.",
            "title": "Getting started"
        },
        {
            "location": "/contributing/#what-can-i-help-with",
            "text": "We try to keep all open issues for MD2K software on  JIRA  but please ask on the mailing list before starting work on any issues.",
            "title": "What can I help with"
        },
        {
            "location": "/contributing/#code-contribution-process",
            "text": "While contributing to any MD2K software modules, you will encounter a variety of coding styles, frameworks, and principles.  The most important thing to do is to communicate with the development teams throughout the whole process.",
            "title": "Code contribution process"
        },
        {
            "location": "/contributing/#before-you-start-the-work",
            "text": "Most issues should be brought up in the  mailing list . After discussion, a JIRA issue will be created",
            "title": "Before you start the work"
        },
        {
            "location": "/contributing/#creating-the-contribution-as-a-github-pull-request",
            "text": "MD2K utilizes  GitHub's Pull Requests  as the primary mechanism to accept changes: fork the specific MD2K software repository, make your changes, and send a pull request.   Fork a MD2K repository  Create a branch  Make changes on your local machine  Merge the master branch into your branch  Push commits into your remote forked repository  Send pull request to the MD2K team  Participate in the code review process on GitHub",
            "title": "Creating the contribution as a GitHub Pull request"
        },
        {
            "location": "/contributing/#fork-repository",
            "text": "Goto the appropriate  GitHub repository  and click the \"Fork\" button to have your own copy.  Clone this onto your local machine: $ git clone https://github.com/[YOUR_GITHUB_ID]/[REPOSITORY_NAME].github   Add a remote upstream to your repository: $ git remote add upstream https://github.com/MD2Korg/[REPOSITORY_NAME]   Configure your name and email if necessary: $ git config user.name  FirstName LastName \n$ git config user.email email@domain.com",
            "title": "Fork repository"
        },
        {
            "location": "/contributing/#create-a-branch-to-work-with",
            "text": "Ensure that the issue you are going to solve is allocated and assigned in the  JIRA  issue tracker.  Create a branch to address the issue and the name should reference the JIRA issue, e.g., MD2K-[ISSUE NUMBER].",
            "title": "Create a branch to work with"
        },
        {
            "location": "/contributing/#make-local-changes",
            "text": "Write code and make commits and usual.  Code should contain appropriate licensing in headers and ensure that existing tests pass.",
            "title": "Make local changes"
        },
        {
            "location": "/contributing/#merge-the-master-branch-into-your-branch",
            "text": "Prior to sending a pull request, you should ensure that your branch contain the latest changes.  Run the following: $ git fetch upstream\n$ git checkout [YOUR_BRANCH] # Skip the step if you are already on your branch\n$ git merge upstream/master   Please resolve all conflicts that arise and test your merged code so that it does not break anything.  As a courtesy to the merger, you should rebase to master and squash all the commits from your PR into one: # rebase\n$ git rebase -i upstream/master   In the rebase process, make sure that the contribution is squashed to a single commit. From the list of commits, \"pick\" the commit in the first line (the oldest), and \"squash\" the commits in the remaining lines: pick   7387a49 Comment for first commit\nsquash 3371411 Comment for second commit\nsquash 9bf956d Comment for third commit   For more information, please see  chapter 3  and  chapter 4  of the  Git Book .  During this process, git will allow you to edit the commit message for the final, squashed commit and it will serve as the description of the pull request.  A common template for the commit message is: [MD2K-JIRA_ISSUE_NUMBER] Title of the JIRA issue\n\nDescription of issues addressed:\n  * Something\n  * Something else\n  * ...",
            "title": "Merge the master branch into your branch"
        },
        {
            "location": "/contributing/#push-commits-into-your-remote-repository",
            "text": "Almost done, push your commits to GitHub. $ git push origin head",
            "title": "Push commits into your remote repository"
        },
        {
            "location": "/contributing/#send-a-pull-request",
            "text": "Please read  this  for more information about pull requests.  Go to your repository on the GitHub website and click the button \"Compare   Pull request\".  You will be given an option to choose which branches to compare and merge, choose the base as the MD2Korg repository master branch and the head as [your_alias]:[branch_name].  Feel free to edit the description with more details.  Please update the JIRA issue with a link to the Pull Request to alert the MD2K team to start a code review process.",
            "title": "Send a pull request"
        },
        {
            "location": "/contributing/#code-review",
            "text": "We utilize the GitHub commenting system on Pull Requests for the code review and once this process is complete, the MD2K team will squash and merge your contribution into the MD2K codebase.  Thank you for your effort and support.",
            "title": "Code review"
        },
        {
            "location": "/help/",
            "text": "Getting Help\n\n\nResources for getting help with mCerebrum and Cerebral Cortex are available in the following locations:\n\n\n\n\nMD2K.org/software/softwareuserguides/\n\n\ndiscuss.md2k.org\n\n\n\n\nThe discussion site is our preferred way to support the platforms, instead of email, as it allows for others to benefit from the discussions.",
            "title": "Getting Help"
        },
        {
            "location": "/help/#getting-help",
            "text": "Resources for getting help with mCerebrum and Cerebral Cortex are available in the following locations:   MD2K.org/software/softwareuserguides/  discuss.md2k.org   The discussion site is our preferred way to support the platforms, instead of email, as it allows for others to benefit from the discussions.",
            "title": "Getting Help"
        },
        {
            "location": "/data_protection/",
            "text": "Protection of Sensitive Information\n\n\nThe MD2K platform is designed to encrypt all data both at rest and in transport.  mCerebrum provides inter-app data protections to prevent unauthorized services from retrieving information from Data Kit without appropriate security credentials.  Data Kit ensures that all data persisted on the phone is stored in on an encrypted storage device in a  SQLite database.  This database can only be read upon providing an correct passphrase on the phone that encrypted the storage medium.  This prevents the removal of the data from the smartphone without utilizing built-in Android functionality.\n\n\nCerebral Cortex provides an encrypted API for data transport from mCerebrum to our cloud services.  This API follows standard industry practices and utilizes HTTPS with NGINX handling the SSL certificates for the internal services and can be easily adapted to the AWS architecture. Data is deidentified as much as possible before being stored within the Cerebral Cortex system.",
            "title": "Data Protection"
        },
        {
            "location": "/data_protection/#protection-of-sensitive-information",
            "text": "The MD2K platform is designed to encrypt all data both at rest and in transport.  mCerebrum provides inter-app data protections to prevent unauthorized services from retrieving information from Data Kit without appropriate security credentials.  Data Kit ensures that all data persisted on the phone is stored in on an encrypted storage device in a  SQLite database.  This database can only be read upon providing an correct passphrase on the phone that encrypted the storage medium.  This prevents the removal of the data from the smartphone without utilizing built-in Android functionality.  Cerebral Cortex provides an encrypted API for data transport from mCerebrum to our cloud services.  This API follows standard industry practices and utilizes HTTPS with NGINX handling the SSL certificates for the internal services and can be easily adapted to the AWS architecture. Data is deidentified as much as possible before being stored within the Cerebral Cortex system.",
            "title": "Protection of Sensitive Information"
        },
        {
            "location": "/contributors/",
            "text": "Bios of Contributors\n\n\nTimothy Hnat, PhD\n\n\nDr. Hnat is Chief Software Architect for the MD2K Center. He previously served as Assistant Professor of Computer Science at the University of Memphis. His research interests cover several areas of the construction and evaluation of distributed systems, including compilers, programming languages, networking, and wireless sensor networks. He seeks to harness the potential of distributed systems to affect and interact with the physical world to address mHealth issues.\n\n\nMani Srivastava, PhD\n\n\nDr. Srivastava is a Professor of Electrical Engineering and Computer Science at the University of California, Los Angeles. His research is broadly in the area of networked human-cyber-physical systems, and spans problems across the entire spectrum of applications, architectures, algorithms, and technologies. His current interests include issues of sensing, privacy, security, data quality, and variability in the context of applications in mHealth and sustainability. He is a deputy director of NSF Expeditions on Variability and is the lead investigator on an NSF Cyber Physical Systems Frontier Project called RoseLine. His works have been cited extensively (over 30,000 times) and have won several best paper awards. He has served as editor-in-chief of IEEE Transaction on Mobile Computing and the ACM Mobile Computing and Communication Review. He is a Fellow of IEEE.\n\n\nSantosh Kumar, PhD\n\n\nDr. Kumar is the Lillian and Morrie Moss Chair of Excellence Professor in the Department of Computer Science at the University of Memphis. He received his Ph.D. in Computer Science and Engineering from The Ohio State University in 2006, where his dissertation won a presidential fellowship. In 2010, the Popular Science magazine named him one of America\u2019s ten most brilliant scientists under the age of 38 (called \u201cBrilliant Ten\u201d). In 2011, he chaired the \u201cmHealth Evidence\u201d meeting jointly organized by NIH, NSF, RWJF, and McKesson Foundation to establish evidence requirements for mHealth. In 2013, he was invited to meet with the NIH Director to advise him on NIH efforts in the area of mHealth and was invited to the White House to give a talk on the future of Biosensors. In 2014, he co-organized and co-chaired the NSF-NIH Workshop on Computing Challenges in Future Mobile Health (mHealth) Systems and Applications.\n\n\nSyed Monowar Hossain\n\n\nMr. Hossain is Lead Software Engineer for the MD2K Center. He is a Ph.D. Student in the Department of Computer Science at the University of Memphis.  He has 4+ years of experience in designing, implementing, integrating, testing and supporting mHealth applications to conduct research studies using wearable sensors for mobile devices on the Android platform. His research interest is on real time inference of different user behavior and context from physiological measurements collected from body worn sensors.",
            "title": "Contributors"
        },
        {
            "location": "/contributors/#bios-of-contributors",
            "text": "",
            "title": "Bios of Contributors"
        },
        {
            "location": "/contributors/#timothy-hnat-phd",
            "text": "Dr. Hnat is Chief Software Architect for the MD2K Center. He previously served as Assistant Professor of Computer Science at the University of Memphis. His research interests cover several areas of the construction and evaluation of distributed systems, including compilers, programming languages, networking, and wireless sensor networks. He seeks to harness the potential of distributed systems to affect and interact with the physical world to address mHealth issues.",
            "title": "Timothy Hnat, PhD"
        },
        {
            "location": "/contributors/#mani-srivastava-phd",
            "text": "Dr. Srivastava is a Professor of Electrical Engineering and Computer Science at the University of California, Los Angeles. His research is broadly in the area of networked human-cyber-physical systems, and spans problems across the entire spectrum of applications, architectures, algorithms, and technologies. His current interests include issues of sensing, privacy, security, data quality, and variability in the context of applications in mHealth and sustainability. He is a deputy director of NSF Expeditions on Variability and is the lead investigator on an NSF Cyber Physical Systems Frontier Project called RoseLine. His works have been cited extensively (over 30,000 times) and have won several best paper awards. He has served as editor-in-chief of IEEE Transaction on Mobile Computing and the ACM Mobile Computing and Communication Review. He is a Fellow of IEEE.",
            "title": "Mani Srivastava, PhD"
        },
        {
            "location": "/contributors/#santosh-kumar-phd",
            "text": "Dr. Kumar is the Lillian and Morrie Moss Chair of Excellence Professor in the Department of Computer Science at the University of Memphis. He received his Ph.D. in Computer Science and Engineering from The Ohio State University in 2006, where his dissertation won a presidential fellowship. In 2010, the Popular Science magazine named him one of America\u2019s ten most brilliant scientists under the age of 38 (called \u201cBrilliant Ten\u201d). In 2011, he chaired the \u201cmHealth Evidence\u201d meeting jointly organized by NIH, NSF, RWJF, and McKesson Foundation to establish evidence requirements for mHealth. In 2013, he was invited to meet with the NIH Director to advise him on NIH efforts in the area of mHealth and was invited to the White House to give a talk on the future of Biosensors. In 2014, he co-organized and co-chaired the NSF-NIH Workshop on Computing Challenges in Future Mobile Health (mHealth) Systems and Applications.",
            "title": "Santosh Kumar, PhD"
        },
        {
            "location": "/contributors/#syed-monowar-hossain",
            "text": "Mr. Hossain is Lead Software Engineer for the MD2K Center. He is a Ph.D. Student in the Department of Computer Science at the University of Memphis.  He has 4+ years of experience in designing, implementing, integrating, testing and supporting mHealth applications to conduct research studies using wearable sensors for mobile devices on the Android platform. His research interest is on real time inference of different user behavior and context from physiological measurements collected from body worn sensors.",
            "title": "Syed Monowar Hossain"
        },
        {
            "location": "/references/",
            "text": "References\n\n\n\n\n\n\nSarker, H., Tyburski, M., Rahman, M., Hovsepian, K., Sharmin, M., Epstein, D., Preston, K., Furr-Holden, D., Nahum-Shani, I., al\u2019Absi, M., and Kumar, S. Finding Significant Stress Episodes in a Discontinuous Time-series of Rapidly Varying Mobile Sensor Data. ACM Conference on Human Computer Interaction (CHI 2016).\n\n\n\n\n\n\nMoushumi Sharmin, Andrew Raij, David Epstein, Inbal Nahum-Shani, J Gayle Beck, Sudip Vhaduri, Kenzie Preston, and Santosh Kumar. Visualization of Time-Series Sensor Data to Inform the Design of Just-In-Time Adaptive Stress Interventions, ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp 2015).\n\n\n\n\n\n\nKaren Hovsepian, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, and Santosh Kumar. cStress: Towards a Gold Standard for Continuous Stress Assessment in the Mobile Environment, ACM International Joint Conference on Pervasive and Ubiquitous Computing ((UbiComp 2015).\n\n\n\n\n\n\nNazir Saleheen, Amin A. Ali, Syed Monowar Hossain, Hillol Sarker, Soujanya Chatterjee, Benjamin Marlin, Emre Ertin, Mustafa al\u2019Absi, and Santosh Kumar. puffMarker: A Multi-sensor Approach for Pinpointing the Timing of First Lapse in Smoking Cessation, ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp 2015).\n\n\n\n\n\n\nKurt Plarre, Andrew Raij, Syed Monowar Hossain, Amin Ahsan Ali, Motohiro Nakajima, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar, Marcia Scott, Daniel Siewiorek, Asim Smailagic, Lorentz E Wittmers Jr. Continuous in-the-field measurement of heart rate: correlates of drug use, craving, stress, and mood in polydrug users, 10\nth\n International Conference on Information Processing in Sensor Networks (IPSN), 2011\n\n\n\n\n\n\nKumar, M. al\u2019Absi, J.G. Beck, E. Ertin, M. Scott. Behavioral Monitoring and Assessment via Mobile Sensing Technologies. In: Marsch,; Lord,; Dallery, (Ed.): Leveraging Technology to Transform Behavioral Healthcare, pp. 27-39, Oxford Press, 2014.\n\n\n\n\n\n\nM Rahman, R. Bari, A.A. Ali, M. Sharmin, A. Raij, K. Hovsepian, S.M. Hossain, E. Ertin, A. Kennedy, D.H. Epstein, K.L. Preston, M. Jobes, J.G. Beck, S. Kedia, K.D. Ward, M. al\u2019Absi, S. Kumar. Are we there yet?: feasibility of continuous stress assessment via wireless physiological sensors, 5\nth\n ACM Conference on Bioinformatics, Computational Biology, and Health Informatics, pp. 479\u2013488, ACM 2014.\n\n\n\n\n\n\nVhaduri, A.A. Ali, M. Sharmin, K. Hovsepian, S. Kumar. (2014) Estimating Drivers\u2019 Stress from GPS Traces, 6\nth\n International Conference on Automotive User Interfaces and Interactive Vehicular Applications (AutomotiveUI \u201914)\nSarker, M. Sharmin, A.A. Ali, M.M. Rahman, R. Bari, S.M. Hossain, S. Kumar. Assessing the Availability of Users to\n\n\n\n\n\n\nEngage in Just-in-time Intervention in the Natural Environment. 2014 ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp \u201814).\n\n\n\n\n\n\nM. Hossain, A.A. Ali, M.M. Rahman, E. Ertin, D. Epstein, A. Kennedy, K. Preston, A. Umbricht, Y. Chen, S. Kumar. Identifying Drug (Cocaine) Intake Events from Acute Physiological Response in the Presence of Free-living Physical Activity,  13\nth\n ACM/IEE Conference on Information Processing in Sensor Networks, 2014.\n\n\n\n\n\n\nJu Gao, Emre Ertin, Sudhakar Kumar, Mustafa al\u2019Absi. Contactless sensing of physiological signals using wideband RF probes, Asilomar Conference on Signals, Systems and Computers, 2013.\n\n\n\n\n\n\nMustafa Al\u2019Absi, Motohiro Nakajima, Bingshuo Li, Santosh Kumar, Emre Ertin, Marcia S Scott, Lorentz Wittmers. The Assessment of Psychophysiological Response to Laboratory Stress Using A Wireless Ambulatory System: A Validation Study, Vol. 50, Psychophysiology, 2013.\n\n\n\n\n\n\nMotohiro Nakajima, Santosh Kumar, Lorentz Wittmers, Marcia S Scott, Mustafa al\u2019Absi. Psychophysiological responses to stress following alcohol intake in social drinkers who are at risk of hazardous drinking, Vol. 93, Issue 1, Biological Psychology, 2013\n\n\n\n\n\n\nMotohiro Nakajima, Bingshuo Li, Santosh Kumar, Emre Ertin, Marcia S Scott, Lorentz Wittmers, Mustafa al\u2019Absi. Validating a Novel Wireless Ambulatory Technology in the Assessment of Stress: A Pilot Study, Vol 73, Issue 3, Psychosomatic Medicine, 2013\n\n\n\n\n\n\nAmin Ahsan Ali, Syed Monowar Hossain, Karen Hovsepian, Md Mahbubur Rahman, Kurt Plarre, Santosh Kumar. mPuff: automated detection of cigarette smoking puffs from respiration measurements, 11\nth\n international conference on Information Processing in Sensor Networks, 2012\n\n\n\n\n\n\nSantosh Kumar, Mustafa al\u2019Absi, Emre Ertin. Automated Assessment of Naturally Occurring Conversations, Vol 23, Annals of Behavioral Medicine, 2012\n\n\n\n\n\n\nEmre Ertin, Nathan Stohs, Santosh Kumar, Andrew Raij, Mustafa al\u2019Absi, Siddharth Shah. AutoSense: unobtrusively wearable sensor suite for inferring the onset, causality, and consequences of stress in the field. 9\nth\n ACM Conference on Embedded Networked Sensor Systems. 2011\n\n\n\n\n\n\nMd Mahbubur Rahman, Amin Ahsan Ali, Kurt Plarre, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar. mConverse: inferring conversation episodes from respiratory measurements collected in the field,  2\nnd\n Conference on Wireless Health, 2011\n\n\n\n\n\n\nMohamed Musthag, Andrew Raij, Deepak Ganesan, Santosh Kumar, Saul Shiffman. Exploring micro-incentive strategies for participant compensation in high-burden studies, 13\nth\n international conference on Ubiquitous Computing (UbiComp 2011).\n\n\n\n\n\n\nMotohiro Nakajima, Mustafa al\u2019Absi, Santosh Kumar, Emre Ertin, Angela K George, Nancy Dold, Lorentz Wittmers, Subjective and Cortisol Responses to Stress Following Alcohol Intake in Individuals with Hazardous Alcohol Use, Vol. 48, Psychophysiology, 2011.\n\n\n\n\n\n\nAndrew Raij, Animikh Ghosh, Santosh Kumar, Mani Srivastava. Privacy risks emerging from the adoption of innocuous wearable sensors in the mobile environment, SIGCHI Conference on Human Factors in Computing Systems, 2011.\n\n\n\n\n\n\nMd Mahbubur Rahman, Amin Ahsan Ali, Andrew Raij, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar. Demo abstract: Online detection of speaking from respiratory measurements collected in the natural environment, 10\nth\n International Conference on Information Processing in Sensor Networks (IPSN), 2011.\n\n\n\n\n\n\nKurt Plarre, Andrew Raij, Syed Monowar Hossain, Amin Ahsan Ali, Motohiro Nakajima, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar, Marcia Scott, Daniel Siewiorek, Asim Smailagic, Lorentz E Wittmers Jr. Continuous inference of psychological stress from sensory measurements collected in the natural environment, 10\nth\n International Conference on Information Processing in Sensor Networks (IPSN), 2011.\n\n\n\n\n\n\nKurt Plarre, Andrew Raij, Santanu Guha, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar. Automated detection of sensor detachments for physiological sensing in the wild, Wireless Health 2010.\n\n\n\n\n\n\nNan Hua, Ashwin Lall, Justin Romberg, Jun Jim Xu, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar, Shikhar Suri. Just-in-time sampling and pre-filtering for wearable physiological sensors: going from days to weeks of operation on a single charge, Wireless Health 2010\n\n\n\n\n\n\nAndrew Raij, Patrick Blitz, Amin Ahsan Ali, Scott Fisk, Brian French, Somnath Mitra, Motohiro Nakajima, M Nuyen, Kurt Plarre, Mahbubur Rahman, Siddharth Shah, Yuan Shi, Nathan Stohs, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar, Marcia Scott, Daniel Siewiorek, Asim Smailagic. mStress: Supporting Continuous Collection of Objective and Subjective Measures of Psychosocial Stress on Mobile Devices, Technical Report No. CS-10-004, Department of Computer Science, University of Memphis, 2010\n\n\n\n\n\n\nYuan Shi, Minh Hoai Nguyen, Patrick Blitz, Brian French, Scott Fisk, Fernando De la Torre, Asim Smailagic, Daniel P Siewiorek, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar. Personalized stress detection from physiological measurements, International Symposium on Quality of Life Technology, 2010",
            "title": "References"
        },
        {
            "location": "/references/#references",
            "text": "Sarker, H., Tyburski, M., Rahman, M., Hovsepian, K., Sharmin, M., Epstein, D., Preston, K., Furr-Holden, D., Nahum-Shani, I., al\u2019Absi, M., and Kumar, S. Finding Significant Stress Episodes in a Discontinuous Time-series of Rapidly Varying Mobile Sensor Data. ACM Conference on Human Computer Interaction (CHI 2016).    Moushumi Sharmin, Andrew Raij, David Epstein, Inbal Nahum-Shani, J Gayle Beck, Sudip Vhaduri, Kenzie Preston, and Santosh Kumar. Visualization of Time-Series Sensor Data to Inform the Design of Just-In-Time Adaptive Stress Interventions, ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp 2015).    Karen Hovsepian, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, and Santosh Kumar. cStress: Towards a Gold Standard for Continuous Stress Assessment in the Mobile Environment, ACM International Joint Conference on Pervasive and Ubiquitous Computing ((UbiComp 2015).    Nazir Saleheen, Amin A. Ali, Syed Monowar Hossain, Hillol Sarker, Soujanya Chatterjee, Benjamin Marlin, Emre Ertin, Mustafa al\u2019Absi, and Santosh Kumar. puffMarker: A Multi-sensor Approach for Pinpointing the Timing of First Lapse in Smoking Cessation, ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp 2015).    Kurt Plarre, Andrew Raij, Syed Monowar Hossain, Amin Ahsan Ali, Motohiro Nakajima, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar, Marcia Scott, Daniel Siewiorek, Asim Smailagic, Lorentz E Wittmers Jr. Continuous in-the-field measurement of heart rate: correlates of drug use, craving, stress, and mood in polydrug users, 10 th  International Conference on Information Processing in Sensor Networks (IPSN), 2011    Kumar, M. al\u2019Absi, J.G. Beck, E. Ertin, M. Scott. Behavioral Monitoring and Assessment via Mobile Sensing Technologies. In: Marsch,; Lord,; Dallery, (Ed.): Leveraging Technology to Transform Behavioral Healthcare, pp. 27-39, Oxford Press, 2014.    M Rahman, R. Bari, A.A. Ali, M. Sharmin, A. Raij, K. Hovsepian, S.M. Hossain, E. Ertin, A. Kennedy, D.H. Epstein, K.L. Preston, M. Jobes, J.G. Beck, S. Kedia, K.D. Ward, M. al\u2019Absi, S. Kumar. Are we there yet?: feasibility of continuous stress assessment via wireless physiological sensors, 5 th  ACM Conference on Bioinformatics, Computational Biology, and Health Informatics, pp. 479\u2013488, ACM 2014.    Vhaduri, A.A. Ali, M. Sharmin, K. Hovsepian, S. Kumar. (2014) Estimating Drivers\u2019 Stress from GPS Traces, 6 th  International Conference on Automotive User Interfaces and Interactive Vehicular Applications (AutomotiveUI \u201914)\nSarker, M. Sharmin, A.A. Ali, M.M. Rahman, R. Bari, S.M. Hossain, S. Kumar. Assessing the Availability of Users to    Engage in Just-in-time Intervention in the Natural Environment. 2014 ACM International Joint Conference on Pervasive and Ubiquitous Computing (UbiComp \u201814).    M. Hossain, A.A. Ali, M.M. Rahman, E. Ertin, D. Epstein, A. Kennedy, K. Preston, A. Umbricht, Y. Chen, S. Kumar. Identifying Drug (Cocaine) Intake Events from Acute Physiological Response in the Presence of Free-living Physical Activity,  13 th  ACM/IEE Conference on Information Processing in Sensor Networks, 2014.    Ju Gao, Emre Ertin, Sudhakar Kumar, Mustafa al\u2019Absi. Contactless sensing of physiological signals using wideband RF probes, Asilomar Conference on Signals, Systems and Computers, 2013.    Mustafa Al\u2019Absi, Motohiro Nakajima, Bingshuo Li, Santosh Kumar, Emre Ertin, Marcia S Scott, Lorentz Wittmers. The Assessment of Psychophysiological Response to Laboratory Stress Using A Wireless Ambulatory System: A Validation Study, Vol. 50, Psychophysiology, 2013.    Motohiro Nakajima, Santosh Kumar, Lorentz Wittmers, Marcia S Scott, Mustafa al\u2019Absi. Psychophysiological responses to stress following alcohol intake in social drinkers who are at risk of hazardous drinking, Vol. 93, Issue 1, Biological Psychology, 2013    Motohiro Nakajima, Bingshuo Li, Santosh Kumar, Emre Ertin, Marcia S Scott, Lorentz Wittmers, Mustafa al\u2019Absi. Validating a Novel Wireless Ambulatory Technology in the Assessment of Stress: A Pilot Study, Vol 73, Issue 3, Psychosomatic Medicine, 2013    Amin Ahsan Ali, Syed Monowar Hossain, Karen Hovsepian, Md Mahbubur Rahman, Kurt Plarre, Santosh Kumar. mPuff: automated detection of cigarette smoking puffs from respiration measurements, 11 th  international conference on Information Processing in Sensor Networks, 2012    Santosh Kumar, Mustafa al\u2019Absi, Emre Ertin. Automated Assessment of Naturally Occurring Conversations, Vol 23, Annals of Behavioral Medicine, 2012    Emre Ertin, Nathan Stohs, Santosh Kumar, Andrew Raij, Mustafa al\u2019Absi, Siddharth Shah. AutoSense: unobtrusively wearable sensor suite for inferring the onset, causality, and consequences of stress in the field. 9 th  ACM Conference on Embedded Networked Sensor Systems. 2011    Md Mahbubur Rahman, Amin Ahsan Ali, Kurt Plarre, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar. mConverse: inferring conversation episodes from respiratory measurements collected in the field,  2 nd  Conference on Wireless Health, 2011    Mohamed Musthag, Andrew Raij, Deepak Ganesan, Santosh Kumar, Saul Shiffman. Exploring micro-incentive strategies for participant compensation in high-burden studies, 13 th  international conference on Ubiquitous Computing (UbiComp 2011).    Motohiro Nakajima, Mustafa al\u2019Absi, Santosh Kumar, Emre Ertin, Angela K George, Nancy Dold, Lorentz Wittmers, Subjective and Cortisol Responses to Stress Following Alcohol Intake in Individuals with Hazardous Alcohol Use, Vol. 48, Psychophysiology, 2011.    Andrew Raij, Animikh Ghosh, Santosh Kumar, Mani Srivastava. Privacy risks emerging from the adoption of innocuous wearable sensors in the mobile environment, SIGCHI Conference on Human Factors in Computing Systems, 2011.    Md Mahbubur Rahman, Amin Ahsan Ali, Andrew Raij, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar. Demo abstract: Online detection of speaking from respiratory measurements collected in the natural environment, 10 th  International Conference on Information Processing in Sensor Networks (IPSN), 2011.    Kurt Plarre, Andrew Raij, Syed Monowar Hossain, Amin Ahsan Ali, Motohiro Nakajima, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar, Marcia Scott, Daniel Siewiorek, Asim Smailagic, Lorentz E Wittmers Jr. Continuous inference of psychological stress from sensory measurements collected in the natural environment, 10 th  International Conference on Information Processing in Sensor Networks (IPSN), 2011.    Kurt Plarre, Andrew Raij, Santanu Guha, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar. Automated detection of sensor detachments for physiological sensing in the wild, Wireless Health 2010.    Nan Hua, Ashwin Lall, Justin Romberg, Jun Jim Xu, Mustafa al\u2019Absi, Emre Ertin, Santosh Kumar, Shikhar Suri. Just-in-time sampling and pre-filtering for wearable physiological sensors: going from days to weeks of operation on a single charge, Wireless Health 2010    Andrew Raij, Patrick Blitz, Amin Ahsan Ali, Scott Fisk, Brian French, Somnath Mitra, Motohiro Nakajima, M Nuyen, Kurt Plarre, Mahbubur Rahman, Siddharth Shah, Yuan Shi, Nathan Stohs, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar, Marcia Scott, Daniel Siewiorek, Asim Smailagic. mStress: Supporting Continuous Collection of Objective and Subjective Measures of Psychosocial Stress on Mobile Devices, Technical Report No. CS-10-004, Department of Computer Science, University of Memphis, 2010    Yuan Shi, Minh Hoai Nguyen, Patrick Blitz, Brian French, Scott Fisk, Fernando De la Torre, Asim Smailagic, Daniel P Siewiorek, Mustafa al\u2019Absi, Emre Ertin, Thomas Kamarck, Santosh Kumar. Personalized stress detection from physiological measurements, International Symposium on Quality of Life Technology, 2010",
            "title": "References"
        },
        {
            "location": "/license/",
            "text": "License\n\n\nCopyright \n 2015-2016, MD2K\n\n\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n\n\n\n\n\nRedistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n\n\n\n\n\nRedistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n\n\n\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
            "title": "License"
        },
        {
            "location": "/license/#license",
            "text": "Copyright   2015-2016, MD2K  All rights reserved.  Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:    Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.    Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
            "title": "License"
        },
        {
            "location": "/mCerebrum/overview/",
            "text": "mCerebrum\n\n\nAn Open Source Software Suite for Mobile Sensor Data\n\n\n\n\n\n\n\nmCerebrum Overview\n\n\nmCerebrum is an open-source mobile software platform that provides support for reliable real-time data collection from sensors in smartphones and wearables.  The software is fully configurable and can be used with multiple sensors simultaneously to collect a wide variety of data at hundreds of data points per second.\n\n\nEven at this high frequency, our software continuously takes steps to evaluate data quality and maintain the integrity of sensor data by using advanced analytics to convert streaming sensor data into markers of health, behavior, and risk factors (such as stress, smoking, eating and activity).\n\n\nWith mCerebrum, these markers obtained from sensor data can be used to trigger mobile interventions or to solicit self-reports. To fulfill the vision of precision medicine, mCerebrum facilitates novel ways to return health data back to the user to improve their engagement, bringing a modern approach to preventative medicine that stays one step ahead in today\u2019s rapidly changing world.\n\n\nList of mCerebrum Apps\n\n\n\n\n\n\n\n\nApplications\n\n\nDownload\n\n\n\n\n\n\n\n\n\n\nmCerebrum (Study)\n\n\nlatest release\n\n\n\n\n\n\nAutoSense\n\n\nlatest release\n\n\n\n\n\n\nMicrosoft Band\n\n\nlatest release\n\n\n\n\n\n\nPhone Sensor\n\n\nlatest release\n\n\n\n\n\n\nStream Processor\n\n\nlatest release\n\n\n\n\n\n\nMood Surfing\n\n\nlatest release\n\n\n\n\n\n\nThought Shakeup\n\n\nlatest release\n\n\n\n\n\n\nEcological Momentary Assessment (EMA)\n\n\nlatest release\n\n\n\n\n\n\nEMA Scheduler\n\n\nlatest release\n\n\n\n\n\n\nNotification Manager\n\n\nlatest release\n\n\n\n\n\n\nData stream plotter\n\n\nlatest release\n\n\n\n\n\n\nDataKit\n\n\nlatest release\n\n\n\n\n\n\n\n\nSoftware Release Schedule\n\n\n\n\nMajor \nX.0.0\n software updates will occur approximately once per year\n\n\nMinor/Feature \n0.X.0\n updates will occur on the third Wednesday of each month\n\n\nCritical bug fixes \n0.0.X\n will be released as needed\n\n\n\n\n\n\n\n\n\n\nYear\n\n\nMonth\n\n\nRelease Day\n\n\n\n\n\n\n\n\n\n\n2017\n\n\nFebruary\n\n\n02/15/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nMarch\n\n\n03/15/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nApril\n\n\n04/19/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nMay\n\n\n05/17/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nJune\n\n\n06/21/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nJuly\n\n\n07/18/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nAugust\n\n\n08/16/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nSeptember\n\n\n09/20/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nOctober\n\n\n10/18/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nNovember\n\n\n11/15/2017  (Wed)\n\n\n\n\n\n\n2017\n\n\nDecember\n\n\n12/20/2017  (Wed)",
            "title": "Overview"
        },
        {
            "location": "/mCerebrum/overview/#mcerebrum",
            "text": "An Open Source Software Suite for Mobile Sensor Data",
            "title": "mCerebrum"
        },
        {
            "location": "/mCerebrum/overview/#mcerebrum-overview",
            "text": "mCerebrum is an open-source mobile software platform that provides support for reliable real-time data collection from sensors in smartphones and wearables.  The software is fully configurable and can be used with multiple sensors simultaneously to collect a wide variety of data at hundreds of data points per second.  Even at this high frequency, our software continuously takes steps to evaluate data quality and maintain the integrity of sensor data by using advanced analytics to convert streaming sensor data into markers of health, behavior, and risk factors (such as stress, smoking, eating and activity).  With mCerebrum, these markers obtained from sensor data can be used to trigger mobile interventions or to solicit self-reports. To fulfill the vision of precision medicine, mCerebrum facilitates novel ways to return health data back to the user to improve their engagement, bringing a modern approach to preventative medicine that stays one step ahead in today\u2019s rapidly changing world.",
            "title": "mCerebrum Overview"
        },
        {
            "location": "/mCerebrum/overview/#list-of-mcerebrum-apps",
            "text": "Applications  Download      mCerebrum (Study)  latest release    AutoSense  latest release    Microsoft Band  latest release    Phone Sensor  latest release    Stream Processor  latest release    Mood Surfing  latest release    Thought Shakeup  latest release    Ecological Momentary Assessment (EMA)  latest release    EMA Scheduler  latest release    Notification Manager  latest release    Data stream plotter  latest release    DataKit  latest release",
            "title": "List of mCerebrum Apps"
        },
        {
            "location": "/mCerebrum/overview/#software-release-schedule",
            "text": "Major  X.0.0  software updates will occur approximately once per year  Minor/Feature  0.X.0  updates will occur on the third Wednesday of each month  Critical bug fixes  0.0.X  will be released as needed      Year  Month  Release Day      2017  February  02/15/2017  (Wed)    2017  March  03/15/2017  (Wed)    2017  April  04/19/2017  (Wed)    2017  May  05/17/2017  (Wed)    2017  June  06/21/2017  (Wed)    2017  July  07/18/2017  (Wed)    2017  August  08/16/2017  (Wed)    2017  September  09/20/2017  (Wed)    2017  October  10/18/2017  (Wed)    2017  November  11/15/2017  (Wed)    2017  December  12/20/2017  (Wed)",
            "title": "Software Release Schedule"
        },
        {
            "location": "/mCerebrum/gettingStarted/",
            "text": "Getting Started\n\n\nmCerebrum is a suite of several Android applications that are combined with a set of configuration files. All source code is available in \nMD2K's GitHub organization\n.\n\n\nThese instructions will guide you in downloading, installing, and configuring the mCerebrum software suite using the default configuration to collect \nphone sensor data\n.\n\n\nInstallation\n\n\n\n\nDownload the \nlatest version of mCerebrum\n and install the APK file on an Android 5.0+ device.\n\n\nFollow the on-screen instructions on your Android device to complete the installation.\n\n\nWhen the installation is complete, open mCerebrum. You should see the home screen as shown here:\n\n\n\n\n\n\nConfiguration\n\n\n\n\nTap the Settings button (highlighted in red) to begin the setup process.\n\n\nIf prompted to download a configuration file, enter \u201cdefault\u201d and tap OK to use the default mCerebrum configuration file. If you are not prompted, skip this step.\n\n\n\n\nInstall/Update Apps\n\n\nmCerebrum uses a suite of software applications in conjunction with the main mCerebrum interface app. Follow these steps to download the latest versions of all the apps in your configuration of the mCerebrum suite.\n\n\n\n\nFrom the main Settings screen, tap \nConfigure Applications \n Applications\n then tap the Check Updates button at the bottom of the screen.\n\n\nIf any apps listed show a red X icon \n, tap the app in the list then tap \nInstall\n. If any apps listed show a yellow caution icon \n, tap the app in the list then tap \nUpdate\n. (Alternatively, you may tap the \nFix All\n button at the bottom of the screen to begin the installation of all updates at once.)\n\n\nWhen every app shows a green check mark \n, all apps are installed and up-to-date. Tap the \nClose\n button.\n\n\n\n\nSensors Setup\n\n\n\n\nFrom the main Settings screen, tap \nConfigure Applications \n Settings \n PhoneSensor\n.\n\n\nYou will see a list of all the available sensors included with your phone (Battery, Location, Accelerometer, etc.). Tap to toggle on each sensor that you wish to use to collect data.\n\n\nWhen you are finished, tap the \nSave\n button at the bottom of the screen.\n\n\n\n\nNote\n: To ensure high-quality data collection, the GPS feature of the smartphone must be set to High Accuracy Mode in your phone\u2019s main settings (outside of the mCerebrum app).\n\n\nStudy Setup\n\n\n\n\nFrom the main Settings screen, tap \nConfigure Study\n.\n\n\nTap \nUser ID\n and set your desired unique user ID for the participant.\n\n\nTap \nWakeup Time\n and select the time you expect data collection to begin each morning. The participant will receive a prompt to \u201cstart the day\u201d at the time you select.\n\n\nTap \nSleep Time\n and select the time you expect data collection to conclude each day.\n\n\nIf all items on the Study Settings screen show a green check mark beside them, study setup is complete.  Tap the \nSave\n button at the bottom of the screen.\n\n\n\n\nStart Study\n\n\n\n\nFrom the main Settings screen, once Configure Applications and Configure Study show a green checkmark, tap the \nStart Study\n button to begin the study.\n\n\nIf prompted to start the day, tap the \nStart\n button to begin data collection.\n\n\nTap \nClose\n to exit the Settings screen. You should see the mCerebrum home screen below. Once you have tapped to start the day, data collection has begun.\n\n\n\n\n\n\nVisualize Real-Time Data\n\n\n\n\nFrom the mCerebrum home screen, tap the \nPlotter\n button.\n\n\nSelect from the list of available sensors to visualize each set of data in real-time.\n\n\n\n\n\n\nPrivacy\n\n\nPrivacy Control allows users to turn off certain features for a limited period of time.\n\n\n\n\n\n\nFrom the mCerebrum home screen, tap the \nTurn On\n button under the Privacy heading.\n\n\nOn the Privacy Control Settings screen, tap \nSet Privacy Duration\n. Select the amount of time for which you wish to disable the feature(s).\n\n\nNext, tap \nSet Privacy Type\n. Select each of the features you would like to temporarily disable. You will see a check mark appear to confirm the feature is selected. Tap \nOK\n when finished.\n\n\nTap the \nStart\n button to begin the privacy timer.\n\n\nYou will see a countdown timer under the Privacy Status heading to confirm the privacy settings are enabled. When you\nare finished, tap \nClose\n.\n\n\n\n\nExport Data\n\n\nWhen you are ready to export the data you have collected, perform the following steps to save your data to a computer:\n\n\nShut Down All Applications\n\n\n\n\nEnter the main Settings screen by tapping the 3 dots in the upper-right-hand corner of the home screen, then tapping \nSettings\n.\n\n\nTap the \nRunning Apps\n button. (\nNote\n: the study must be started to access running apps.)\n\n\nTap the \nStop All\n button to stop all applications.\n\n\nReturn to the previous screen and tap \nStop Study\n.\n\n\nRestart the phone.\n\n\nWhen the phone restarts, if the mCerebrum app opens, tap \nExit\n to close it. (If mCerebrum does not open, skip this step.)\n\n\nFrom the phone\u2019s home screen, open the DataKit app and ensure it is INACTIVE.\n\n\n\n\n\n\nSave Data to a Computer\n\n\n\n\nConnect the smartphone to a PC using the charging cable.\n\n\nCreate a new folder on your computer. (It may be helpful to use the participant\u2019s user ID as the new folder name.)\n\n\nUsing the computer, navigate to the phone\u2019s org.md2k.datakit folder. \n[Phone \n Android \n data \n org.md2k.datakit]\n\n\nCopy the org.md2k.datakit folder and paste it to the new folder you created on your computer.\n\n\nNavigate to the phone\u2019s log folder. \n[Phone \n log]\n\n\nCopy the log folder and paste it to the new folder you created.\n\n\n\n\nAll data is now exported to the computer.",
            "title": "Getting Started"
        },
        {
            "location": "/mCerebrum/gettingStarted/#getting-started",
            "text": "mCerebrum is a suite of several Android applications that are combined with a set of configuration files. All source code is available in  MD2K's GitHub organization .  These instructions will guide you in downloading, installing, and configuring the mCerebrum software suite using the default configuration to collect  phone sensor data .",
            "title": "Getting Started"
        },
        {
            "location": "/mCerebrum/gettingStarted/#installation",
            "text": "Download the  latest version of mCerebrum  and install the APK file on an Android 5.0+ device.  Follow the on-screen instructions on your Android device to complete the installation.  When the installation is complete, open mCerebrum. You should see the home screen as shown here:",
            "title": "Installation"
        },
        {
            "location": "/mCerebrum/gettingStarted/#configuration",
            "text": "Tap the Settings button (highlighted in red) to begin the setup process.  If prompted to download a configuration file, enter \u201cdefault\u201d and tap OK to use the default mCerebrum configuration file. If you are not prompted, skip this step.",
            "title": "Configuration"
        },
        {
            "location": "/mCerebrum/gettingStarted/#installupdate-apps",
            "text": "mCerebrum uses a suite of software applications in conjunction with the main mCerebrum interface app. Follow these steps to download the latest versions of all the apps in your configuration of the mCerebrum suite.   From the main Settings screen, tap  Configure Applications   Applications  then tap the Check Updates button at the bottom of the screen.  If any apps listed show a red X icon  , tap the app in the list then tap  Install . If any apps listed show a yellow caution icon  , tap the app in the list then tap  Update . (Alternatively, you may tap the  Fix All  button at the bottom of the screen to begin the installation of all updates at once.)  When every app shows a green check mark  , all apps are installed and up-to-date. Tap the  Close  button.",
            "title": "Install/Update Apps"
        },
        {
            "location": "/mCerebrum/gettingStarted/#sensors-setup",
            "text": "From the main Settings screen, tap  Configure Applications   Settings   PhoneSensor .  You will see a list of all the available sensors included with your phone (Battery, Location, Accelerometer, etc.). Tap to toggle on each sensor that you wish to use to collect data.  When you are finished, tap the  Save  button at the bottom of the screen.   Note : To ensure high-quality data collection, the GPS feature of the smartphone must be set to High Accuracy Mode in your phone\u2019s main settings (outside of the mCerebrum app).",
            "title": "Sensors Setup"
        },
        {
            "location": "/mCerebrum/gettingStarted/#study-setup",
            "text": "From the main Settings screen, tap  Configure Study .  Tap  User ID  and set your desired unique user ID for the participant.  Tap  Wakeup Time  and select the time you expect data collection to begin each morning. The participant will receive a prompt to \u201cstart the day\u201d at the time you select.  Tap  Sleep Time  and select the time you expect data collection to conclude each day.  If all items on the Study Settings screen show a green check mark beside them, study setup is complete.  Tap the  Save  button at the bottom of the screen.",
            "title": "Study Setup"
        },
        {
            "location": "/mCerebrum/gettingStarted/#start-study",
            "text": "From the main Settings screen, once Configure Applications and Configure Study show a green checkmark, tap the  Start Study  button to begin the study.  If prompted to start the day, tap the  Start  button to begin data collection.  Tap  Close  to exit the Settings screen. You should see the mCerebrum home screen below. Once you have tapped to start the day, data collection has begun.",
            "title": "Start Study"
        },
        {
            "location": "/mCerebrum/gettingStarted/#visualize-real-time-data",
            "text": "From the mCerebrum home screen, tap the  Plotter  button.  Select from the list of available sensors to visualize each set of data in real-time.",
            "title": "Visualize Real-Time Data"
        },
        {
            "location": "/mCerebrum/gettingStarted/#privacy",
            "text": "Privacy Control allows users to turn off certain features for a limited period of time.    From the mCerebrum home screen, tap the  Turn On  button under the Privacy heading.  On the Privacy Control Settings screen, tap  Set Privacy Duration . Select the amount of time for which you wish to disable the feature(s).  Next, tap  Set Privacy Type . Select each of the features you would like to temporarily disable. You will see a check mark appear to confirm the feature is selected. Tap  OK  when finished.  Tap the  Start  button to begin the privacy timer.  You will see a countdown timer under the Privacy Status heading to confirm the privacy settings are enabled. When you\nare finished, tap  Close .",
            "title": "Privacy"
        },
        {
            "location": "/mCerebrum/gettingStarted/#export-data",
            "text": "When you are ready to export the data you have collected, perform the following steps to save your data to a computer:",
            "title": "Export Data"
        },
        {
            "location": "/mCerebrum/gettingStarted/#shut-down-all-applications",
            "text": "Enter the main Settings screen by tapping the 3 dots in the upper-right-hand corner of the home screen, then tapping  Settings .  Tap the  Running Apps  button. ( Note : the study must be started to access running apps.)  Tap the  Stop All  button to stop all applications.  Return to the previous screen and tap  Stop Study .  Restart the phone.  When the phone restarts, if the mCerebrum app opens, tap  Exit  to close it. (If mCerebrum does not open, skip this step.)  From the phone\u2019s home screen, open the DataKit app and ensure it is INACTIVE.",
            "title": "Shut Down All Applications"
        },
        {
            "location": "/mCerebrum/gettingStarted/#save-data-to-a-computer",
            "text": "Connect the smartphone to a PC using the charging cable.  Create a new folder on your computer. (It may be helpful to use the participant\u2019s user ID as the new folder name.)  Using the computer, navigate to the phone\u2019s org.md2k.datakit folder.  [Phone   Android   data   org.md2k.datakit]  Copy the org.md2k.datakit folder and paste it to the new folder you created on your computer.  Navigate to the phone\u2019s log folder.  [Phone   log]  Copy the log folder and paste it to the new folder you created.   All data is now exported to the computer.",
            "title": "Save Data to a Computer"
        },
        {
            "location": "/mCerebrum/configurations/",
            "text": "Configuration\n\n\nmCerebrum\n is primarily configured and controlled by a set of JSON configuration files.  This document describes how to utilize and adapt these configurations to your own requirements.\n\n\nData source\n\n\nA data source uniquely represents a single data stream within mCerebrum.  Subsets of a data source definition can be utilized to query for multiple streams. This example contains all possible fields.  \ndataDescriptors\n and \nmetadata\n are always optional.\n\n\n{\n\n  \ntype\n:\n \nMEMORY\n,\n\n  \nid\n:\n \nDataSourceID\n,\n\n  \nplatform\n:\n \n{\n\n    \nid\n:\n \nPhone1\n,\n\n    \ntype\n:\n \nPHONE\n,\n\n    \nmetadata\n:\n \n{\n\n      \nOPERATING_SYSTEM\n:\n \n5.1.1\n,\n\n      \nMODEL\n:\n \nSAMSUNG-SM-G900A\n,\n\n      \nMANUFACTURER\n:\n \nsamsung\n,\n\n      \nNAME\n:\n \nPhone\n\n    \n}\n\n  \n},\n\n  \nplatformapp\n:\n \n{\n\n    \nid\n:\n \nplatformapp1\n,\n\n    \ntype\n:\n \nPHONEAPP\n,\n\n    \nmetadata\n:\n \n{\n\n      \nNAME\n:\n \nPhoneApp\n\n    \n}\n\n  \n},\n\n  \napplication\n:\n \n{\n\n    \nid\n:\n \norg.md2k.phonesensor\n,\n\n    \ntype\n:\n \nPhoneApp\n,\n\n    \nmetadata\n:\n \n{\n\n      \nVERSION_NAME\n:\n \n0.8.0\n,\n\n      \nVERSION_NUMBER\n:\n \n11\n\n    \n}\n\n  \n},\n\n  \ndataDescriptors\n:\n \n[\n\n    \n{\n\n      \nUNIT\n:\n \nmegabyte\n,\n\n      \nDESCRIPTION\n:\n \nSize of the memory\n,\n\n      \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n      \nMAX_VALUE\n:\n \n2048\n,\n\n      \nMIN_VALUE\n:\n \n0\n,\n\n      \nDATA_TYPE\n:\n \nfloat\n,\n\n      \nNAME\n:\n \nSize\n\n    \n},\n\n    \n{\n\n      \nUNIT\n:\n \nmegabyte\n,\n\n      \nDESCRIPTION\n:\n \nAvailable memory\n,\n\n      \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n      \nMAX_VALUE\n:\n \n2048\n,\n\n      \nMIN_VALUE\n:\n \n0\n,\n\n      \nDATA_TYPE\n:\n \nfloat\n,\n\n      \nNAME\n:\n \nAvailable\n\n    \n}\n\n  \n],\n\n  \nmetadata\n:\n \n{\n\n    \nDESCRIPTION\n:\n \nmeasures usage of memory\n,\n\n    \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n    \nDATA_TYPE\n:\n \norg.md2k.datakitapi.datatype.DataTypeFloatArray\n,\n\n    \nNAME\n:\n \nMemory\n\n  \n}\n\n\n}\n\n\n\n\n\n\nQuerying supports a subset of the fields as specified below and all fields are optional to include additional data stream.  Any data stream that matches all specified parameter is returned.\n\n\n\n\ntype\n: String specification designating the type of the object\n\n\nid\n: TODO: What does id mean here?\n\n\n\n\nPlatform\n, \nplatformapp\n, and \napplication\n each contain specific \ntype\n and \nid\n fields that are identically defined.\n\n\n{\n\n  \ntype\n:\n \nMEMORY\n,\n\n  \nid\n:\n \nDataSourceID\n,\n\n  \nplatform\n:\n \n{\n\n    \nid\n:\n \nPhone1\n,\n\n    \ntype\n:\n \nPHONE\n\n  \n},\n\n  \nplatformapp\n:\n \n{\n\n    \nid\n:\n \nplatformapp1\n,\n\n    \ntype\n:\n \nPHONEAPP\n\n  \n},\n\n  \napplication\n:\n \n{\n\n    \nid\n:\n \norg.md2k.phonesensor\n,\n\n    \ntype\n:\n \nPhoneApp\n\n  \n}\n\n\n}\n\n\n\n\n\n\nPrivacy type options\n\n\nPrivacy options are define by specifying the following four parameters and are utilized by DataKit to provide a mechanism\nthat prevents data sources that match the define \nsource\n criteria from being routed and recorded.\n\n\n\n\nid\n: unique privacy id string (TODO: What is the meaning of \nid\n in general?)\n\n\ntitle\n: String suitable for display on the user interface\n\n\nsummary\n: Summary description for display on the user interface for additional details\n\n\nsource\n: list of \ndata sources\n (TODO: Why is this different than the listed data source definition?)\n\n\n\n\n{\n\n  \nid\n:\n \nlocation\n,\n\n  \ntitle\n:\n \nLocation\n,\n\n  \nsummary\n:\n \n,\n\n  \nsource\n:\n \n[\n\n    \n{\n\n      \ndatasource_type\n:\n \nLOCATION\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nNotification\n\n\nNotifications are handled by mCerebrum by sending a notification object to the notification manager application.  This is the definition of the object and certain fields are require depending on the targeted notification device.  Please refer to the device specific documentation.\n\n\n\n\nid\n: Unique identifier that is utilized by other configuration file to reference this object instance.\n\n\nname\n: Short string description of the notification that can be utilized by application user interfaces\n\n\ntype\n: Must be one of the following:\n\n\nVIBRATION\n: Causes the notification device to vibrate if possible\n\n\nMESSAGE\n: Causes the notification device to display a message if possible\n\n\nTONE\n: Causes the notification device to sound a tone if possible\n\n\nSCREEN\n: Causes the notification device to turn on a screen if possible\n\n\n\n\n\n\npriority\n: Integer priority level, lower is higher priority\n\n\ndatasource\n: A \ndata source\n object\n\n\nformat\n: Specific format option depending on the notification device\n\n\nrepeat\n: How many time to repeat this notification\n\n\nduration\n: How long in milliseconds to alert for each notification iteration\n\n\n\n\nExample\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nMICROSOFT_BAND_VIBRATE_3\n,\n\n    \nname\n:\n \nMicrosoft Band Vibration\n,\n\n    \ntype\n:\n \nVIBRATION\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nMICROSOFT_BAND\n\n      \n}\n\n    \n},\n\n    \nformat\n:\n \nTHREE_TONE_HIGH\n,\n\n    \nrepeat\n:\n \n3\n,\n\n    \nduration\n:\n \n2000\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nMICROSOFT_BAND_MESSAGE_EMA\n,\n\n    \nname\n:\n \nMicrosoft Band Message (EMA)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nMICROSOFT_BAND\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \nmessage\n:\n \n[\n\n      \nSurvey\n,\n\n      \nTime to take a Survey\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nMICROSOFT_BAND_MESSAGE_MOODSURFING\n,\n\n    \nname\n:\n \nMicrosoft Band Message (MoodSurfing)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nMICROSOFT_BAND\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \nmessage\n:\n \n[\n\n      \nMood Surfing\n,\n\n      \nTake a moment to surf your mood\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nMICROSOFT_BAND_MESSAGE_HEADSPACE\n,\n\n    \nname\n:\n \nMicrosoft Band Message (Head Space)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nMICROSOFT_BAND\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \nmessage\n:\n \n[\n\n      \nHeadSpace\n,\n\n      \nTime a moment to make some head space\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nMICROSOFT_BAND_MESSAGE_THOUGHTSHAKEUP\n,\n\n    \nname\n:\n \nMicrosoft Band Message (Thought Shakeup)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nMICROSOFT_BAND\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \nmessage\n:\n \n[\n\n      \nThought Shakeup\n,\n\n      \nTake a moment to shake up your thoughts\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_VIBRATE_3\n,\n\n    \nname\n:\n \nPhone Vibration\n,\n\n    \ntype\n:\n \nVIBRATION\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nformat\n:\n \nTHREE_TONE\n,\n\n    \nrepeat\n:\n \n3\n,\n\n    \nduration\n:\n \n1500\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_TONE_3\n,\n\n    \nname\n:\n \nPhone Tone\n,\n\n    \ntype\n:\n \nTONE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nformat\n:\n \nTHREE_TONE_HIGH\n,\n\n    \nrepeat\n:\n \n3\n,\n\n    \nduration\n:\n \n1500\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_SCREEN\n,\n\n    \nname\n:\n \nPhone Screen\n,\n\n    \ntype\n:\n \nSCREEN\n,\n\n    \npriority\n:\n \n0\n,\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_DELAY_EMA\n,\n\n    \nname\n:\n \nPhone Message (EMA)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \nmessage\n:\n \n[\n\n      \nSurvey\n,\n\n      \nTime to take a Survey\n,\n\n      \nOK\n,\n\n      \nCancel\n,\n\n      \nDelay 10 Minutes\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \ntrue\n,\n\n      \ndelay\n:\n \ntrue\n,\n\n      \ndelay_time\n:\n \n600000\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_DELAY_EMA_15_30_60_120\n,\n\n    \nname\n:\n \nPhone Message (EMA)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n300000\n,\n\n    \nmessage\n:\n \n[\n\n      \nSurvey\n,\n\n      \nTime to take a Survey\n,\n\n      \nOK\n,\n\n      \nCancel\n,\n\n      \nDelay\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \ntrue\n,\n\n      \ndelay\n:\n \ntrue\n,\n\n      \ndelay_time\n:\n \n-1\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_MOODSURFING\n,\n\n    \nname\n:\n \nPhone Message (MoodSurfing)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n120000\n,\n\n    \nmessage\n:\n \n[\n\n      \nMood Surfing\n,\n\n      \nTake a moment to surf your mood\n,\n\n      \nOK\n,\n\n      \nCancel\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \ntrue\n,\n\n      \ndelay\n:\n \nfalse\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_THOUGHTSHAKEUP\n,\n\n    \nname\n:\n \nPhone Message (ThoughtShakeup)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n120000\n,\n\n    \nmessage\n:\n \n[\n\n      \nThought Shakeup\n,\n\n      \nTake a moment to shake up your thoughts\n,\n\n      \nOK\n,\n\n      \nCancel\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \ntrue\n,\n\n      \ndelay\n:\n \nfalse\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_HEADSPACE\n,\n\n    \nname\n:\n \nPhone Message (HeadSpace)\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n120000\n,\n\n    \nmessage\n:\n \n[\n\n      \nHeadSpace\n,\n\n      \nTime a moment to make some head space\n,\n\n      \nOK\n,\n\n      \nCancel\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \ntrue\n,\n\n      \ndelay\n:\n \nfalse\n\n    \n}\n\n  \n}\n\n\n]\n\n\n\n\n\n\nStudy notifications\n\n\nTODO:\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nPHONE_VIBRATE\n,\n\n    \nname\n:\n \nPhone Vibration\n,\n\n    \ntype\n:\n \nVIBRATION\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nformat\n:\n \nTHREE_TONE\n,\n\n    \nrepeat\n:\n \n60\n,\n\n    \nduration\n:\n \n10800000\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_TONE\n,\n\n    \nname\n:\n \nPhone Tone\n,\n\n    \ntype\n:\n \nTONE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nformat\n:\n \nTHREE_TONE_HIGH\n,\n\n    \nrepeat\n:\n \n60\n,\n\n    \nduration\n:\n \n10800000\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_SCREEN\n,\n\n    \nname\n:\n \nPhone Screen\n,\n\n    \ntype\n:\n \nSCREEN\n,\n\n    \npriority\n:\n \n0\n,\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n10000\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_START_DAY\n,\n\n    \nname\n:\n \nStart Day\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n3600000000\n,\n\n    \nmessage\n:\n \n[\n\n      \nStart Day\n,\n\n      \nPlease start the Day\n,\n\n      \nOK\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \nfalse\n,\n\n      \ndelay\n:\n \nfalse\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPHONE_MESSAGE_END_DAY\n,\n\n    \nname\n:\n \nEnd Day\n,\n\n    \ntype\n:\n \nMESSAGE\n,\n\n    \npriority\n:\n \n0\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n}\n\n    \n},\n\n    \nrepeat\n:\n \n1\n,\n\n    \nduration\n:\n \n3600000000\n,\n\n    \nmessage\n:\n \n[\n\n      \nEnd Day\n,\n\n      \nPlease end the Day\n,\n\n      \nOK\n\n    \n],\n\n    \nresponse_option\n:\n \n{\n\n      \nok\n:\n \ntrue\n,\n\n      \ncancel\n:\n \nfalse\n,\n\n      \ndelay\n:\n \nfalse\n\n    \n}\n\n  \n}\n\n\n]\n\n\n\n\n\n\nConditions\n\n\nConditions provide a mechanism to specify constraints based on the output of various sensors and data streams.  They are\ndefined as follows  and referenced by \nid\n within other documents.\n\n\n\n\nid\n: Unique string identifier to be used as reference within other JSON configurations\n\n\ntype\n: defines the type category of condition and is user specified\n\n\nname\n: String describing the condition and could be shown to a participant\n\n\nvalues\n: List of input values for the evaluation function\n\n\ndata_source\n: An single object as defined in the \ndata source\n query support\n\n\n\n\nExample\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nPHONE_BATTERY_10\n,\n\n    \ntype\n:\n \nPHONE_BATTERY\n,\n\n    \nname\n:\n \nPhone battery percentage is greater than 10\n,\n\n    \nvalues\n:\n \n[\n\n      \n10\n\n    \n],\n\n    \ndata_source\n:\n \n{\n\n      \napplication\n:\n \n{\n\n        \nid\n:\n \norg.md2k.phonesensor\n\n      \n},\n\n      \ntype\n:\n \nBATTERY\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nNOT_ACTIVE_1\n,\n\n    \ntype\n:\n \nNOT_ACTIVE\n,\n\n    \nname\n:\n \nNot physically active in last 1 minute\n,\n\n    \nvalues\n:\n \n[\n\n      \n60000\n,\n\n      \n0\n\n    \n],\n\n    \ndata_source\n:\n \n{\n\n      \napplication\n:\n \n{\n\n        \nid\n:\n \norg.md2k.streamprocessor\n\n      \n},\n\n      \ntype\n:\n \nSTRESS_ACTIVITY\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nNOT_DRIVING_5\n,\n\n    \ntype\n:\n \nNOT_DRIVING\n,\n\n    \nname\n:\n \nNot driving in last 5 minutes\n,\n\n    \nvalues\n:\n \n[\n\n      \n300000\n,\n\n      \n60\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nDATA_QUALITY_5\n,\n\n    \ntype\n:\n \nDATA_QUALITY\n,\n\n    \nname\n:\n \nData quality good in last 5 minutes\n,\n\n    \nvalues\n:\n \n[\n\n      \n300000\n,\n\n      \n80\n\n    \n],\n\n    \ndata_source\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nAUTOSENSE_CHEST\n\n      \n},\n\n      \ntype\n:\n \nDATA_QUALITY\n,\n\n      \nid\n:\n \nRESPIRATION\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nDATA_QUALITY_DAY_START\n,\n\n    \ntype\n:\n \nDATA_QUALITY\n,\n\n    \nname\n:\n \nData quality good from the day started\n,\n\n    \nvalues\n:\n \n[\n\n      \nDAY_START\n,\n\n      \n60\n\n    \n],\n\n    \ndata_source\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nAUTOSENSE_CHEST\n\n      \n},\n\n      \ntype\n:\n \nDATA_QUALITY\n,\n\n      \nid\n:\n \nRESPIRATION\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nEMA_ANSWER_5\n,\n\n    \ntype\n:\n \nEMA_ANSWER\n,\n\n    \nname\n:\n \nEMA answered in 5 Minutes\n,\n\n    \nvalues\n:\n \n[\n\n      \n300000\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nRANDOM_EMA_60\n,\n\n    \ntype\n:\n \nLAST_EMA_EMI\n,\n\n    \nname\n:\n \nLast Triggered Random EMA 60 minute ago\n,\n\n    \nvalues\n:\n \n[\n\n      \n3600000\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nRANDOM_EMA\n,\n\n      \ntype\n:\n \nEMA\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nRANDOM_EMA_10\n,\n\n    \ntype\n:\n \nLAST_EMA_EMI\n,\n\n    \nname\n:\n \nLast Triggered Random EMA 10 minute ago\n,\n\n    \nvalues\n:\n \n[\n\n      \n600000\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nRANDOM_EMA\n,\n\n      \ntype\n:\n \nEMA\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nSMOKING_EMA_10\n,\n\n    \ntype\n:\n \nLAST_EMA_EMI\n,\n\n    \nname\n:\n \nLast Triggered SMOKING EMA 10 minute ago\n,\n\n    \nvalues\n:\n \n[\n\n      \n600000\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nSMOKING_EMA\n,\n\n      \ntype\n:\n \nEMA\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nSMOKING_EMA_30\n,\n\n    \ntype\n:\n \nLAST_EMA_EMI\n,\n\n    \nname\n:\n \nLast Triggered SMOKING EMA 30 minute ago\n,\n\n    \nvalues\n:\n \n[\n\n      \n1800000\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nSMOKING_EMA\n,\n\n      \ntype\n:\n \nEMA\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nEMI_10\n,\n\n    \ntype\n:\n \nLAST_EMA_EMI\n,\n\n    \nname\n:\n \nLast Triggered EMI 10 minute ago\n,\n\n    \nvalues\n:\n \n[\n\n      \n600000\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nEMI\n,\n\n      \ntype\n:\n \nEMI\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nEMI_60\n,\n\n    \ntype\n:\n \nLAST_EMA_EMI\n,\n\n    \nname\n:\n \nLast Triggered EMI 10 minute ago\n,\n\n    \nvalues\n:\n \n[\n\n      \n3600000\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nEMI\n,\n\n      \ntype\n:\n \nEMI\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nVALID_BLOCK_SMOKING_EMA\n,\n\n    \ntype\n:\n \nVALID_BLOCK\n,\n\n    \nname\n:\n \nNo EMA/EMI triggered in this block\n,\n\n    \nvalues\n:\n \n[\n\n      \n1\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nSMOKING_EMA\n,\n\n      \ntype\n:\n \nEMA\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nVALID_BLOCK_RANDOM_EMA\n,\n\n    \ntype\n:\n \nVALID_BLOCK\n,\n\n    \nname\n:\n \nNo EMA/EMI triggered in this block\n,\n\n    \nvalues\n:\n \n[\n\n      \n1\n\n    \n],\n\n    \nsource\n:\n \n{\n\n      \nid\n:\n \nRANDOM_EMA\n,\n\n      \ntype\n:\n \nEMA\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nPRIVACY\n,\n\n    \ntype\n:\n \nPRIVACY\n,\n\n    \nname\n:\n \nPrivacy is active\n,\n\n    \ndata_source\n:\n \n{\n\n      \ntype\n:\n \nPRIVACY\n\n    \n}\n\n  \n}\n\n\n]\n\n\n\n\n\n\nBase\n\n\nDefined in main application JSON file\n\n\n{\n\n    \nday_start\n:\n \n{\n\n        \nby\n:\n \nuser\n,\n\n        \nbase\n:\n \nwakeup\n,\n\n        \nnotify\n:\n \n[\n\n          \n{\n\n            \ntype\n:\n \nbutton\n,\n\n            \noffset\n:\n \n-30000\n\n          \n},\n\n          \n{\n\n            \ntype\n:\n \nprompt\n,\n\n            \noffset\n:\n \n0\n,\n\n            \nparameters\n:\n \n[\n\n              \nPHONE_SCREEN\n,\n\n              \nPHONE_MESSAGE_START_DAY\n\n            \n]\n\n          \n},\n\n          \n{\n\n            \ntype\n:\n \nnotification\n,\n\n            \noffset\n:\n \n30000\n,\n\n            \nparameters\n:\n \n[\n\n              \nPHONE_VIBRATE\n,\n\n              \nPHONE_TONE\n,\n\n              \nPHONE_SCREEN\n,\n\n              \nPHONE_MESSAGE_START_DAY\n\n            \n]\n\n          \n}\n\n        \n]\n\n      \n}\n\n\n}\n\n\n\n\n\n\nNotification Manager\n\n\nConfig file name and location: \nmCerebrum/org.md2k.notificationmanager/\n\n\nNotification manager requires \ntone.mp3\n to be present in this folder and utilizes this file for audible alerts for participants.\n\n\nStream Processor\n\n\nConfig file name and location: \nmCerebrum/org.md2k.streamprocessor\n\n\nStream processor requires that SVM model files be present in this directory.",
            "title": "Configurations"
        },
        {
            "location": "/mCerebrum/configurations/#configuration",
            "text": "mCerebrum  is primarily configured and controlled by a set of JSON configuration files.  This document describes how to utilize and adapt these configurations to your own requirements.",
            "title": "Configuration"
        },
        {
            "location": "/mCerebrum/configurations/#data-source",
            "text": "A data source uniquely represents a single data stream within mCerebrum.  Subsets of a data source definition can be utilized to query for multiple streams. This example contains all possible fields.   dataDescriptors  and  metadata  are always optional.  { \n   type :   MEMORY , \n   id :   DataSourceID , \n   platform :   { \n     id :   Phone1 , \n     type :   PHONE , \n     metadata :   { \n       OPERATING_SYSTEM :   5.1.1 , \n       MODEL :   SAMSUNG-SM-G900A , \n       MANUFACTURER :   samsung , \n       NAME :   Phone \n     } \n   }, \n   platformapp :   { \n     id :   platformapp1 , \n     type :   PHONEAPP , \n     metadata :   { \n       NAME :   PhoneApp \n     } \n   }, \n   application :   { \n     id :   org.md2k.phonesensor , \n     type :   PhoneApp , \n     metadata :   { \n       VERSION_NAME :   0.8.0 , \n       VERSION_NUMBER :   11 \n     } \n   }, \n   dataDescriptors :   [ \n     { \n       UNIT :   megabyte , \n       DESCRIPTION :   Size of the memory , \n       FREQUENCY :   1.0 Hz , \n       MAX_VALUE :   2048 , \n       MIN_VALUE :   0 , \n       DATA_TYPE :   float , \n       NAME :   Size \n     }, \n     { \n       UNIT :   megabyte , \n       DESCRIPTION :   Available memory , \n       FREQUENCY :   1.0 Hz , \n       MAX_VALUE :   2048 , \n       MIN_VALUE :   0 , \n       DATA_TYPE :   float , \n       NAME :   Available \n     } \n   ], \n   metadata :   { \n     DESCRIPTION :   measures usage of memory , \n     FREQUENCY :   1.0 Hz , \n     DATA_TYPE :   org.md2k.datakitapi.datatype.DataTypeFloatArray , \n     NAME :   Memory \n   }  }   Querying supports a subset of the fields as specified below and all fields are optional to include additional data stream.  Any data stream that matches all specified parameter is returned.   type : String specification designating the type of the object  id : TODO: What does id mean here?   Platform ,  platformapp , and  application  each contain specific  type  and  id  fields that are identically defined.  { \n   type :   MEMORY , \n   id :   DataSourceID , \n   platform :   { \n     id :   Phone1 , \n     type :   PHONE \n   }, \n   platformapp :   { \n     id :   platformapp1 , \n     type :   PHONEAPP \n   }, \n   application :   { \n     id :   org.md2k.phonesensor , \n     type :   PhoneApp \n   }  }",
            "title": "Data source"
        },
        {
            "location": "/mCerebrum/configurations/#privacy-type-options",
            "text": "Privacy options are define by specifying the following four parameters and are utilized by DataKit to provide a mechanism\nthat prevents data sources that match the define  source  criteria from being routed and recorded.   id : unique privacy id string (TODO: What is the meaning of  id  in general?)  title : String suitable for display on the user interface  summary : Summary description for display on the user interface for additional details  source : list of  data sources  (TODO: Why is this different than the listed data source definition?)   { \n   id :   location , \n   title :   Location , \n   summary :   , \n   source :   [ \n     { \n       datasource_type :   LOCATION \n     } \n   ]  }",
            "title": "Privacy type options"
        },
        {
            "location": "/mCerebrum/configurations/#notification",
            "text": "Notifications are handled by mCerebrum by sending a notification object to the notification manager application.  This is the definition of the object and certain fields are require depending on the targeted notification device.  Please refer to the device specific documentation.   id : Unique identifier that is utilized by other configuration file to reference this object instance.  name : Short string description of the notification that can be utilized by application user interfaces  type : Must be one of the following:  VIBRATION : Causes the notification device to vibrate if possible  MESSAGE : Causes the notification device to display a message if possible  TONE : Causes the notification device to sound a tone if possible  SCREEN : Causes the notification device to turn on a screen if possible    priority : Integer priority level, lower is higher priority  datasource : A  data source  object  format : Specific format option depending on the notification device  repeat : How many time to repeat this notification  duration : How long in milliseconds to alert for each notification iteration",
            "title": "Notification"
        },
        {
            "location": "/mCerebrum/configurations/#example",
            "text": "[ \n   { \n     id :   MICROSOFT_BAND_VIBRATE_3 , \n     name :   Microsoft Band Vibration , \n     type :   VIBRATION , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   MICROSOFT_BAND \n       } \n     }, \n     format :   THREE_TONE_HIGH , \n     repeat :   3 , \n     duration :   2000 \n   }, \n   { \n     id :   MICROSOFT_BAND_MESSAGE_EMA , \n     name :   Microsoft Band Message (EMA) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   MICROSOFT_BAND \n       } \n     }, \n     repeat :   1 , \n     duration :   300000 , \n     message :   [ \n       Survey , \n       Time to take a Survey \n     ] \n   }, \n   { \n     id :   MICROSOFT_BAND_MESSAGE_MOODSURFING , \n     name :   Microsoft Band Message (MoodSurfing) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   MICROSOFT_BAND \n       } \n     }, \n     repeat :   1 , \n     duration :   300000 , \n     message :   [ \n       Mood Surfing , \n       Take a moment to surf your mood \n     ] \n   }, \n   { \n     id :   MICROSOFT_BAND_MESSAGE_HEADSPACE , \n     name :   Microsoft Band Message (Head Space) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   MICROSOFT_BAND \n       } \n     }, \n     repeat :   1 , \n     duration :   300000 , \n     message :   [ \n       HeadSpace , \n       Time a moment to make some head space \n     ] \n   }, \n   { \n     id :   MICROSOFT_BAND_MESSAGE_THOUGHTSHAKEUP , \n     name :   Microsoft Band Message (Thought Shakeup) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   MICROSOFT_BAND \n       } \n     }, \n     repeat :   1 , \n     duration :   300000 , \n     message :   [ \n       Thought Shakeup , \n       Take a moment to shake up your thoughts \n     ] \n   }, \n   { \n     id :   PHONE_VIBRATE_3 , \n     name :   Phone Vibration , \n     type :   VIBRATION , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     format :   THREE_TONE , \n     repeat :   3 , \n     duration :   1500 \n   }, \n   { \n     id :   PHONE_TONE_3 , \n     name :   Phone Tone , \n     type :   TONE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     format :   THREE_TONE_HIGH , \n     repeat :   3 , \n     duration :   1500 \n   }, \n   { \n     id :   PHONE_SCREEN , \n     name :   Phone Screen , \n     type :   SCREEN , \n     priority :   0 , \n     repeat :   1 , \n     duration :   300000 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_DELAY_EMA , \n     name :   Phone Message (EMA) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   300000 , \n     message :   [ \n       Survey , \n       Time to take a Survey , \n       OK , \n       Cancel , \n       Delay 10 Minutes \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   true , \n       delay :   true , \n       delay_time :   600000 \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_DELAY_EMA_15_30_60_120 , \n     name :   Phone Message (EMA) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   300000 , \n     message :   [ \n       Survey , \n       Time to take a Survey , \n       OK , \n       Cancel , \n       Delay \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   true , \n       delay :   true , \n       delay_time :   -1 \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_MOODSURFING , \n     name :   Phone Message (MoodSurfing) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   120000 , \n     message :   [ \n       Mood Surfing , \n       Take a moment to surf your mood , \n       OK , \n       Cancel \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   true , \n       delay :   false \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_THOUGHTSHAKEUP , \n     name :   Phone Message (ThoughtShakeup) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   120000 , \n     message :   [ \n       Thought Shakeup , \n       Take a moment to shake up your thoughts , \n       OK , \n       Cancel \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   true , \n       delay :   false \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_HEADSPACE , \n     name :   Phone Message (HeadSpace) , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   120000 , \n     message :   [ \n       HeadSpace , \n       Time a moment to make some head space , \n       OK , \n       Cancel \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   true , \n       delay :   false \n     } \n   }  ]",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configurations/#study-notifications",
            "text": "TODO:  [ \n   { \n     id :   PHONE_VIBRATE , \n     name :   Phone Vibration , \n     type :   VIBRATION , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     format :   THREE_TONE , \n     repeat :   60 , \n     duration :   10800000 \n   }, \n   { \n     id :   PHONE_TONE , \n     name :   Phone Tone , \n     type :   TONE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     format :   THREE_TONE_HIGH , \n     repeat :   60 , \n     duration :   10800000 \n   }, \n   { \n     id :   PHONE_SCREEN , \n     name :   Phone Screen , \n     type :   SCREEN , \n     priority :   0 , \n     repeat :   1 , \n     duration :   10000 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_START_DAY , \n     name :   Start Day , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   3600000000 , \n     message :   [ \n       Start Day , \n       Please start the Day , \n       OK \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   false , \n       delay :   false \n     } \n   }, \n   { \n     id :   PHONE_MESSAGE_END_DAY , \n     name :   End Day , \n     type :   MESSAGE , \n     priority :   0 , \n     datasource :   { \n       platform :   { \n         type :   PHONE \n       } \n     }, \n     repeat :   1 , \n     duration :   3600000000 , \n     message :   [ \n       End Day , \n       Please end the Day , \n       OK \n     ], \n     response_option :   { \n       ok :   true , \n       cancel :   false , \n       delay :   false \n     } \n   }  ]",
            "title": "Study notifications"
        },
        {
            "location": "/mCerebrum/configurations/#conditions",
            "text": "Conditions provide a mechanism to specify constraints based on the output of various sensors and data streams.  They are\ndefined as follows  and referenced by  id  within other documents.   id : Unique string identifier to be used as reference within other JSON configurations  type : defines the type category of condition and is user specified  name : String describing the condition and could be shown to a participant  values : List of input values for the evaluation function  data_source : An single object as defined in the  data source  query support",
            "title": "Conditions"
        },
        {
            "location": "/mCerebrum/configurations/#example_1",
            "text": "[ \n   { \n     id :   PHONE_BATTERY_10 , \n     type :   PHONE_BATTERY , \n     name :   Phone battery percentage is greater than 10 , \n     values :   [ \n       10 \n     ], \n     data_source :   { \n       application :   { \n         id :   org.md2k.phonesensor \n       }, \n       type :   BATTERY \n     } \n   }, \n   { \n     id :   NOT_ACTIVE_1 , \n     type :   NOT_ACTIVE , \n     name :   Not physically active in last 1 minute , \n     values :   [ \n       60000 , \n       0 \n     ], \n     data_source :   { \n       application :   { \n         id :   org.md2k.streamprocessor \n       }, \n       type :   STRESS_ACTIVITY \n     } \n   }, \n   { \n     id :   NOT_DRIVING_5 , \n     type :   NOT_DRIVING , \n     name :   Not driving in last 5 minutes , \n     values :   [ \n       300000 , \n       60 \n     ] \n   }, \n   { \n     id :   DATA_QUALITY_5 , \n     type :   DATA_QUALITY , \n     name :   Data quality good in last 5 minutes , \n     values :   [ \n       300000 , \n       80 \n     ], \n     data_source :   { \n       platform :   { \n         type :   AUTOSENSE_CHEST \n       }, \n       type :   DATA_QUALITY , \n       id :   RESPIRATION \n     } \n   }, \n   { \n     id :   DATA_QUALITY_DAY_START , \n     type :   DATA_QUALITY , \n     name :   Data quality good from the day started , \n     values :   [ \n       DAY_START , \n       60 \n     ], \n     data_source :   { \n       platform :   { \n         type :   AUTOSENSE_CHEST \n       }, \n       type :   DATA_QUALITY , \n       id :   RESPIRATION \n     } \n   }, \n   { \n     id :   EMA_ANSWER_5 , \n     type :   EMA_ANSWER , \n     name :   EMA answered in 5 Minutes , \n     values :   [ \n       300000 \n     ] \n   }, \n   { \n     id :   RANDOM_EMA_60 , \n     type :   LAST_EMA_EMI , \n     name :   Last Triggered Random EMA 60 minute ago , \n     values :   [ \n       3600000 \n     ], \n     source :   { \n       id :   RANDOM_EMA , \n       type :   EMA \n     } \n   }, \n   { \n     id :   RANDOM_EMA_10 , \n     type :   LAST_EMA_EMI , \n     name :   Last Triggered Random EMA 10 minute ago , \n     values :   [ \n       600000 \n     ], \n     source :   { \n       id :   RANDOM_EMA , \n       type :   EMA \n     } \n   }, \n   { \n     id :   SMOKING_EMA_10 , \n     type :   LAST_EMA_EMI , \n     name :   Last Triggered SMOKING EMA 10 minute ago , \n     values :   [ \n       600000 \n     ], \n     source :   { \n       id :   SMOKING_EMA , \n       type :   EMA \n     } \n   }, \n   { \n     id :   SMOKING_EMA_30 , \n     type :   LAST_EMA_EMI , \n     name :   Last Triggered SMOKING EMA 30 minute ago , \n     values :   [ \n       1800000 \n     ], \n     source :   { \n       id :   SMOKING_EMA , \n       type :   EMA \n     } \n   }, \n   { \n     id :   EMI_10 , \n     type :   LAST_EMA_EMI , \n     name :   Last Triggered EMI 10 minute ago , \n     values :   [ \n       600000 \n     ], \n     source :   { \n       id :   EMI , \n       type :   EMI \n     } \n   }, \n   { \n     id :   EMI_60 , \n     type :   LAST_EMA_EMI , \n     name :   Last Triggered EMI 10 minute ago , \n     values :   [ \n       3600000 \n     ], \n     source :   { \n       id :   EMI , \n       type :   EMI \n     } \n   }, \n   { \n     id :   VALID_BLOCK_SMOKING_EMA , \n     type :   VALID_BLOCK , \n     name :   No EMA/EMI triggered in this block , \n     values :   [ \n       1 \n     ], \n     source :   { \n       id :   SMOKING_EMA , \n       type :   EMA \n     } \n   }, \n   { \n     id :   VALID_BLOCK_RANDOM_EMA , \n     type :   VALID_BLOCK , \n     name :   No EMA/EMI triggered in this block , \n     values :   [ \n       1 \n     ], \n     source :   { \n       id :   RANDOM_EMA , \n       type :   EMA \n     } \n   }, \n   { \n     id :   PRIVACY , \n     type :   PRIVACY , \n     name :   Privacy is active , \n     data_source :   { \n       type :   PRIVACY \n     } \n   }  ]",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configurations/#base",
            "text": "Defined in main application JSON file  { \n     day_start :   { \n         by :   user , \n         base :   wakeup , \n         notify :   [ \n           { \n             type :   button , \n             offset :   -30000 \n           }, \n           { \n             type :   prompt , \n             offset :   0 , \n             parameters :   [ \n               PHONE_SCREEN , \n               PHONE_MESSAGE_START_DAY \n             ] \n           }, \n           { \n             type :   notification , \n             offset :   30000 , \n             parameters :   [ \n               PHONE_VIBRATE , \n               PHONE_TONE , \n               PHONE_SCREEN , \n               PHONE_MESSAGE_START_DAY \n             ] \n           } \n         ] \n       }  }",
            "title": "Base"
        },
        {
            "location": "/mCerebrum/configurations/#notification-manager",
            "text": "Config file name and location:  mCerebrum/org.md2k.notificationmanager/  Notification manager requires  tone.mp3  to be present in this folder and utilizes this file for audible alerts for participants.",
            "title": "Notification Manager"
        },
        {
            "location": "/mCerebrum/configurations/#stream-processor",
            "text": "Config file name and location:  mCerebrum/org.md2k.streamprocessor  Stream processor requires that SVM model files be present in this directory.",
            "title": "Stream Processor"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/",
            "text": "mCerebrum\n\n\nConfig file name and location: \nmCerebrum/org.md2k.study/config.json\n\n\nStructure Overview\n\n\nThis is the general structure of the mCerebrum configuration file.  Please see additional details in the following subsections.\n\n{\n\n  \nconfig_info\n:\n \n{\n\n    \nCONFIG_INFO\n\n  \n},\n\n  \nstudy_info\n:\n \n{\n\n    \nSTUDY_INFO\n\n  \n},\n\n  \napps\n:\n \n[\n\n    \nAPP_LIST\n1\n,\n\n    \nAPP_LIST\n2\n,\n\n    \n...\n\n  \n],\n\n  \nactions\n:\n \n[\n\n    \nACTION_\n1\n,\n\n    \nACTION_\n2\n,\n\n    \n...\n\n  \n],\n\n  \nadmin_view\n:\n \n{\n\n    \nADMININISTRATION_VIEW\n\n  \n},\n\n  \nuser_view\n:\n \n{\n\n    \nUSER_VIEW\n\n  \n},\n\n  \ndata_quality\n:\n \n[\n\n    \nDATA_QUALITY_\n1\n,\n\n    \nDATA_QUALITY_\n2\n,\n\n    \n...\n\n  \n],\n\n  \ndata_quality_view\n:\n \n[\n\n    \nDATA_QUALITY_VIEW_\n1\n,\n\n    \nDATA_QUALITY_VIEW_\n2\n,\n\n    \n...\n\n  \n],\n\n  \nday_start\n:\n \n{\n\n    \nDAY_START\n\n  \n},\n\n  \nday_end\n:\n \n{\n\n    \nDAY_END\n\n  \n}\n\n\n}\n\n\n\n\n\n\nConfig Info\n\n\nThe config info key specifies several required pieces of information and defines which resources are required.\n\n\n\n\nid\n: Unique study identifier.  E.g. ProtocolNumber TODO: Why is this here?\n\n\nname\n: Human readable study description.  This identifies a specific study. TODO: Why is this here?\n\n\nversion_code\n: The version of this file that is utilized by mCerebrum to determine if it can utilize this configuration\n\n\nrequired_files\n: List of files required to be present in the configuration folder before allowing the system to be configured.\n\n\n\n\nExample\n\n\nconfig_info\n:\n \n{\n\n  \nid\n:\n \nSTU00201566-Test\n,\n\n  \nname\n:\n \nMD2K Smoking Study (at NW)-Test\n,\n\n  \nversion_code\n:\n \n21\n,\n\n  \nrequired_files\n:\n \n[\n\n    \norg.md2k.autosense/default_config.json\n,\n\n    \norg.md2k.datakit/config.json\n,\n\n    \norg.md2k.datakit/default_config.json\n,\n\n    \norg.md2k.ema/config_ema.json\n,\n\n    \norg.md2k.ema/end_of_day_recording.json\n,\n\n    \norg.md2k.ema/event_contingent_recording.json\n,\n\n    \norg.md2k.ema/random_experience_sampling.json\n,\n\n    \norg.md2k.ema_scheduler/config.json\n,\n\n    \norg.md2k.ema_scheduler/notification.json\n,\n\n    \norg.md2k.ema_scheduler/condition.json\n,\n\n    \norg.md2k.microsoftband/default_config.json\n,\n\n    \norg.md2k.phonesensor/default_config.json\n,\n\n    \norg.md2k.plotter/default_config.json\n,\n\n    \norg.md2k.streamprocessor/model.json\n,\n\n    \norg.md2k.streamprocessor/model_rip.json\n,\n\n    \norg.md2k.notificationmanager/tone.mp3\n,\n\n    \norg.md2k.study/config.json\n,\n\n    \norg.md2k.study/notification.json\n,\n\n    \norg.md2k.study/tutorial.pdf\n\n  \n]\n\n\n}\n\n\n\n\n\n\nStudy Info\n\n\nThis object defines the specific study for the the configuration.\n\n\n\n\nid\n: Unique study identifier.  E.g. ProtocolNumber\n\n\nname\n: Human readable study description.  This identifies a specific study.\n\n\n\n\nExample\n\n\n{\n\n  \nid\n:\n \nSTU00201566-Test\n,\n\n  \nname\n:\n \nMD2K Smoking Study (at NW)-Test\n\n\n}\n\n\n\n\n\n\nApplication List\n\n\nThe application list defines which applications the system requires to perform its tasks,\nwhere to get them from, and any necessary configurations and services.\n\n\nApplication object\n\n\nEach application object consists of several fields:\n\n\nRequired\n\n\n\n\nid\n: unique identifier\n\n\nname\n: Human readable application name\n\n\nenable\n: \ntrue\n or \nfalse\n to enable or disable this application\n\n\npackage_name\n: Android package name for this application\n\n\ndownload_link\n: URL designating a GitHub release page or Google play store link\n\n\n\n\nOptional or as necessary\n\n\n\n\nconfig\n: The name of a configuration file\n\n\ndefault_config\n: The name of a default configuration file.  If a default file is defined and exists, it will override the config file.\n\n\nservice\n: A specific Android service class for a service\n\n\nsettings\n: A specific Android service class for a preference panel\n\n\n\n\n{\n\n  \nid\n:\n \ndatakit\n,\n\n  \nname\n:\n \nDataKit\n,\n\n  \nenable\n:\n \ntrue\n,\n\n  \npackage_name\n:\n \norg.md2k.datakit\n,\n\n  \nconfig\n:\n \nconfig.json\n,\n\n  \ndefault_config\n:\n \ndefault_config.json\n,\n\n  \nservice\n:\n \norg.md2k.datakit.cerebralcortex.ServiceCerebralCortex\n,\n\n  \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-DataKit/releases\n\n\n}\n\n\n\n\n\n\nApplication List Example\n\n\nA complete example List\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nstudy\n,\n\n    \nname\n:\n \nStudy\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-Study/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \ndatakit\n,\n\n    \nname\n:\n \nDataKit\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.datakit\n,\n\n    \nconfig\n:\n \nconfig.json\n,\n\n    \ndefault_config\n:\n \ndefault_config.json\n,\n\n    \nservice\n:\n \norg.md2k.datakit.cerebralcortex.ServiceCerebralCortex\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-DataKit/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nphonesensor\n,\n\n    \nname\n:\n \nPhoneSensor\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.phonesensor\n,\n\n    \nservice\n:\n \norg.md2k.phonesensor.ServicePhoneSensor\n,\n\n    \nsettings\n:\n \norg.md2k.phonesensor.ActivityPhoneSensorSettings\n,\n\n    \nconfig\n:\n \nconfig.json\n,\n\n    \ndefault_config\n:\n \ndefault_config.json\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-PhoneSensor/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nautosense\n,\n\n    \nname\n:\n \nAutoSense\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.autosense\n,\n\n    \nservice\n:\n \norg.md2k.autosense.antradio.connection.ServiceAutoSenses\n,\n\n    \nsettings\n:\n \norg.md2k.autosense.ActivityAutoSenseSettings\n,\n\n    \nconfig\n:\n \nconfig.json\n,\n\n    \ndefault_config\n:\n \ndefault_config.json\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-AutoSense/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nmicrosofthealth\n,\n\n    \nname\n:\n \nMicrosoftHealth\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \ncom.microsoft.kapp\n,\n\n    \ndownload_link\n:\n \nmarket://details?id=com.microsoft.kapp\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nmicrosoftband\n,\n\n    \nname\n:\n \nMicrosoftBand\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.microsoftband\n,\n\n    \nservice\n:\n \norg.md2k.microsoftband.ServiceMicrosoftBands\n,\n\n    \nsettings\n:\n \norg.md2k.microsoftband.ActivityMicrosoftBandSettings\n,\n\n    \nconfig\n:\n \nconfig.json\n,\n\n    \ndefault_config\n:\n \ndefault_config.json\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-MicrosoftBand/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nstreamprocessor\n,\n\n    \nname\n:\n \nStreamProcessor\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.streamprocessor\n,\n\n    \nservice\n:\n \norg.md2k.streamprocessor.ServiceStreamProcessor\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-StreamProcessor/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nema_scheduler\n,\n\n    \nname\n:\n \nEMAScheduler\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.ema_scheduler\n,\n\n    \nservice\n:\n \norg.md2k.ema_scheduler.ServiceEMAScheduler\n,\n\n    \nconfig\n:\n \nconfig.json\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-EMAScheduler/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nnotificationmanager\n,\n\n    \nname\n:\n \nNotificationManager\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.notificationmanager\n,\n\n    \nservice\n:\n \norg.md2k.notificationmanager.ServiceNotificationManager\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-NotificationManager/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nema\n,\n\n    \nname\n:\n \nEMA\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.ema\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-EMA/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nmoodsurfing\n,\n\n    \nname\n:\n \nMoodSurfing\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.moodsurfing\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-MoodSurfing/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nthoughtshakeup\n,\n\n    \nname\n:\n \nThoughtShakeup\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.thoughtshakeup\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-ThoughtShakeup/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nheadspace\n,\n\n    \nname\n:\n \nHeadSpace\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \ncom.getsomeheadspace.android\n,\n\n    \ndownload_link\n:\n \nmarket://details?id=com.getsomeheadspace.android\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nplotter\n,\n\n    \nname\n:\n \nPlotter\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.plotter\n,\n\n    \ndefault_config\n:\n \ndefault_config.json\n,\n\n    \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-Plotter/releases\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nadobe_acrobat_reader\n,\n\n    \nname\n:\n \nAdobe Acrobat Reader\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \ncom.adobe.reader\n,\n\n    \ndownload_link\n:\n \nmarket://details?id=com.adobe.reader\n\n  \n}\n\n\n]\n\n\n\n\n\n\nAction List\n\n\nEach action object consists of several fields and defines UI action that can occur:\n\n\nRequired\n\n\n\n\nid\n: unique identifier\n\n\nenable\n: \ntrue\n or \nfalse\n to enable or disable this application\n\n\nname\n: Human readable name that can be showing in the application user interface\n\n\nrank\n: Integer rank where the larger the number, the higher the priority\n\n\n\n\nOptional or as necessary\n\n\n\n\ntype\n: One of the following\n\n\nsetup\n: ???\n\n\nreset\n: ???\n\n\n\n\n\n\nicon\n: Reference to icon resource within the application\n\n\npackage_name\n: Android package name for this application\n\n\nclass_name\n: Android class name for this application activity\n\n\n\n\nAction Object Example\n\n\n{\n\n  \nid\n:\n \nclear_config\n,\n\n  \ntype\n:\n \nreset\n,\n\n  \nname\n:\n \nClear Configuration\n,\n\n  \nenable\n:\n \ntrue\n,\n\n  \nrank\n:\n \n7\n,\n\n  \nicon\n:\n \nic_delete_blue_48dp\n,\n\n  \npackage_name\n:\n \norg.md2k.study\n,\n\n  \nclass_name\n:\n \norg.md2k.study.model_view.clear_config.ActivityClearConfig\n\n\n}\n\n\n\n\n\n\nAction List Example\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nconfig_info\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nConfiguration Info\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n7\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nclear_config\n,\n\n    \ntype\n:\n \nreset\n,\n\n    \nname\n:\n \nClear Configuration\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n7\n,\n\n    \nicon\n:\n \nic_delete_blue_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.clear_config.ActivityClearConfig\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nconfig_download\n,\n\n    \ntype\n:\n \nreset\n,\n\n    \nname\n:\n \nDownload New Configuration\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n7\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nicon\n:\n \nic_download_teal_48dp\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.config_info.ActivityConfigDownload\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \napp_install\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nApplications\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n6\n,\n\n    \nicon\n:\n \nic_install_teal_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.app_install.ActivityInstallApp\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \napp_settings\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nSettings\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n6\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.app_settings.ActivityAppSettings\n,\n\n    \nicon\n:\n \nic_settings_teal_48dp\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \ndatakit_connect\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nDataKit Connection\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n5\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nstudy_info\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n4\n,\n\n    \nname\n:\n \nStudy\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nuser_info\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nUser ID\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n4\n,\n\n    \nicon\n:\n \nic_user_teal_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.user_info.ActivityUserInfo\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nwakeup_info\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nWakeup Time\n,\n\n    \nrank\n:\n \n4\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nicon\n:\n \nic_wakeup_teal_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.wakeup_info.ActivityWakeUp\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nsleep_info\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nSleep Time\n,\n\n    \nrank\n:\n \n4\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nicon\n:\n \nic_sleep_teal_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.sleep_info.ActivitySleep\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nday_type\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nname\n:\n \nPre/Post Quit Day\n,\n\n    \nrank\n:\n \n4\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nicon\n:\n \nic_sleep_teal_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.day_type.ActivityDayType\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nclear_database\n,\n\n    \ntype\n:\n \nreset\n,\n\n    \nname\n:\n \nClear All Data\n,\n\n    \nicon\n:\n \nic_delete_indigo_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n4\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.clear_data.ActivityClearData\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \napp_service\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nname\n:\n \nRunning Apps\n,\n\n    \nrank\n:\n \n3\n,\n\n    \nicon\n:\n \nic_apps_teal_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.app_service.ActivityService\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \ndata_quality\n,\n\n    \nrank\n:\n \n2\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nname\n:\n \nSensor Data Quality\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nday_start_end\n,\n\n    \ntype\n:\n \nsetup\n,\n\n    \nrank\n:\n \n2\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nname\n:\n \nDay Start/Day End\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nprivacy\n,\n\n    \nname\n:\n \nPrivacy\n,\n\n    \nicon\n:\n \nic_unlock_teal_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.datakit\n,\n\n    \nrank\n:\n \n2\n,\n\n    \nclass_name\n:\n \norg.md2k.datakit.ActivityPrivacy\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nuser_status\n,\n\n    \nname\n:\n \nuser_status\n,\n\n    \nicon\n:\n \nic_unlock_teal_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n2\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nintervention\n,\n\n    \nname\n:\n \nIntervention\n,\n\n    \nicon\n:\n \nic_intervention_48dp\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n2\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.intervention.ActivityInterventionApp\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nsmoking_self_report\n,\n\n    \nname\n:\n \nReport Smoking\n,\n\n    \nicon\n:\n \nic_smoking_teal_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nrank\n:\n \n2\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.selfreport.ActivitySelfReport\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nplotter\n,\n\n    \nname\n:\n \nPlotter\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nicon\n:\n \nic_plot_teal_48dp\n,\n\n    \nrank\n:\n \n2\n,\n\n    \npackage_name\n:\n \norg.md2k.plotter\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nuser_app\n,\n\n    \nname\n:\n \nUser Application\n,\n\n    \nicon\n:\n \nic_unlock_teal_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n2\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nEMA_test\n,\n\n    \ntype\n:\n \nApp Controller\n,\n\n    \nname\n:\n \nSurvey/EMI Test\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nicon\n:\n \nic_notification_teal_48dp\n,\n\n    \nrank\n:\n \n2\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.EMA_test.ActivityEMA_test\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \napp_reset\n,\n\n    \nname\n:\n \nReset App\n,\n\n    \nicon\n:\n \nic_refresh_teal_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n2\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.app_reset.ActivityAppReset\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \napp_start\n,\n\n    \nname\n:\n \nStart Data Collection\n,\n\n    \nicon\n:\n \nic_play_teal_48dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n2\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.app_start.ActivityAppStart\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \napp_stop\n,\n\n    \nname\n:\n \nStop \n Close Application\n,\n\n    \nicon\n:\n \nic_error_red_50dp\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nrank\n:\n \n2\n,\n\n    \npackage_name\n:\n \norg.md2k.study\n,\n\n    \nclass_name\n:\n \norg.md2k.study.model_view.app_stop.ActivityAppStop\n\n  \n}\n\n\n]\n\n\n\n\n\n\nAdministration View\n\n\nThis configuration block controls the administration view and allows a password to be specified.\n\n\nAdmin View\n\n\nThe admin view has two parameters:\n\n\n\n\npassword\n: plaintext password to gain access to the administration panel.  This field may be omitted to disable passwords\n\n\nview_contents\n: a list of \nadmin view\n objects\n\n{\n\n  \npassword\n:\n \n1234\n,\n\n  \nview_contents\n:\n \n[\n\n    \nADMIN_VIEW_OBJECT\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\n\nAdmin View Object\n\n\nRequired fields:\n\n\n\n\nid\n: unique identifier to reference this admin view component\n\n\nname\n: Human readable name suitable for display in the application user interface\n\n\nenable\n: \ntrue\n or \nfalse\n to enable or disable this view\n\n\nvalues\n: List of \nids\n defined in ...\n\n\n\n\n{\n\n  \nid\n:\n \nkey_configure_app\n,\n\n  \nname\n:\n \nConfigure Applications\n,\n\n  \nenable\n:\n \ntrue\n,\n\n  \nvalues\n:\n \n[\n\n    \nconfig_info\n,\n\n    \napp_install\n,\n\n    \napp_settings\n,\n\n    \nconfig_download\n,\n\n    \nclear_config\n\n  \n]\n\n\n}\n\n\n\n\n\n\nAdministration View Example\n\n\n{\n\n  \npassword\n:\n \n1234\n,\n\n  \nview_contents\n:\n \n[\n\n    \n{\n\n      \nid\n:\n \nkey_configure_app\n,\n\n      \nname\n:\n \nConfigure Applications\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nvalues\n:\n \n[\n\n        \nconfig_info\n,\n\n        \napp_install\n,\n\n        \napp_settings\n,\n\n        \nconfig_download\n,\n\n        \nclear_config\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nkey_configure_study\n,\n\n      \nname\n:\n \nConfigure Study\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nvalues\n:\n \n[\n\n        \nconfig_info\n,\n\n        \nstudy_info\n,\n\n        \nuser_info\n,\n\n        \nday_type\n,\n\n        \nwakeup_info\n,\n\n        \nsleep_info\n,\n\n        \nclear_database\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nkey_start_study\n,\n\n      \nname\n:\n \nStart Study\n,\n\n      \nenable\n:\n \ntrue\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nkey_stop_study\n,\n\n      \nname\n:\n \nStop Study\n,\n\n      \nenable\n:\n \ntrue\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nkey_other\n,\n\n      \nname\n:\n \nOthers\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nvalues\n:\n \n[\n\n        \napp_service\n,\n\n        \nEMA_test\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nUser View\n\n\nThis configuration block controls the user view. There is only one field that can be specified:\n\n\n\n\nview_contents\n: a list of \nuser view\n objects\n\n{\n\n  \nview_contents\n:\n \n[\n\n    \nUSER_VIEW_OBJECT\n\n  \n]\n\n\n}\n\n\n\n\n\n\n\n\nUser View Object\n\n\nRequired fields:\n\n\n\n\nid\n: unique identifier to reference this user view component\n\n\nenable\n: \ntrue\n or \nfalse\n to enable or disable this view\n\n\nvalues\n: List of \nids\n defined in ...\n\n\n\n\nUser View Example\n\n\n{\n\n  \nview_contents\n:\n \n[\n\n    \n{\n\n      \nid\n:\n \ndata_quality\n,\n\n      \nenable\n:\n \ntrue\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nday_start_end\n,\n\n      \nenable\n:\n \ntrue\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nprivacy\n,\n\n      \nenable\n:\n \ntrue\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nuser_app\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nvalues\n:\n \n[\n\n        \nsmoking_self_report\n,\n\n        \nintervention\n,\n\n        \napp_reset\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nData Quality List\n\n\nData quality is a component of the platform that allows for the monitoring of data streams and provides a display regarding their data quality. This list is composed of a set of \ndata sources\n that contain:\n\n\n\n\ntype\n: Must be \nDATA_QUALITY\n\n\n\n\nData Quality List Example\n\n\n[\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n\n    \n},\n\n    \ntype\n:\n \nDATA_QUALITY\n,\n\n    \nid\n:\n \nRESPIRATION\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n\n    \n},\n\n    \ntype\n:\n \nDATA_QUALITY\n,\n\n    \nid\n:\n \nECG\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \nid\n:\n \nLEFT_WRIST\n\n    \n},\n\n    \ntype\n:\n \nDATA_QUALITY\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \nid\n:\n \nRIGHT_WRIST\n\n    \n},\n\n    \ntype\n:\n \nDATA_QUALITY\n\n  \n}\n\n\n]\n\n\n\n\n\n\nData Quality View List\n\n\nThis list of objects defines how the data quality display interaction occurs and the required resources for each.\n\n\nData Quality View objects\n\n\nParameter for defining a data quality view object.\n\n\n\n\nname\n: Short name that is displayed in the user interface\n\n\nplotter\n\n\nenabled\n: \ntrue\n or \nfalse\n to enable or disable plotting of this signal\n\n\ndatasource\n: \nObject\n referring to which \ndata source\n to show in Plotter\n\n\n\n\n\n\nvideo\n\n\nenabled\n: \ntrue\n or \nfalse\n to enable or disable video\n\n\nlink\n: YouTube video identifier\n\n\n\n\n\n\nmessage\n\n\nenabled\n: \ntrue\n or \nfalse\n to enable or disable messages\n\n\ntext\n: Text to show the participant, generally to aid in diagnosing signal problems.\n\n\n\n\n\n\n\n\n{\n\n  \nname\n:\n \nBreathing\n,\n\n  \nplotter\n:\n \n{\n\n    \nenable\n:\n \ntrue\n,\n\n    \ndatasource\n:\n \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nAUTOSENSE_CHEST\n\n      \n},\n\n      \ntype\n:\n \nRESPIRATION\n\n    \n}\n\n  \n},\n\n  \nvideo\n:\n \n{\n\n    \nenable\n:\n \ntrue\n,\n\n    \nlink\n:\n \n2bxc8kONPSs\n\n  \n},\n\n  \nmessage\n:\n \n{\n\n    \nenable\n:\n \ntrue\n,\n\n    \ntext\n:\n \n1) Tighten the chest band so it fits snugly under the armpits.\\n\\n\n\n\n             2) Make sure all cable connections are secure.\\n\\n\n\n\n             3) Reset the application, wait 15 seconds and check again.\\n\\n\n\n\n             4) Restart the phone, wait one minute and check again.\\n\\n\n\n\n             5) Make sure the chest sensor is charged and powered ON.\n\n  \n}\n\n\n}\n\n\n\n\n\n\nData Quality View List Example\n\n\n[\n\n  \n{\n\n    \nname\n:\n \nBreathing\n,\n\n    \nplotter\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ndatasource\n:\n \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nAUTOSENSE_CHEST\n\n        \n},\n\n        \ntype\n:\n \nRESPIRATION\n\n      \n}\n\n    \n},\n\n    \nvideo\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \nlink\n:\n \n2bxc8kONPSs\n\n    \n},\n\n    \nmessage\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ntext\n:\n \n1) Tighten the chest band so it fits snugly under the armpits.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON.\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nname\n:\n \nHeart Rate\n,\n\n    \nplotter\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ndatasource\n:\n \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nAUTOSENSE_CHEST\n\n        \n},\n\n        \ntype\n:\n \nECG\n\n      \n}\n\n    \n},\n\n    \nvideo\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \nlink\n:\n \ntoiopB7ltc8\n\n    \n},\n\n    \nmessage\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ntext\n:\n \n1) Adjust the position of the electrodes on the body.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON.\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nname\n:\n \nLeft Wrist(A)\n,\n\n    \nplotter\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ndatasource\n:\n \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nAUTOSENSE_WRIST\n,\n\n          \nid\n:\n \nLEFT_WRIST\n\n        \n},\n\n        \ntype\n:\n \nACCELEROMETER_X\n\n      \n}\n\n    \n},\n\n    \nvideo\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \nlink\n:\n \nMbHUvM6C1GE\n\n    \n},\n\n    \nmessage\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ntext\n:\n \n1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged.\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nname\n:\n \nRight Wrist(A)\n,\n\n    \nplotter\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ndatasource\n:\n \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nAUTOSENSE_WRIST\n,\n\n          \nid\n:\n \nRIGHT_WRIST\n\n        \n},\n\n        \ntype\n:\n \nACCELEROMETER_X\n\n      \n}\n\n    \n},\n\n    \nvideo\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \nlink\n:\n \nMbHUvM6C1GE\n\n    \n},\n\n    \nmessage\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ntext\n:\n \n1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged.\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nname\n:\n \nLeft Wrist(M)\n,\n\n    \nplotter\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ndatasource\n:\n \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nMICROSOFT_BAND\n,\n\n          \nid\n:\n \nLEFT_WRIST\n\n        \n},\n\n        \ntype\n:\n \nACCELEROMETER\n\n      \n}\n\n    \n},\n\n    \nvideo\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \nlink\n:\n \nQYQJISCLCdg\n\n    \n},\n\n    \nmessage\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ntext\n:\n \n1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON.\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nname\n:\n \nRight Wrist(M)\n,\n\n    \nplotter\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ndatasource\n:\n \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nMICROSOFT_BAND\n,\n\n          \nid\n:\n \nRIGHT_WRIST\n\n        \n},\n\n        \ntype\n:\n \nACCELEROMETER\n\n      \n}\n\n    \n},\n\n    \nvideo\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \nlink\n:\n \nQYQJISCLCdg\n\n    \n},\n\n    \nmessage\n:\n \n{\n\n      \nenable\n:\n \ntrue\n,\n\n      \ntext\n:\n \n1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON.\n\n    \n}\n\n  \n}\n\n\n]\n\n\n\n\n\n\nDay Start\n\n\nTODO: ???\n\n\n{\n\n  \nby\n:\n \nuser\n,\n\n  \nbase\n:\n \nwakeup\n,\n\n  \nnotify\n:\n \n[\n\n    \n{\n\n      \ntype\n:\n \nbutton\n,\n\n      \noffset\n:\n \n-30000\n\n    \n},\n\n    \n{\n\n      \ntype\n:\n \nprompt\n,\n\n      \noffset\n:\n \n0\n,\n\n      \nparameters\n:\n \n[\n\n        \nPHONE_SCREEN\n,\n\n        \nPHONE_MESSAGE_START_DAY\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \ntype\n:\n \nnotification\n,\n\n      \noffset\n:\n \n30000\n,\n\n      \nparameters\n:\n \n[\n\n        \nPHONE_VIBRATE\n,\n\n        \nPHONE_TONE\n,\n\n        \nPHONE_SCREEN\n,\n\n        \nPHONE_MESSAGE_START_DAY\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nDay End\n\n\nTODO: ???\n\n\n{\n\n  \nby\n:\n \nuser\n,\n\n  \nbase\n:\n \nday_start\n,\n\n  \nnotify\n:\n \n[\n\n    \n{\n\n      \ntype\n:\n \nbutton\n,\n\n      \noffset\n:\n \n30000\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nComplete Example\n\n\n{\n\n  \nconfig_info\n:\n \n{\n\n    \nid\n:\n \nSTU00201566-Test\n,\n\n    \nname\n:\n \nMD2K Smoking Study (at NW)-Test\n,\n\n    \nversion_code\n:\n \n21\n,\n\n    \nrequired_files\n:\n \n[\n\n      \norg.md2k.autosense/default_config.json\n,\n\n      \norg.md2k.datakit/config.json\n,\n\n      \norg.md2k.datakit/default_config.json\n,\n\n      \norg.md2k.ema/config_ema.json\n,\n\n      \norg.md2k.ema/end_of_day_recording.json\n,\n\n      \norg.md2k.ema/event_contingent_recording.json\n,\n\n      \norg.md2k.ema/random_experience_sampling.json\n,\n\n      \norg.md2k.ema_scheduler/config.json\n,\n\n      \norg.md2k.ema_scheduler/notification.json\n,\n\n      \norg.md2k.ema_scheduler/condition.json\n,\n\n      \norg.md2k.microsoftband/default_config.json\n,\n\n      \norg.md2k.phonesensor/default_config.json\n,\n\n      \norg.md2k.plotter/default_config.json\n,\n\n      \norg.md2k.streamprocessor/model.json\n,\n\n      \norg.md2k.streamprocessor/model_rip.json\n,\n\n      \norg.md2k.notificationmanager/tone.mp3\n,\n\n      \norg.md2k.study/config.json\n,\n\n      \norg.md2k.study/notification.json\n,\n\n      \norg.md2k.study/tutorial.pdf\n\n    \n]\n\n  \n},\n\n  \nstudy_info\n:\n \n{\n\n    \nid\n:\n \nSTU00201566-Test\n,\n\n    \nname\n:\n \nMD2K Smoking Study (at NW)-Test\n\n  \n},\n\n  \napps\n:\n \n[\n\n    \n{\n\n      \nid\n:\n \nstudy\n,\n\n      \nname\n:\n \nStudy\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-Study/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \ndatakit\n,\n\n      \nname\n:\n \nDataKit\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.datakit\n,\n\n      \nconfig\n:\n \nconfig.json\n,\n\n      \ndefault_config\n:\n \ndefault_config.json\n,\n\n      \nservice\n:\n \norg.md2k.datakit.cerebralcortex.ServiceCerebralCortex\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-DataKit/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nphonesensor\n,\n\n      \nname\n:\n \nPhoneSensor\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.phonesensor\n,\n\n      \nservice\n:\n \norg.md2k.phonesensor.ServicePhoneSensor\n,\n\n      \nsettings\n:\n \norg.md2k.phonesensor.ActivityPhoneSensorSettings\n,\n\n      \nconfig\n:\n \nconfig.json\n,\n\n      \ndefault_config\n:\n \ndefault_config.json\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-PhoneSensor/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nautosense\n,\n\n      \nname\n:\n \nAutoSense\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.autosense\n,\n\n      \nservice\n:\n \norg.md2k.autosense.antradio.connection.ServiceAutoSenses\n,\n\n      \nsettings\n:\n \norg.md2k.autosense.ActivityAutoSenseSettings\n,\n\n      \nconfig\n:\n \nconfig.json\n,\n\n      \ndefault_config\n:\n \ndefault_config.json\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-AutoSense/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nmicrosofthealth\n,\n\n      \nname\n:\n \nMicrosoftHealth\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \ncom.microsoft.kapp\n,\n\n      \ndownload_link\n:\n \nmarket://details?id=com.microsoft.kapp\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nmicrosoftband\n,\n\n      \nname\n:\n \nMicrosoftBand\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.microsoftband\n,\n\n      \nservice\n:\n \norg.md2k.microsoftband.ServiceMicrosoftBands\n,\n\n      \nsettings\n:\n \norg.md2k.microsoftband.ActivityMicrosoftBandSettings\n,\n\n      \nconfig\n:\n \nconfig.json\n,\n\n      \ndefault_config\n:\n \ndefault_config.json\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-MicrosoftBand/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nstreamprocessor\n,\n\n      \nname\n:\n \nStreamProcessor\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.streamprocessor\n,\n\n      \nservice\n:\n \norg.md2k.streamprocessor.ServiceStreamProcessor\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-StreamProcessor/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nema_scheduler\n,\n\n      \nname\n:\n \nEMAScheduler\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.ema_scheduler\n,\n\n      \nservice\n:\n \norg.md2k.ema_scheduler.ServiceEMAScheduler\n,\n\n      \nconfig\n:\n \nconfig.json\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-EMAScheduler/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nnotificationmanager\n,\n\n      \nname\n:\n \nNotificationManager\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.notificationmanager\n,\n\n      \nservice\n:\n \norg.md2k.notificationmanager.ServiceNotificationManager\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-NotificationManager/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nema\n,\n\n      \nname\n:\n \nEMA\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.ema\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-EMA/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nmoodsurfing\n,\n\n      \nname\n:\n \nMoodSurfing\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.moodsurfing\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-MoodSurfing/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nthoughtshakeup\n,\n\n      \nname\n:\n \nThoughtShakeup\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.thoughtshakeup\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-ThoughtShakeup/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nheadspace\n,\n\n      \nname\n:\n \nHeadSpace\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \ncom.getsomeheadspace.android\n,\n\n      \ndownload_link\n:\n \nmarket://details?id=com.getsomeheadspace.android\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nplotter\n,\n\n      \nname\n:\n \nPlotter\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.plotter\n,\n\n      \ndefault_config\n:\n \ndefault_config.json\n,\n\n      \ndownload_link\n:\n \nhttps://github.com/MD2Korg/mCerebrum-Plotter/releases\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nadobe_acrobat_reader\n,\n\n      \nname\n:\n \nAdobe Acrobat Reader\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \ncom.adobe.reader\n,\n\n      \ndownload_link\n:\n \nmarket://details?id=com.adobe.reader\n\n    \n}\n\n  \n],\n\n  \nactions\n:\n \n[\n\n    \n{\n\n      \nid\n:\n \nconfig_info\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nConfiguration Info\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n7\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nclear_config\n,\n\n      \ntype\n:\n \nreset\n,\n\n      \nname\n:\n \nClear Configuration\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n7\n,\n\n      \nicon\n:\n \nic_delete_blue_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.clear_config.ActivityClearConfig\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nconfig_download\n,\n\n      \ntype\n:\n \nreset\n,\n\n      \nname\n:\n \nDownload New Configuration\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n7\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nicon\n:\n \nic_download_teal_48dp\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.config_info.ActivityConfigDownload\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \napp_install\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nApplications\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n6\n,\n\n      \nicon\n:\n \nic_install_teal_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.app_install.ActivityInstallApp\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \napp_settings\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nSettings\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n6\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.app_settings.ActivityAppSettings\n,\n\n      \nicon\n:\n \nic_settings_teal_48dp\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \ndatakit_connect\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nDataKit Connection\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n5\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nstudy_info\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n4\n,\n\n      \nname\n:\n \nStudy\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nuser_info\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nUser ID\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n4\n,\n\n      \nicon\n:\n \nic_user_teal_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.user_info.ActivityUserInfo\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nwakeup_info\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nWakeup Time\n,\n\n      \nrank\n:\n \n4\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nicon\n:\n \nic_wakeup_teal_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.wakeup_info.ActivityWakeUp\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nsleep_info\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nSleep Time\n,\n\n      \nrank\n:\n \n4\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nicon\n:\n \nic_sleep_teal_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.sleep_info.ActivitySleep\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nday_type\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nname\n:\n \nPre/Post Quit Day\n,\n\n      \nrank\n:\n \n4\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nicon\n:\n \nic_sleep_teal_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.day_type.ActivityDayType\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nclear_database\n,\n\n      \ntype\n:\n \nreset\n,\n\n      \nname\n:\n \nClear All Data\n,\n\n      \nicon\n:\n \nic_delete_indigo_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n4\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.clear_data.ActivityClearData\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \napp_service\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nname\n:\n \nRunning Apps\n,\n\n      \nrank\n:\n \n3\n,\n\n      \nicon\n:\n \nic_apps_teal_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.app_service.ActivityService\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \ndata_quality\n,\n\n      \nrank\n:\n \n2\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nname\n:\n \nSensor Data Quality\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nday_start_end\n,\n\n      \ntype\n:\n \nsetup\n,\n\n      \nrank\n:\n \n2\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nname\n:\n \nDay Start/Day End\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nprivacy\n,\n\n      \nname\n:\n \nPrivacy\n,\n\n      \nicon\n:\n \nic_unlock_teal_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.datakit\n,\n\n      \nrank\n:\n \n2\n,\n\n      \nclass_name\n:\n \norg.md2k.datakit.ActivityPrivacy\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nuser_status\n,\n\n      \nname\n:\n \nuser_status\n,\n\n      \nicon\n:\n \nic_unlock_teal_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n2\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nintervention\n,\n\n      \nname\n:\n \nIntervention\n,\n\n      \nicon\n:\n \nic_intervention_48dp\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n2\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.intervention.ActivityInterventionApp\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nsmoking_self_report\n,\n\n      \nname\n:\n \nReport Smoking\n,\n\n      \nicon\n:\n \nic_smoking_teal_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nrank\n:\n \n2\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.selfreport.ActivitySelfReport\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nplotter\n,\n\n      \nname\n:\n \nPlotter\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nicon\n:\n \nic_plot_teal_48dp\n,\n\n      \nrank\n:\n \n2\n,\n\n      \npackage_name\n:\n \norg.md2k.plotter\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nuser_app\n,\n\n      \nname\n:\n \nUser Application\n,\n\n      \nicon\n:\n \nic_unlock_teal_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n2\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nEMA_test\n,\n\n      \ntype\n:\n \nApp Controller\n,\n\n      \nname\n:\n \nSurvey/EMI Test\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nicon\n:\n \nic_notification_teal_48dp\n,\n\n      \nrank\n:\n \n2\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.EMA_test.ActivityEMA_test\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \napp_reset\n,\n\n      \nname\n:\n \nReset App\n,\n\n      \nicon\n:\n \nic_refresh_teal_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n2\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.app_reset.ActivityAppReset\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \napp_start\n,\n\n      \nname\n:\n \nStart Data Collection\n,\n\n      \nicon\n:\n \nic_play_teal_48dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n2\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.app_start.ActivityAppStart\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \napp_stop\n,\n\n      \nname\n:\n \nStop \n Close Application\n,\n\n      \nicon\n:\n \nic_error_red_50dp\n,\n\n      \nenable\n:\n \ntrue\n,\n\n      \nrank\n:\n \n2\n,\n\n      \npackage_name\n:\n \norg.md2k.study\n,\n\n      \nclass_name\n:\n \norg.md2k.study.model_view.app_stop.ActivityAppStop\n\n    \n}\n\n  \n],\n\n  \nadmin_view\n:\n \n{\n\n    \npassword\n:\n \n1234\n,\n\n    \nview_contents\n:\n \n[\n\n      \n{\n\n        \nid\n:\n \nkey_configure_app\n,\n\n        \nname\n:\n \nConfigure Applications\n,\n\n        \nenable\n:\n \ntrue\n,\n\n        \nvalues\n:\n \n[\n\n          \nconfig_info\n,\n\n          \napp_install\n,\n\n          \napp_settings\n,\n\n          \nconfig_download\n,\n\n          \nclear_config\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nkey_configure_study\n,\n\n        \nname\n:\n \nConfigure Study\n,\n\n        \nenable\n:\n \ntrue\n,\n\n        \nvalues\n:\n \n[\n\n          \nconfig_info\n,\n\n          \nstudy_info\n,\n\n          \nuser_info\n,\n\n          \nday_type\n,\n\n          \nwakeup_info\n,\n\n          \nsleep_info\n,\n\n          \nclear_database\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nkey_start_study\n,\n\n        \nname\n:\n \nStart Study\n,\n\n        \nenable\n:\n \ntrue\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nkey_stop_study\n,\n\n        \nname\n:\n \nStop Study\n,\n\n        \nenable\n:\n \ntrue\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nkey_other\n,\n\n        \nname\n:\n \nOthers\n,\n\n        \nenable\n:\n \ntrue\n,\n\n        \nvalues\n:\n \n[\n\n          \napp_service\n,\n\n          \nEMA_test\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \nuser_view\n:\n \n{\n\n    \nview_contents\n:\n \n[\n\n      \n{\n\n        \nid\n:\n \ndata_quality\n,\n\n        \nenable\n:\n \ntrue\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nday_start_end\n,\n\n        \nenable\n:\n \ntrue\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nprivacy\n,\n\n        \nenable\n:\n \ntrue\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nuser_app\n,\n\n        \nenable\n:\n \ntrue\n,\n\n        \nvalues\n:\n \n[\n\n          \nsmoking_self_report\n,\n\n          \nintervention\n,\n\n          \napp_reset\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \ndata_quality\n:\n \n[\n\n    \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nAUTOSENSE_CHEST\n\n      \n},\n\n      \ntype\n:\n \nDATA_QUALITY\n,\n\n      \nid\n:\n \nRESPIRATION\n\n    \n},\n\n    \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nAUTOSENSE_CHEST\n\n      \n},\n\n      \ntype\n:\n \nDATA_QUALITY\n,\n\n      \nid\n:\n \nECG\n\n    \n},\n\n    \n{\n\n      \nplatform\n:\n \n{\n\n        \nid\n:\n \nLEFT_WRIST\n\n      \n},\n\n      \ntype\n:\n \nDATA_QUALITY\n\n    \n},\n\n    \n{\n\n      \nplatform\n:\n \n{\n\n        \nid\n:\n \nRIGHT_WRIST\n\n      \n},\n\n      \ntype\n:\n \nDATA_QUALITY\n\n    \n}\n\n  \n],\n\n  \ndata_quality_view\n:\n \n[\n\n    \n{\n\n      \nname\n:\n \nBreathing\n,\n\n      \nplotter\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ndatasource\n:\n \n{\n\n          \nplatform\n:\n \n{\n\n            \ntype\n:\n \nAUTOSENSE_CHEST\n\n          \n},\n\n          \ntype\n:\n \nRESPIRATION\n\n        \n}\n\n      \n},\n\n      \nvideo\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \nlink\n:\n \n2bxc8kONPSs\n\n      \n},\n\n      \nmessage\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ntext\n:\n \n1) Tighten the chest band so it fits snugly under the armpits.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON.\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nname\n:\n \nHeart Rate\n,\n\n      \nplotter\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ndatasource\n:\n \n{\n\n          \nplatform\n:\n \n{\n\n            \ntype\n:\n \nAUTOSENSE_CHEST\n\n          \n},\n\n          \ntype\n:\n \nECG\n\n        \n}\n\n      \n},\n\n      \nvideo\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \nlink\n:\n \ntoiopB7ltc8\n\n      \n},\n\n      \nmessage\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ntext\n:\n \n1) Adjust the position of the electrodes on the body.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON.\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nname\n:\n \nLeft Wrist(A)\n,\n\n      \nplotter\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ndatasource\n:\n \n{\n\n          \nplatform\n:\n \n{\n\n            \ntype\n:\n \nAUTOSENSE_WRIST\n,\n\n            \nid\n:\n \nLEFT_WRIST\n\n          \n},\n\n          \ntype\n:\n \nACCELEROMETER_X\n\n        \n}\n\n      \n},\n\n      \nvideo\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \nlink\n:\n \nMbHUvM6C1GE\n\n      \n},\n\n      \nmessage\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ntext\n:\n \n1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged.\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nname\n:\n \nRight Wrist(A)\n,\n\n      \nplotter\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ndatasource\n:\n \n{\n\n          \nplatform\n:\n \n{\n\n            \ntype\n:\n \nAUTOSENSE_WRIST\n,\n\n            \nid\n:\n \nRIGHT_WRIST\n\n          \n},\n\n          \ntype\n:\n \nACCELEROMETER_X\n\n        \n}\n\n      \n},\n\n      \nvideo\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \nlink\n:\n \nMbHUvM6C1GE\n\n      \n},\n\n      \nmessage\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ntext\n:\n \n1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged.\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nname\n:\n \nLeft Wrist(M)\n,\n\n      \nplotter\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ndatasource\n:\n \n{\n\n          \nplatform\n:\n \n{\n\n            \ntype\n:\n \nMICROSOFT_BAND\n,\n\n            \nid\n:\n \nLEFT_WRIST\n\n          \n},\n\n          \ntype\n:\n \nACCELEROMETER\n\n        \n}\n\n      \n},\n\n      \nvideo\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \nlink\n:\n \nQYQJISCLCdg\n\n      \n},\n\n      \nmessage\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ntext\n:\n \n1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON.\n\n      \n}\n\n    \n},\n\n    \n{\n\n      \nname\n:\n \nRight Wrist(M)\n,\n\n      \nplotter\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ndatasource\n:\n \n{\n\n          \nplatform\n:\n \n{\n\n            \ntype\n:\n \nMICROSOFT_BAND\n,\n\n            \nid\n:\n \nRIGHT_WRIST\n\n          \n},\n\n          \ntype\n:\n \nACCELEROMETER\n\n        \n}\n\n      \n},\n\n      \nvideo\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \nlink\n:\n \nQYQJISCLCdg\n\n      \n},\n\n      \nmessage\n:\n \n{\n\n        \nenable\n:\n \ntrue\n,\n\n        \ntext\n:\n \n1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON.\n\n      \n}\n\n    \n}\n\n  \n],\n\n  \nday_start\n:\n \n{\n\n    \nby\n:\n \nuser\n,\n\n    \nbase\n:\n \nwakeup\n,\n\n    \nnotify\n:\n \n[\n\n      \n{\n\n        \ntype\n:\n \nbutton\n,\n\n        \noffset\n:\n \n-30000\n\n      \n},\n\n      \n{\n\n        \ntype\n:\n \nprompt\n,\n\n        \noffset\n:\n \n0\n,\n\n        \nparameters\n:\n \n[\n\n          \nPHONE_SCREEN\n,\n\n          \nPHONE_MESSAGE_START_DAY\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntype\n:\n \nnotification\n,\n\n        \noffset\n:\n \n30000\n,\n\n        \nparameters\n:\n \n[\n\n          \nPHONE_VIBRATE\n,\n\n          \nPHONE_TONE\n,\n\n          \nPHONE_SCREEN\n,\n\n          \nPHONE_MESSAGE_START_DAY\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \nday_end\n:\n \n{\n\n    \nby\n:\n \nuser\n,\n\n    \nbase\n:\n \nday_start\n,\n\n    \nnotify\n:\n \n[\n\n      \n{\n\n        \ntype\n:\n \nbutton\n,\n\n        \noffset\n:\n \n30000\n\n      \n}\n\n    \n]\n\n  \n}\n\n\n}",
            "title": "Configuration-mCerebrum"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#mcerebrum",
            "text": "Config file name and location:  mCerebrum/org.md2k.study/config.json",
            "title": "mCerebrum"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#structure-overview",
            "text": "This is the general structure of the mCerebrum configuration file.  Please see additional details in the following subsections. { \n   config_info :   { \n     CONFIG_INFO \n   }, \n   study_info :   { \n     STUDY_INFO \n   }, \n   apps :   [ \n     APP_LIST 1 , \n     APP_LIST 2 , \n     ... \n   ], \n   actions :   [ \n     ACTION_ 1 , \n     ACTION_ 2 , \n     ... \n   ], \n   admin_view :   { \n     ADMININISTRATION_VIEW \n   }, \n   user_view :   { \n     USER_VIEW \n   }, \n   data_quality :   [ \n     DATA_QUALITY_ 1 , \n     DATA_QUALITY_ 2 , \n     ... \n   ], \n   data_quality_view :   [ \n     DATA_QUALITY_VIEW_ 1 , \n     DATA_QUALITY_VIEW_ 2 , \n     ... \n   ], \n   day_start :   { \n     DAY_START \n   }, \n   day_end :   { \n     DAY_END \n   }  }",
            "title": "Structure Overview"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#config-info",
            "text": "The config info key specifies several required pieces of information and defines which resources are required.   id : Unique study identifier.  E.g. ProtocolNumber TODO: Why is this here?  name : Human readable study description.  This identifies a specific study. TODO: Why is this here?  version_code : The version of this file that is utilized by mCerebrum to determine if it can utilize this configuration  required_files : List of files required to be present in the configuration folder before allowing the system to be configured.",
            "title": "Config Info"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#example",
            "text": "config_info :   { \n   id :   STU00201566-Test , \n   name :   MD2K Smoking Study (at NW)-Test , \n   version_code :   21 , \n   required_files :   [ \n     org.md2k.autosense/default_config.json , \n     org.md2k.datakit/config.json , \n     org.md2k.datakit/default_config.json , \n     org.md2k.ema/config_ema.json , \n     org.md2k.ema/end_of_day_recording.json , \n     org.md2k.ema/event_contingent_recording.json , \n     org.md2k.ema/random_experience_sampling.json , \n     org.md2k.ema_scheduler/config.json , \n     org.md2k.ema_scheduler/notification.json , \n     org.md2k.ema_scheduler/condition.json , \n     org.md2k.microsoftband/default_config.json , \n     org.md2k.phonesensor/default_config.json , \n     org.md2k.plotter/default_config.json , \n     org.md2k.streamprocessor/model.json , \n     org.md2k.streamprocessor/model_rip.json , \n     org.md2k.notificationmanager/tone.mp3 , \n     org.md2k.study/config.json , \n     org.md2k.study/notification.json , \n     org.md2k.study/tutorial.pdf \n   ]  }",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#study-info",
            "text": "This object defines the specific study for the the configuration.   id : Unique study identifier.  E.g. ProtocolNumber  name : Human readable study description.  This identifies a specific study.",
            "title": "Study Info"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#example_1",
            "text": "{ \n   id :   STU00201566-Test , \n   name :   MD2K Smoking Study (at NW)-Test  }",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#application-list",
            "text": "The application list defines which applications the system requires to perform its tasks,\nwhere to get them from, and any necessary configurations and services.",
            "title": "Application List"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#application-object",
            "text": "Each application object consists of several fields:  Required   id : unique identifier  name : Human readable application name  enable :  true  or  false  to enable or disable this application  package_name : Android package name for this application  download_link : URL designating a GitHub release page or Google play store link   Optional or as necessary   config : The name of a configuration file  default_config : The name of a default configuration file.  If a default file is defined and exists, it will override the config file.  service : A specific Android service class for a service  settings : A specific Android service class for a preference panel   { \n   id :   datakit , \n   name :   DataKit , \n   enable :   true , \n   package_name :   org.md2k.datakit , \n   config :   config.json , \n   default_config :   default_config.json , \n   service :   org.md2k.datakit.cerebralcortex.ServiceCerebralCortex , \n   download_link :   https://github.com/MD2Korg/mCerebrum-DataKit/releases  }",
            "title": "Application object"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#application-list-example",
            "text": "A complete example List  [ \n   { \n     id :   study , \n     name :   Study , \n     enable :   true , \n     package_name :   org.md2k.study , \n     download_link :   https://github.com/MD2Korg/mCerebrum-Study/releases \n   }, \n   { \n     id :   datakit , \n     name :   DataKit , \n     enable :   true , \n     package_name :   org.md2k.datakit , \n     config :   config.json , \n     default_config :   default_config.json , \n     service :   org.md2k.datakit.cerebralcortex.ServiceCerebralCortex , \n     download_link :   https://github.com/MD2Korg/mCerebrum-DataKit/releases \n   }, \n   { \n     id :   phonesensor , \n     name :   PhoneSensor , \n     enable :   true , \n     package_name :   org.md2k.phonesensor , \n     service :   org.md2k.phonesensor.ServicePhoneSensor , \n     settings :   org.md2k.phonesensor.ActivityPhoneSensorSettings , \n     config :   config.json , \n     default_config :   default_config.json , \n     download_link :   https://github.com/MD2Korg/mCerebrum-PhoneSensor/releases \n   }, \n   { \n     id :   autosense , \n     name :   AutoSense , \n     enable :   true , \n     package_name :   org.md2k.autosense , \n     service :   org.md2k.autosense.antradio.connection.ServiceAutoSenses , \n     settings :   org.md2k.autosense.ActivityAutoSenseSettings , \n     config :   config.json , \n     default_config :   default_config.json , \n     download_link :   https://github.com/MD2Korg/mCerebrum-AutoSense/releases \n   }, \n   { \n     id :   microsofthealth , \n     name :   MicrosoftHealth , \n     enable :   true , \n     package_name :   com.microsoft.kapp , \n     download_link :   market://details?id=com.microsoft.kapp \n   }, \n   { \n     id :   microsoftband , \n     name :   MicrosoftBand , \n     enable :   true , \n     package_name :   org.md2k.microsoftband , \n     service :   org.md2k.microsoftband.ServiceMicrosoftBands , \n     settings :   org.md2k.microsoftband.ActivityMicrosoftBandSettings , \n     config :   config.json , \n     default_config :   default_config.json , \n     download_link :   https://github.com/MD2Korg/mCerebrum-MicrosoftBand/releases \n   }, \n   { \n     id :   streamprocessor , \n     name :   StreamProcessor , \n     enable :   true , \n     package_name :   org.md2k.streamprocessor , \n     service :   org.md2k.streamprocessor.ServiceStreamProcessor , \n     download_link :   https://github.com/MD2Korg/mCerebrum-StreamProcessor/releases \n   }, \n   { \n     id :   ema_scheduler , \n     name :   EMAScheduler , \n     enable :   true , \n     package_name :   org.md2k.ema_scheduler , \n     service :   org.md2k.ema_scheduler.ServiceEMAScheduler , \n     config :   config.json , \n     download_link :   https://github.com/MD2Korg/mCerebrum-EMAScheduler/releases \n   }, \n   { \n     id :   notificationmanager , \n     name :   NotificationManager , \n     enable :   true , \n     package_name :   org.md2k.notificationmanager , \n     service :   org.md2k.notificationmanager.ServiceNotificationManager , \n     download_link :   https://github.com/MD2Korg/mCerebrum-NotificationManager/releases \n   }, \n   { \n     id :   ema , \n     name :   EMA , \n     enable :   true , \n     package_name :   org.md2k.ema , \n     download_link :   https://github.com/MD2Korg/mCerebrum-EMA/releases \n   }, \n   { \n     id :   moodsurfing , \n     name :   MoodSurfing , \n     enable :   true , \n     package_name :   org.md2k.moodsurfing , \n     download_link :   https://github.com/MD2Korg/mCerebrum-MoodSurfing/releases \n   }, \n   { \n     id :   thoughtshakeup , \n     name :   ThoughtShakeup , \n     enable :   true , \n     package_name :   org.md2k.thoughtshakeup , \n     download_link :   https://github.com/MD2Korg/mCerebrum-ThoughtShakeup/releases \n   }, \n   { \n     id :   headspace , \n     name :   HeadSpace , \n     enable :   true , \n     package_name :   com.getsomeheadspace.android , \n     download_link :   market://details?id=com.getsomeheadspace.android \n   }, \n   { \n     id :   plotter , \n     name :   Plotter , \n     enable :   true , \n     package_name :   org.md2k.plotter , \n     default_config :   default_config.json , \n     download_link :   https://github.com/MD2Korg/mCerebrum-Plotter/releases \n   }, \n   { \n     id :   adobe_acrobat_reader , \n     name :   Adobe Acrobat Reader , \n     enable :   true , \n     package_name :   com.adobe.reader , \n     download_link :   market://details?id=com.adobe.reader \n   }  ]",
            "title": "Application List Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#action-list",
            "text": "Each action object consists of several fields and defines UI action that can occur:  Required   id : unique identifier  enable :  true  or  false  to enable or disable this application  name : Human readable name that can be showing in the application user interface  rank : Integer rank where the larger the number, the higher the priority   Optional or as necessary   type : One of the following  setup : ???  reset : ???    icon : Reference to icon resource within the application  package_name : Android package name for this application  class_name : Android class name for this application activity",
            "title": "Action List"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#action-object-example",
            "text": "{ \n   id :   clear_config , \n   type :   reset , \n   name :   Clear Configuration , \n   enable :   true , \n   rank :   7 , \n   icon :   ic_delete_blue_48dp , \n   package_name :   org.md2k.study , \n   class_name :   org.md2k.study.model_view.clear_config.ActivityClearConfig  }",
            "title": "Action Object Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#action-list-example",
            "text": "[ \n   { \n     id :   config_info , \n     type :   setup , \n     name :   Configuration Info , \n     enable :   true , \n     rank :   7 \n   }, \n   { \n     id :   clear_config , \n     type :   reset , \n     name :   Clear Configuration , \n     enable :   true , \n     rank :   7 , \n     icon :   ic_delete_blue_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.clear_config.ActivityClearConfig \n   }, \n   { \n     id :   config_download , \n     type :   reset , \n     name :   Download New Configuration , \n     enable :   true , \n     rank :   7 , \n     package_name :   org.md2k.study , \n     icon :   ic_download_teal_48dp , \n     class_name :   org.md2k.study.model_view.config_info.ActivityConfigDownload \n   }, \n   { \n     id :   app_install , \n     type :   setup , \n     name :   Applications , \n     enable :   true , \n     rank :   6 , \n     icon :   ic_install_teal_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.app_install.ActivityInstallApp \n   }, \n   { \n     id :   app_settings , \n     type :   setup , \n     name :   Settings , \n     enable :   true , \n     rank :   6 , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.app_settings.ActivityAppSettings , \n     icon :   ic_settings_teal_48dp \n   }, \n   { \n     id :   datakit_connect , \n     type :   setup , \n     name :   DataKit Connection , \n     enable :   true , \n     rank :   5 \n   }, \n   { \n     id :   study_info , \n     type :   setup , \n     enable :   true , \n     rank :   4 , \n     name :   Study \n   }, \n   { \n     id :   user_info , \n     type :   setup , \n     name :   User ID , \n     enable :   true , \n     rank :   4 , \n     icon :   ic_user_teal_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.user_info.ActivityUserInfo \n   }, \n   { \n     id :   wakeup_info , \n     type :   setup , \n     name :   Wakeup Time , \n     rank :   4 , \n     enable :   true , \n     icon :   ic_wakeup_teal_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.wakeup_info.ActivityWakeUp \n   }, \n   { \n     id :   sleep_info , \n     type :   setup , \n     name :   Sleep Time , \n     rank :   4 , \n     enable :   true , \n     icon :   ic_sleep_teal_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.sleep_info.ActivitySleep \n   }, \n   { \n     id :   day_type , \n     type :   setup , \n     name :   Pre/Post Quit Day , \n     rank :   4 , \n     enable :   true , \n     icon :   ic_sleep_teal_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.day_type.ActivityDayType \n   }, \n   { \n     id :   clear_database , \n     type :   reset , \n     name :   Clear All Data , \n     icon :   ic_delete_indigo_48dp , \n     enable :   true , \n     rank :   4 , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.clear_data.ActivityClearData \n   }, \n   { \n     id :   app_service , \n     type :   setup , \n     enable :   true , \n     name :   Running Apps , \n     rank :   3 , \n     icon :   ic_apps_teal_48dp , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.app_service.ActivityService \n   }, \n   { \n     id :   data_quality , \n     rank :   2 , \n     enable :   true , \n     name :   Sensor Data Quality \n   }, \n   { \n     id :   day_start_end , \n     type :   setup , \n     rank :   2 , \n     enable :   true , \n     name :   Day Start/Day End \n   }, \n   { \n     id :   privacy , \n     name :   Privacy , \n     icon :   ic_unlock_teal_48dp , \n     enable :   true , \n     package_name :   org.md2k.datakit , \n     rank :   2 , \n     class_name :   org.md2k.datakit.ActivityPrivacy \n   }, \n   { \n     id :   user_status , \n     name :   user_status , \n     icon :   ic_unlock_teal_48dp , \n     enable :   true , \n     rank :   2 \n   }, \n   { \n     id :   intervention , \n     name :   Intervention , \n     icon :   ic_intervention_48dp , \n     package_name :   org.md2k.study , \n     enable :   true , \n     rank :   2 , \n     class_name :   org.md2k.study.model_view.intervention.ActivityInterventionApp \n   }, \n   { \n     id :   smoking_self_report , \n     name :   Report Smoking , \n     icon :   ic_smoking_teal_48dp , \n     enable :   true , \n     package_name :   org.md2k.study , \n     rank :   2 , \n     class_name :   org.md2k.study.model_view.selfreport.ActivitySelfReport \n   }, \n   { \n     id :   plotter , \n     name :   Plotter , \n     enable :   true , \n     icon :   ic_plot_teal_48dp , \n     rank :   2 , \n     package_name :   org.md2k.plotter \n   }, \n   { \n     id :   user_app , \n     name :   User Application , \n     icon :   ic_unlock_teal_48dp , \n     enable :   true , \n     rank :   2 \n   }, \n   { \n     id :   EMA_test , \n     type :   App Controller , \n     name :   Survey/EMI Test , \n     enable :   true , \n     icon :   ic_notification_teal_48dp , \n     rank :   2 , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.EMA_test.ActivityEMA_test \n   }, \n   { \n     id :   app_reset , \n     name :   Reset App , \n     icon :   ic_refresh_teal_48dp , \n     enable :   true , \n     rank :   2 , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.app_reset.ActivityAppReset \n   }, \n   { \n     id :   app_start , \n     name :   Start Data Collection , \n     icon :   ic_play_teal_48dp , \n     enable :   true , \n     rank :   2 , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.app_start.ActivityAppStart \n   }, \n   { \n     id :   app_stop , \n     name :   Stop   Close Application , \n     icon :   ic_error_red_50dp , \n     enable :   true , \n     rank :   2 , \n     package_name :   org.md2k.study , \n     class_name :   org.md2k.study.model_view.app_stop.ActivityAppStop \n   }  ]",
            "title": "Action List Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#administration-view",
            "text": "This configuration block controls the administration view and allows a password to be specified.",
            "title": "Administration View"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#admin-view",
            "text": "The admin view has two parameters:   password : plaintext password to gain access to the administration panel.  This field may be omitted to disable passwords  view_contents : a list of  admin view  objects { \n   password :   1234 , \n   view_contents :   [ \n     ADMIN_VIEW_OBJECT \n   ]  }",
            "title": "Admin View"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#admin-view-object",
            "text": "Required fields:   id : unique identifier to reference this admin view component  name : Human readable name suitable for display in the application user interface  enable :  true  or  false  to enable or disable this view  values : List of  ids  defined in ...   { \n   id :   key_configure_app , \n   name :   Configure Applications , \n   enable :   true , \n   values :   [ \n     config_info , \n     app_install , \n     app_settings , \n     config_download , \n     clear_config \n   ]  }",
            "title": "Admin View Object"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#administration-view-example",
            "text": "{ \n   password :   1234 , \n   view_contents :   [ \n     { \n       id :   key_configure_app , \n       name :   Configure Applications , \n       enable :   true , \n       values :   [ \n         config_info , \n         app_install , \n         app_settings , \n         config_download , \n         clear_config \n       ] \n     }, \n     { \n       id :   key_configure_study , \n       name :   Configure Study , \n       enable :   true , \n       values :   [ \n         config_info , \n         study_info , \n         user_info , \n         day_type , \n         wakeup_info , \n         sleep_info , \n         clear_database \n       ] \n     }, \n     { \n       id :   key_start_study , \n       name :   Start Study , \n       enable :   true \n     }, \n     { \n       id :   key_stop_study , \n       name :   Stop Study , \n       enable :   true \n     }, \n     { \n       id :   key_other , \n       name :   Others , \n       enable :   true , \n       values :   [ \n         app_service , \n         EMA_test \n       ] \n     } \n   ]  }",
            "title": "Administration View Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#user-view",
            "text": "This configuration block controls the user view. There is only one field that can be specified:   view_contents : a list of  user view  objects { \n   view_contents :   [ \n     USER_VIEW_OBJECT \n   ]  }",
            "title": "User View"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#user-view-object",
            "text": "Required fields:   id : unique identifier to reference this user view component  enable :  true  or  false  to enable or disable this view  values : List of  ids  defined in ...",
            "title": "User View Object"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#user-view-example",
            "text": "{ \n   view_contents :   [ \n     { \n       id :   data_quality , \n       enable :   true \n     }, \n     { \n       id :   day_start_end , \n       enable :   true \n     }, \n     { \n       id :   privacy , \n       enable :   true \n     }, \n     { \n       id :   user_app , \n       enable :   true , \n       values :   [ \n         smoking_self_report , \n         intervention , \n         app_reset \n       ] \n     } \n   ]  }",
            "title": "User View Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#data-quality-list",
            "text": "Data quality is a component of the platform that allows for the monitoring of data streams and provides a display regarding their data quality. This list is composed of a set of  data sources  that contain:   type : Must be  DATA_QUALITY",
            "title": "Data Quality List"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#data-quality-list-example",
            "text": "[ \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST \n     }, \n     type :   DATA_QUALITY , \n     id :   RESPIRATION \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST \n     }, \n     type :   DATA_QUALITY , \n     id :   ECG \n   }, \n   { \n     platform :   { \n       id :   LEFT_WRIST \n     }, \n     type :   DATA_QUALITY \n   }, \n   { \n     platform :   { \n       id :   RIGHT_WRIST \n     }, \n     type :   DATA_QUALITY \n   }  ]",
            "title": "Data Quality List Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#data-quality-view-list",
            "text": "This list of objects defines how the data quality display interaction occurs and the required resources for each.",
            "title": "Data Quality View List"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#data-quality-view-objects",
            "text": "Parameter for defining a data quality view object.   name : Short name that is displayed in the user interface  plotter  enabled :  true  or  false  to enable or disable plotting of this signal  datasource :  Object  referring to which  data source  to show in Plotter    video  enabled :  true  or  false  to enable or disable video  link : YouTube video identifier    message  enabled :  true  or  false  to enable or disable messages  text : Text to show the participant, generally to aid in diagnosing signal problems.     { \n   name :   Breathing , \n   plotter :   { \n     enable :   true , \n     datasource :   { \n       platform :   { \n         type :   AUTOSENSE_CHEST \n       }, \n       type :   RESPIRATION \n     } \n   }, \n   video :   { \n     enable :   true , \n     link :   2bxc8kONPSs \n   }, \n   message :   { \n     enable :   true , \n     text :   1) Tighten the chest band so it fits snugly under the armpits.\\n\\n               2) Make sure all cable connections are secure.\\n\\n               3) Reset the application, wait 15 seconds and check again.\\n\\n               4) Restart the phone, wait one minute and check again.\\n\\n               5) Make sure the chest sensor is charged and powered ON. \n   }  }",
            "title": "Data Quality View objects"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#data-quality-view-list-example",
            "text": "[ \n   { \n     name :   Breathing , \n     plotter :   { \n       enable :   true , \n       datasource :   { \n         platform :   { \n           type :   AUTOSENSE_CHEST \n         }, \n         type :   RESPIRATION \n       } \n     }, \n     video :   { \n       enable :   true , \n       link :   2bxc8kONPSs \n     }, \n     message :   { \n       enable :   true , \n       text :   1) Tighten the chest band so it fits snugly under the armpits.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON. \n     } \n   }, \n   { \n     name :   Heart Rate , \n     plotter :   { \n       enable :   true , \n       datasource :   { \n         platform :   { \n           type :   AUTOSENSE_CHEST \n         }, \n         type :   ECG \n       } \n     }, \n     video :   { \n       enable :   true , \n       link :   toiopB7ltc8 \n     }, \n     message :   { \n       enable :   true , \n       text :   1) Adjust the position of the electrodes on the body.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON. \n     } \n   }, \n   { \n     name :   Left Wrist(A) , \n     plotter :   { \n       enable :   true , \n       datasource :   { \n         platform :   { \n           type :   AUTOSENSE_WRIST , \n           id :   LEFT_WRIST \n         }, \n         type :   ACCELEROMETER_X \n       } \n     }, \n     video :   { \n       enable :   true , \n       link :   MbHUvM6C1GE \n     }, \n     message :   { \n       enable :   true , \n       text :   1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged. \n     } \n   }, \n   { \n     name :   Right Wrist(A) , \n     plotter :   { \n       enable :   true , \n       datasource :   { \n         platform :   { \n           type :   AUTOSENSE_WRIST , \n           id :   RIGHT_WRIST \n         }, \n         type :   ACCELEROMETER_X \n       } \n     }, \n     video :   { \n       enable :   true , \n       link :   MbHUvM6C1GE \n     }, \n     message :   { \n       enable :   true , \n       text :   1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged. \n     } \n   }, \n   { \n     name :   Left Wrist(M) , \n     plotter :   { \n       enable :   true , \n       datasource :   { \n         platform :   { \n           type :   MICROSOFT_BAND , \n           id :   LEFT_WRIST \n         }, \n         type :   ACCELEROMETER \n       } \n     }, \n     video :   { \n       enable :   true , \n       link :   QYQJISCLCdg \n     }, \n     message :   { \n       enable :   true , \n       text :   1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON. \n     } \n   }, \n   { \n     name :   Right Wrist(M) , \n     plotter :   { \n       enable :   true , \n       datasource :   { \n         platform :   { \n           type :   MICROSOFT_BAND , \n           id :   RIGHT_WRIST \n         }, \n         type :   ACCELEROMETER \n       } \n     }, \n     video :   { \n       enable :   true , \n       link :   QYQJISCLCdg \n     }, \n     message :   { \n       enable :   true , \n       text :   1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON. \n     } \n   }  ]",
            "title": "Data Quality View List Example"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#day-start",
            "text": "TODO: ???  { \n   by :   user , \n   base :   wakeup , \n   notify :   [ \n     { \n       type :   button , \n       offset :   -30000 \n     }, \n     { \n       type :   prompt , \n       offset :   0 , \n       parameters :   [ \n         PHONE_SCREEN , \n         PHONE_MESSAGE_START_DAY \n       ] \n     }, \n     { \n       type :   notification , \n       offset :   30000 , \n       parameters :   [ \n         PHONE_VIBRATE , \n         PHONE_TONE , \n         PHONE_SCREEN , \n         PHONE_MESSAGE_START_DAY \n       ] \n     } \n   ]  }",
            "title": "Day Start"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#day-end",
            "text": "TODO: ???  { \n   by :   user , \n   base :   day_start , \n   notify :   [ \n     { \n       type :   button , \n       offset :   30000 \n     } \n   ]  }",
            "title": "Day End"
        },
        {
            "location": "/mCerebrum/configuration-mCerebrum/#complete-example",
            "text": "{ \n   config_info :   { \n     id :   STU00201566-Test , \n     name :   MD2K Smoking Study (at NW)-Test , \n     version_code :   21 , \n     required_files :   [ \n       org.md2k.autosense/default_config.json , \n       org.md2k.datakit/config.json , \n       org.md2k.datakit/default_config.json , \n       org.md2k.ema/config_ema.json , \n       org.md2k.ema/end_of_day_recording.json , \n       org.md2k.ema/event_contingent_recording.json , \n       org.md2k.ema/random_experience_sampling.json , \n       org.md2k.ema_scheduler/config.json , \n       org.md2k.ema_scheduler/notification.json , \n       org.md2k.ema_scheduler/condition.json , \n       org.md2k.microsoftband/default_config.json , \n       org.md2k.phonesensor/default_config.json , \n       org.md2k.plotter/default_config.json , \n       org.md2k.streamprocessor/model.json , \n       org.md2k.streamprocessor/model_rip.json , \n       org.md2k.notificationmanager/tone.mp3 , \n       org.md2k.study/config.json , \n       org.md2k.study/notification.json , \n       org.md2k.study/tutorial.pdf \n     ] \n   }, \n   study_info :   { \n     id :   STU00201566-Test , \n     name :   MD2K Smoking Study (at NW)-Test \n   }, \n   apps :   [ \n     { \n       id :   study , \n       name :   Study , \n       enable :   true , \n       package_name :   org.md2k.study , \n       download_link :   https://github.com/MD2Korg/mCerebrum-Study/releases \n     }, \n     { \n       id :   datakit , \n       name :   DataKit , \n       enable :   true , \n       package_name :   org.md2k.datakit , \n       config :   config.json , \n       default_config :   default_config.json , \n       service :   org.md2k.datakit.cerebralcortex.ServiceCerebralCortex , \n       download_link :   https://github.com/MD2Korg/mCerebrum-DataKit/releases \n     }, \n     { \n       id :   phonesensor , \n       name :   PhoneSensor , \n       enable :   true , \n       package_name :   org.md2k.phonesensor , \n       service :   org.md2k.phonesensor.ServicePhoneSensor , \n       settings :   org.md2k.phonesensor.ActivityPhoneSensorSettings , \n       config :   config.json , \n       default_config :   default_config.json , \n       download_link :   https://github.com/MD2Korg/mCerebrum-PhoneSensor/releases \n     }, \n     { \n       id :   autosense , \n       name :   AutoSense , \n       enable :   true , \n       package_name :   org.md2k.autosense , \n       service :   org.md2k.autosense.antradio.connection.ServiceAutoSenses , \n       settings :   org.md2k.autosense.ActivityAutoSenseSettings , \n       config :   config.json , \n       default_config :   default_config.json , \n       download_link :   https://github.com/MD2Korg/mCerebrum-AutoSense/releases \n     }, \n     { \n       id :   microsofthealth , \n       name :   MicrosoftHealth , \n       enable :   true , \n       package_name :   com.microsoft.kapp , \n       download_link :   market://details?id=com.microsoft.kapp \n     }, \n     { \n       id :   microsoftband , \n       name :   MicrosoftBand , \n       enable :   true , \n       package_name :   org.md2k.microsoftband , \n       service :   org.md2k.microsoftband.ServiceMicrosoftBands , \n       settings :   org.md2k.microsoftband.ActivityMicrosoftBandSettings , \n       config :   config.json , \n       default_config :   default_config.json , \n       download_link :   https://github.com/MD2Korg/mCerebrum-MicrosoftBand/releases \n     }, \n     { \n       id :   streamprocessor , \n       name :   StreamProcessor , \n       enable :   true , \n       package_name :   org.md2k.streamprocessor , \n       service :   org.md2k.streamprocessor.ServiceStreamProcessor , \n       download_link :   https://github.com/MD2Korg/mCerebrum-StreamProcessor/releases \n     }, \n     { \n       id :   ema_scheduler , \n       name :   EMAScheduler , \n       enable :   true , \n       package_name :   org.md2k.ema_scheduler , \n       service :   org.md2k.ema_scheduler.ServiceEMAScheduler , \n       config :   config.json , \n       download_link :   https://github.com/MD2Korg/mCerebrum-EMAScheduler/releases \n     }, \n     { \n       id :   notificationmanager , \n       name :   NotificationManager , \n       enable :   true , \n       package_name :   org.md2k.notificationmanager , \n       service :   org.md2k.notificationmanager.ServiceNotificationManager , \n       download_link :   https://github.com/MD2Korg/mCerebrum-NotificationManager/releases \n     }, \n     { \n       id :   ema , \n       name :   EMA , \n       enable :   true , \n       package_name :   org.md2k.ema , \n       download_link :   https://github.com/MD2Korg/mCerebrum-EMA/releases \n     }, \n     { \n       id :   moodsurfing , \n       name :   MoodSurfing , \n       enable :   true , \n       package_name :   org.md2k.moodsurfing , \n       download_link :   https://github.com/MD2Korg/mCerebrum-MoodSurfing/releases \n     }, \n     { \n       id :   thoughtshakeup , \n       name :   ThoughtShakeup , \n       enable :   true , \n       package_name :   org.md2k.thoughtshakeup , \n       download_link :   https://github.com/MD2Korg/mCerebrum-ThoughtShakeup/releases \n     }, \n     { \n       id :   headspace , \n       name :   HeadSpace , \n       enable :   true , \n       package_name :   com.getsomeheadspace.android , \n       download_link :   market://details?id=com.getsomeheadspace.android \n     }, \n     { \n       id :   plotter , \n       name :   Plotter , \n       enable :   true , \n       package_name :   org.md2k.plotter , \n       default_config :   default_config.json , \n       download_link :   https://github.com/MD2Korg/mCerebrum-Plotter/releases \n     }, \n     { \n       id :   adobe_acrobat_reader , \n       name :   Adobe Acrobat Reader , \n       enable :   true , \n       package_name :   com.adobe.reader , \n       download_link :   market://details?id=com.adobe.reader \n     } \n   ], \n   actions :   [ \n     { \n       id :   config_info , \n       type :   setup , \n       name :   Configuration Info , \n       enable :   true , \n       rank :   7 \n     }, \n     { \n       id :   clear_config , \n       type :   reset , \n       name :   Clear Configuration , \n       enable :   true , \n       rank :   7 , \n       icon :   ic_delete_blue_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.clear_config.ActivityClearConfig \n     }, \n     { \n       id :   config_download , \n       type :   reset , \n       name :   Download New Configuration , \n       enable :   true , \n       rank :   7 , \n       package_name :   org.md2k.study , \n       icon :   ic_download_teal_48dp , \n       class_name :   org.md2k.study.model_view.config_info.ActivityConfigDownload \n     }, \n     { \n       id :   app_install , \n       type :   setup , \n       name :   Applications , \n       enable :   true , \n       rank :   6 , \n       icon :   ic_install_teal_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.app_install.ActivityInstallApp \n     }, \n     { \n       id :   app_settings , \n       type :   setup , \n       name :   Settings , \n       enable :   true , \n       rank :   6 , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.app_settings.ActivityAppSettings , \n       icon :   ic_settings_teal_48dp \n     }, \n     { \n       id :   datakit_connect , \n       type :   setup , \n       name :   DataKit Connection , \n       enable :   true , \n       rank :   5 \n     }, \n     { \n       id :   study_info , \n       type :   setup , \n       enable :   true , \n       rank :   4 , \n       name :   Study \n     }, \n     { \n       id :   user_info , \n       type :   setup , \n       name :   User ID , \n       enable :   true , \n       rank :   4 , \n       icon :   ic_user_teal_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.user_info.ActivityUserInfo \n     }, \n     { \n       id :   wakeup_info , \n       type :   setup , \n       name :   Wakeup Time , \n       rank :   4 , \n       enable :   true , \n       icon :   ic_wakeup_teal_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.wakeup_info.ActivityWakeUp \n     }, \n     { \n       id :   sleep_info , \n       type :   setup , \n       name :   Sleep Time , \n       rank :   4 , \n       enable :   true , \n       icon :   ic_sleep_teal_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.sleep_info.ActivitySleep \n     }, \n     { \n       id :   day_type , \n       type :   setup , \n       name :   Pre/Post Quit Day , \n       rank :   4 , \n       enable :   true , \n       icon :   ic_sleep_teal_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.day_type.ActivityDayType \n     }, \n     { \n       id :   clear_database , \n       type :   reset , \n       name :   Clear All Data , \n       icon :   ic_delete_indigo_48dp , \n       enable :   true , \n       rank :   4 , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.clear_data.ActivityClearData \n     }, \n     { \n       id :   app_service , \n       type :   setup , \n       enable :   true , \n       name :   Running Apps , \n       rank :   3 , \n       icon :   ic_apps_teal_48dp , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.app_service.ActivityService \n     }, \n     { \n       id :   data_quality , \n       rank :   2 , \n       enable :   true , \n       name :   Sensor Data Quality \n     }, \n     { \n       id :   day_start_end , \n       type :   setup , \n       rank :   2 , \n       enable :   true , \n       name :   Day Start/Day End \n     }, \n     { \n       id :   privacy , \n       name :   Privacy , \n       icon :   ic_unlock_teal_48dp , \n       enable :   true , \n       package_name :   org.md2k.datakit , \n       rank :   2 , \n       class_name :   org.md2k.datakit.ActivityPrivacy \n     }, \n     { \n       id :   user_status , \n       name :   user_status , \n       icon :   ic_unlock_teal_48dp , \n       enable :   true , \n       rank :   2 \n     }, \n     { \n       id :   intervention , \n       name :   Intervention , \n       icon :   ic_intervention_48dp , \n       package_name :   org.md2k.study , \n       enable :   true , \n       rank :   2 , \n       class_name :   org.md2k.study.model_view.intervention.ActivityInterventionApp \n     }, \n     { \n       id :   smoking_self_report , \n       name :   Report Smoking , \n       icon :   ic_smoking_teal_48dp , \n       enable :   true , \n       package_name :   org.md2k.study , \n       rank :   2 , \n       class_name :   org.md2k.study.model_view.selfreport.ActivitySelfReport \n     }, \n     { \n       id :   plotter , \n       name :   Plotter , \n       enable :   true , \n       icon :   ic_plot_teal_48dp , \n       rank :   2 , \n       package_name :   org.md2k.plotter \n     }, \n     { \n       id :   user_app , \n       name :   User Application , \n       icon :   ic_unlock_teal_48dp , \n       enable :   true , \n       rank :   2 \n     }, \n     { \n       id :   EMA_test , \n       type :   App Controller , \n       name :   Survey/EMI Test , \n       enable :   true , \n       icon :   ic_notification_teal_48dp , \n       rank :   2 , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.EMA_test.ActivityEMA_test \n     }, \n     { \n       id :   app_reset , \n       name :   Reset App , \n       icon :   ic_refresh_teal_48dp , \n       enable :   true , \n       rank :   2 , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.app_reset.ActivityAppReset \n     }, \n     { \n       id :   app_start , \n       name :   Start Data Collection , \n       icon :   ic_play_teal_48dp , \n       enable :   true , \n       rank :   2 , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.app_start.ActivityAppStart \n     }, \n     { \n       id :   app_stop , \n       name :   Stop   Close Application , \n       icon :   ic_error_red_50dp , \n       enable :   true , \n       rank :   2 , \n       package_name :   org.md2k.study , \n       class_name :   org.md2k.study.model_view.app_stop.ActivityAppStop \n     } \n   ], \n   admin_view :   { \n     password :   1234 , \n     view_contents :   [ \n       { \n         id :   key_configure_app , \n         name :   Configure Applications , \n         enable :   true , \n         values :   [ \n           config_info , \n           app_install , \n           app_settings , \n           config_download , \n           clear_config \n         ] \n       }, \n       { \n         id :   key_configure_study , \n         name :   Configure Study , \n         enable :   true , \n         values :   [ \n           config_info , \n           study_info , \n           user_info , \n           day_type , \n           wakeup_info , \n           sleep_info , \n           clear_database \n         ] \n       }, \n       { \n         id :   key_start_study , \n         name :   Start Study , \n         enable :   true \n       }, \n       { \n         id :   key_stop_study , \n         name :   Stop Study , \n         enable :   true \n       }, \n       { \n         id :   key_other , \n         name :   Others , \n         enable :   true , \n         values :   [ \n           app_service , \n           EMA_test \n         ] \n       } \n     ] \n   }, \n   user_view :   { \n     view_contents :   [ \n       { \n         id :   data_quality , \n         enable :   true \n       }, \n       { \n         id :   day_start_end , \n         enable :   true \n       }, \n       { \n         id :   privacy , \n         enable :   true \n       }, \n       { \n         id :   user_app , \n         enable :   true , \n         values :   [ \n           smoking_self_report , \n           intervention , \n           app_reset \n         ] \n       } \n     ] \n   }, \n   data_quality :   [ \n     { \n       platform :   { \n         type :   AUTOSENSE_CHEST \n       }, \n       type :   DATA_QUALITY , \n       id :   RESPIRATION \n     }, \n     { \n       platform :   { \n         type :   AUTOSENSE_CHEST \n       }, \n       type :   DATA_QUALITY , \n       id :   ECG \n     }, \n     { \n       platform :   { \n         id :   LEFT_WRIST \n       }, \n       type :   DATA_QUALITY \n     }, \n     { \n       platform :   { \n         id :   RIGHT_WRIST \n       }, \n       type :   DATA_QUALITY \n     } \n   ], \n   data_quality_view :   [ \n     { \n       name :   Breathing , \n       plotter :   { \n         enable :   true , \n         datasource :   { \n           platform :   { \n             type :   AUTOSENSE_CHEST \n           }, \n           type :   RESPIRATION \n         } \n       }, \n       video :   { \n         enable :   true , \n         link :   2bxc8kONPSs \n       }, \n       message :   { \n         enable :   true , \n         text :   1) Tighten the chest band so it fits snugly under the armpits.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON. \n       } \n     }, \n     { \n       name :   Heart Rate , \n       plotter :   { \n         enable :   true , \n         datasource :   { \n           platform :   { \n             type :   AUTOSENSE_CHEST \n           }, \n           type :   ECG \n         } \n       }, \n       video :   { \n         enable :   true , \n         link :   toiopB7ltc8 \n       }, \n       message :   { \n         enable :   true , \n         text :   1) Adjust the position of the electrodes on the body.\\n\\n2) Make sure all cable connections are secure.\\n\\n3) Reset the application, wait 15 seconds and check again.\\n\\n4) Restart the phone, wait one minute and check again.\\n\\n5) Make sure the chest sensor is charged and powered ON. \n       } \n     }, \n     { \n       name :   Left Wrist(A) , \n       plotter :   { \n         enable :   true , \n         datasource :   { \n           platform :   { \n             type :   AUTOSENSE_WRIST , \n             id :   LEFT_WRIST \n           }, \n           type :   ACCELEROMETER_X \n         } \n       }, \n       video :   { \n         enable :   true , \n         link :   MbHUvM6C1GE \n       }, \n       message :   { \n         enable :   true , \n         text :   1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged. \n       } \n     }, \n     { \n       name :   Right Wrist(A) , \n       plotter :   { \n         enable :   true , \n         datasource :   { \n           platform :   { \n             type :   AUTOSENSE_WRIST , \n             id :   RIGHT_WRIST \n           }, \n           type :   ACCELEROMETER_X \n         } \n       }, \n       video :   { \n         enable :   true , \n         link :   MbHUvM6C1GE \n       }, \n       message :   { \n         enable :   true , \n         text :   1) Reset the application, wait 15 seconds and check again.\\n\\n2) Restart the phone, wait one minute and check again.\\n\\n3) Make sure the wrist sensor power switch is ON.\\n\\n4) Make sure the wrist sensor is charged. \n       } \n     }, \n     { \n       name :   Left Wrist(M) , \n       plotter :   { \n         enable :   true , \n         datasource :   { \n           platform :   { \n             type :   MICROSOFT_BAND , \n             id :   LEFT_WRIST \n           }, \n           type :   ACCELEROMETER \n         } \n       }, \n       video :   { \n         enable :   true , \n         link :   QYQJISCLCdg \n       }, \n       message :   { \n         enable :   true , \n         text :   1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON. \n       } \n     }, \n     { \n       name :   Right Wrist(M) , \n       plotter :   { \n         enable :   true , \n         datasource :   { \n           platform :   { \n             type :   MICROSOFT_BAND , \n             id :   RIGHT_WRIST \n           }, \n           type :   ACCELEROMETER \n         } \n       }, \n       video :   { \n         enable :   true , \n         link :   QYQJISCLCdg \n       }, \n       message :   { \n         enable :   true , \n         text :   1) Make sure the clasp on the Band is securely locked around the wrist.\\n\\n2) Reset the application, wait 15 seconds and check again.\\n\\n3) Restart the phone, wait one minute and check again.\\n\\n4) Make sure the Band is charged and powered ON. \n       } \n     } \n   ], \n   day_start :   { \n     by :   user , \n     base :   wakeup , \n     notify :   [ \n       { \n         type :   button , \n         offset :   -30000 \n       }, \n       { \n         type :   prompt , \n         offset :   0 , \n         parameters :   [ \n           PHONE_SCREEN , \n           PHONE_MESSAGE_START_DAY \n         ] \n       }, \n       { \n         type :   notification , \n         offset :   30000 , \n         parameters :   [ \n           PHONE_VIBRATE , \n           PHONE_TONE , \n           PHONE_SCREEN , \n           PHONE_MESSAGE_START_DAY \n         ] \n       } \n     ] \n   }, \n   day_end :   { \n     by :   user , \n     base :   day_start , \n     notify :   [ \n       { \n         type :   button , \n         offset :   30000 \n       } \n     ] \n   }  }",
            "title": "Complete Example"
        },
        {
            "location": "/mCerebrum/configuration-datakit/",
            "text": "DataKit\n\n\nConfig file name and location: \nmCerebrum/org.md2k.datakit/default_config.json\n\n\nDatabase\n\n\nThe database section designates:\n\n\n\n\nenabled\n: true or false to designate whether to store data to memory\n\n\nlocation\n: Store the sqlite database on the phone's\n\n\nINTERNAL_SDCARD\n: internal memory, no exceptions\n\n\nEXTERNAL_SDCARD\n: external memory, no exceptions\n\n\nEXTERNAL_SDCARD_PREFERRED\n: external memory is preferred if available, but internal memory will be utilized as a fallback option\n\n\n\n\n\n\n\n\nExample\n\n\ndatabase\n:\n \n{\n\n  \nenabled\n:\n \ntrue\n,\n\n  \nlocation\n:\n \nINTERNAL_SDCARD\n\n\n}\n\n\n\n\n\n\nArchive\n\n\nThis section configures the archive options for DataKit:\n\n\n\n\nenabled\n: true or false to designate whether to archive records to flash storage\n\n\nlocation\n: Store the archive files on:\n\n\nINTERNAL_SDCARD\n: internal memory, no exceptions\n\n\nEXTERNAL_SDCARD\n: external memory, no exceptions\n\n\nEXTERNAL_SDCARD_PREFERRED\n: external memory is preferred if available, but internal memory will be utilized as a fallback option\n\n\n\n\n\n\ninterval\n: Delay in milliseconds from when a datapoint is logged in the system and when it is eligible for archiving\n\n\n\n\nExample\n\n\narchive\n:\n \n{\n\n  \nenabled\n:\n \ntrue\n,\n\n  \nlocation\n:\n \nEXTERNAL_SDCARD_PREFERRED\n,\n\n  \ninterval\n:\n \n86400000\n\n\n}\n\n\n\n\n\n\nUpload\n\n\nThis section configures the upload to Cerebral Cortex options for DataKit:\n\n\n\n\nenabled\n: true or false to designate whether to upload data to mCerebrum's cloud component, Cerebral Cortex\n\n\ninterval\n: Delay in milliseconds between upload iterations\n\n\nurl\n: Cerebral Cortex API URL: e.g. \nhttps://cerebralcortex.SITE.ORG/\n\n\nrestricted_datasource\n: List of \ndatastreams\n eligible for upload restrictions\n\n\n\n\nExample\n\n\nupload\n:\n \n{\n\n  \nenabled\n:\n \ntrue\n,\n\n  \ninterval\n:\n \n900000\n,\n\n  \nurl\n:\n \nhttps://cerebralcortex.SITE.ORG/\n,\n\n  \nrestricted_datasource\n:\n \n[\n\n    \n{\n\n      \nplatform\n:\n \n{\n\n        \ntype\n:\n \nPHONE\n\n      \n},\n\n      \ntype\n:\n \nLOCATION\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nPrivacy\n\n\nThis section configures the privacy controller for DataKit:\n\n\n\n\nduration_options\n: a list of options where each contains the following:\n\n\nid\n: TODO: What does this mean?\n\n\ntitle\n: Text to be shown in the user interface\n\n\nvalue\n: Time in milliseconds\n\n\n\n\n\n\nprivacy_type_options\n: A list of \nprivacy types\n\n\n\n\nExample\n\n\nprivacy\n:\n \n{\n\n  \nduration_options\n:\n \n[\n\n    \n{\n\n      \nid\n:\n \n300000\n,\n\n      \ntitle\n:\n \n5 Minutes\n,\n\n      \nvalue\n:\n \n300000\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \n600000\n,\n\n      \ntitle\n:\n \n10 Minutes\n,\n\n      \nvalue\n:\n \n600000\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \n900000\n,\n\n      \ntitle\n:\n \n15 Minutes\n,\n\n      \nvalue\n:\n \n900000\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \n1800000\n,\n\n      \ntitle\n:\n \n30 Minutes\n,\n\n      \nvalue\n:\n \n1800000\n\n    \n}\n\n  \n],\n\n  \nprivacy_type_options\n:\n \n[\n\n    \n{\n\n      \nid\n:\n \nlocation\n,\n\n      \ntitle\n:\n \nLocation\n,\n\n      \nsummary\n:\n \n,\n\n      \nsource\n:\n \n[\n\n        \n{\n\n          \ndatasource_type\n:\n \nLOCATION\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nactivity\n,\n\n      \ntitle\n:\n \nActivity\n,\n\n      \nsummary\n:\n \n,\n\n      \nsource\n:\n \n[\n\n        \n{\n\n          \ndatasource_type\n:\n \nLOCATION\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nACCELEROMETER\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nGYROSCOPE\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nACCELEROMETER_X\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nACCELEROMETER_Y\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nACCELEROMETER_Z\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nGYROSCOPE_X\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nGYROSCOPE_Y\n\n        \n},\n\n        \n{\n\n          \ndatasource_type\n:\n \nGYROSCOPE_Z\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nchest_sensor\n,\n\n      \ntitle\n:\n \nChest Sensor\n,\n\n      \nsummary\n:\n \n,\n\n      \nsource\n:\n \n[\n\n        \n{\n\n          \nplatform_type\n:\n \nAUTOSENSE_CHEST\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nwrist_sensor\n,\n\n      \ntitle\n:\n \nWrist Sensors\n,\n\n      \nsummary\n:\n \n,\n\n      \nsource\n:\n \n[\n\n        \n{\n\n          \nplatform_type\n:\n \nAUTOSENSE_WRIST\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \nid\n:\n \nema_intervention\n,\n\n      \ntitle\n:\n \nSurveys\n,\n\n      \nsummary\n:\n \n,\n\n      \nsource\n:\n \n[\n\n        \n{\n\n          \ndatasource_type\n:\n \nSURVEY\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n\n\n\nComplete Example\n\n\n{\n\n  \ndatabase\n:\n \n{\n\n    \nenabled\n:\n \ntrue\n,\n\n    \nlocation\n:\n \nINTERNAL_SDCARD\n\n  \n},\n\n  \narchive\n:\n \n{\n\n    \nenabled\n:\n \ntrue\n,\n\n    \nlocation\n:\n \nEXTERNAL_SDCARD_PREFERRED\n,\n\n    \ninterval\n:\n \n86400000\n\n  \n},\n\n  \nupload\n:\n \n{\n\n    \nenabled\n:\n \ntrue\n,\n\n    \ninterval\n:\n \n900000\n,\n\n    \nurl\n:\n \nhttps://site-cerebralcortex.site.org/\n,\n\n    \nrestricted_datasource\n:\n \n[\n\n      \n{\n\n        \nplatform\n:\n \n{\n\n          \ntype\n:\n \nPHONE\n\n        \n},\n\n        \ntype\n:\n \nLOCATION\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \nprivacy\n:\n \n{\n\n    \nduration_options\n:\n \n[\n\n      \n{\n\n        \nid\n:\n \n300000\n,\n\n        \ntitle\n:\n \n5 Minutes\n,\n\n        \nvalue\n:\n \n300000\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \n600000\n,\n\n        \ntitle\n:\n \n10 Minutes\n,\n\n        \nvalue\n:\n \n600000\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \n900000\n,\n\n        \ntitle\n:\n \n15 Minutes\n,\n\n        \nvalue\n:\n \n900000\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \n1800000\n,\n\n        \ntitle\n:\n \n30 Minutes\n,\n\n        \nvalue\n:\n \n1800000\n\n      \n}\n\n    \n],\n\n    \nprivacy_type_options\n:\n \n[\n\n      \n{\n\n        \nid\n:\n \nlocation\n,\n\n        \ntitle\n:\n \nLocation\n,\n\n        \nsummary\n:\n \n,\n\n        \nsource\n:\n \n[\n\n          \n{\n\n            \ndatasource_type\n:\n \nLOCATION\n\n          \n}\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nactivity\n,\n\n        \ntitle\n:\n \nActivity\n,\n\n        \nsummary\n:\n \n,\n\n        \nsource\n:\n \n[\n\n          \n{\n\n            \ndatasource_type\n:\n \nLOCATION\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nACCELEROMETER\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nGYROSCOPE\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nACCELEROMETER_X\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nACCELEROMETER_Y\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nACCELEROMETER_Z\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nGYROSCOPE_X\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nGYROSCOPE_Y\n\n          \n},\n\n          \n{\n\n            \ndatasource_type\n:\n \nGYROSCOPE_Z\n\n          \n}\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nchest_sensor\n,\n\n        \ntitle\n:\n \nChest Sensor\n,\n\n        \nsummary\n:\n \n,\n\n        \nsource\n:\n \n[\n\n          \n{\n\n            \nplatform_type\n:\n \nAUTOSENSE_CHEST\n\n          \n}\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nwrist_sensor\n,\n\n        \ntitle\n:\n \nWrist Sensors\n,\n\n        \nsummary\n:\n \n,\n\n        \nsource\n:\n \n[\n\n          \n{\n\n            \nplatform_type\n:\n \nAUTOSENSE_WRIST\n\n          \n}\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nid\n:\n \nema_intervention\n,\n\n        \ntitle\n:\n \nSurveys\n,\n\n        \nsummary\n:\n \n,\n\n        \nsource\n:\n \n[\n\n          \n{\n\n            \ndatasource_type\n:\n \nSURVEY\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n}\n\n\n}",
            "title": "Configuration-DataKit"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#datakit",
            "text": "Config file name and location:  mCerebrum/org.md2k.datakit/default_config.json",
            "title": "DataKit"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#database",
            "text": "The database section designates:   enabled : true or false to designate whether to store data to memory  location : Store the sqlite database on the phone's  INTERNAL_SDCARD : internal memory, no exceptions  EXTERNAL_SDCARD : external memory, no exceptions  EXTERNAL_SDCARD_PREFERRED : external memory is preferred if available, but internal memory will be utilized as a fallback option",
            "title": "Database"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#example",
            "text": "database :   { \n   enabled :   true , \n   location :   INTERNAL_SDCARD  }",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#archive",
            "text": "This section configures the archive options for DataKit:   enabled : true or false to designate whether to archive records to flash storage  location : Store the archive files on:  INTERNAL_SDCARD : internal memory, no exceptions  EXTERNAL_SDCARD : external memory, no exceptions  EXTERNAL_SDCARD_PREFERRED : external memory is preferred if available, but internal memory will be utilized as a fallback option    interval : Delay in milliseconds from when a datapoint is logged in the system and when it is eligible for archiving",
            "title": "Archive"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#example_1",
            "text": "archive :   { \n   enabled :   true , \n   location :   EXTERNAL_SDCARD_PREFERRED , \n   interval :   86400000  }",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#upload",
            "text": "This section configures the upload to Cerebral Cortex options for DataKit:   enabled : true or false to designate whether to upload data to mCerebrum's cloud component, Cerebral Cortex  interval : Delay in milliseconds between upload iterations  url : Cerebral Cortex API URL: e.g.  https://cerebralcortex.SITE.ORG/  restricted_datasource : List of  datastreams  eligible for upload restrictions",
            "title": "Upload"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#example_2",
            "text": "upload :   { \n   enabled :   true , \n   interval :   900000 , \n   url :   https://cerebralcortex.SITE.ORG/ , \n   restricted_datasource :   [ \n     { \n       platform :   { \n         type :   PHONE \n       }, \n       type :   LOCATION \n     } \n   ]  }",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#privacy",
            "text": "This section configures the privacy controller for DataKit:   duration_options : a list of options where each contains the following:  id : TODO: What does this mean?  title : Text to be shown in the user interface  value : Time in milliseconds    privacy_type_options : A list of  privacy types",
            "title": "Privacy"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#example_3",
            "text": "privacy :   { \n   duration_options :   [ \n     { \n       id :   300000 , \n       title :   5 Minutes , \n       value :   300000 \n     }, \n     { \n       id :   600000 , \n       title :   10 Minutes , \n       value :   600000 \n     }, \n     { \n       id :   900000 , \n       title :   15 Minutes , \n       value :   900000 \n     }, \n     { \n       id :   1800000 , \n       title :   30 Minutes , \n       value :   1800000 \n     } \n   ], \n   privacy_type_options :   [ \n     { \n       id :   location , \n       title :   Location , \n       summary :   , \n       source :   [ \n         { \n           datasource_type :   LOCATION \n         } \n       ] \n     }, \n     { \n       id :   activity , \n       title :   Activity , \n       summary :   , \n       source :   [ \n         { \n           datasource_type :   LOCATION \n         }, \n         { \n           datasource_type :   ACCELEROMETER \n         }, \n         { \n           datasource_type :   GYROSCOPE \n         }, \n         { \n           datasource_type :   ACCELEROMETER_X \n         }, \n         { \n           datasource_type :   ACCELEROMETER_Y \n         }, \n         { \n           datasource_type :   ACCELEROMETER_Z \n         }, \n         { \n           datasource_type :   GYROSCOPE_X \n         }, \n         { \n           datasource_type :   GYROSCOPE_Y \n         }, \n         { \n           datasource_type :   GYROSCOPE_Z \n         } \n       ] \n     }, \n     { \n       id :   chest_sensor , \n       title :   Chest Sensor , \n       summary :   , \n       source :   [ \n         { \n           platform_type :   AUTOSENSE_CHEST \n         } \n       ] \n     }, \n     { \n       id :   wrist_sensor , \n       title :   Wrist Sensors , \n       summary :   , \n       source :   [ \n         { \n           platform_type :   AUTOSENSE_WRIST \n         } \n       ] \n     }, \n     { \n       id :   ema_intervention , \n       title :   Surveys , \n       summary :   , \n       source :   [ \n         { \n           datasource_type :   SURVEY \n         } \n       ] \n     } \n   ]  }",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-datakit/#complete-example",
            "text": "{ \n   database :   { \n     enabled :   true , \n     location :   INTERNAL_SDCARD \n   }, \n   archive :   { \n     enabled :   true , \n     location :   EXTERNAL_SDCARD_PREFERRED , \n     interval :   86400000 \n   }, \n   upload :   { \n     enabled :   true , \n     interval :   900000 , \n     url :   https://site-cerebralcortex.site.org/ , \n     restricted_datasource :   [ \n       { \n         platform :   { \n           type :   PHONE \n         }, \n         type :   LOCATION \n       } \n     ] \n   }, \n   privacy :   { \n     duration_options :   [ \n       { \n         id :   300000 , \n         title :   5 Minutes , \n         value :   300000 \n       }, \n       { \n         id :   600000 , \n         title :   10 Minutes , \n         value :   600000 \n       }, \n       { \n         id :   900000 , \n         title :   15 Minutes , \n         value :   900000 \n       }, \n       { \n         id :   1800000 , \n         title :   30 Minutes , \n         value :   1800000 \n       } \n     ], \n     privacy_type_options :   [ \n       { \n         id :   location , \n         title :   Location , \n         summary :   , \n         source :   [ \n           { \n             datasource_type :   LOCATION \n           } \n         ] \n       }, \n       { \n         id :   activity , \n         title :   Activity , \n         summary :   , \n         source :   [ \n           { \n             datasource_type :   LOCATION \n           }, \n           { \n             datasource_type :   ACCELEROMETER \n           }, \n           { \n             datasource_type :   GYROSCOPE \n           }, \n           { \n             datasource_type :   ACCELEROMETER_X \n           }, \n           { \n             datasource_type :   ACCELEROMETER_Y \n           }, \n           { \n             datasource_type :   ACCELEROMETER_Z \n           }, \n           { \n             datasource_type :   GYROSCOPE_X \n           }, \n           { \n             datasource_type :   GYROSCOPE_Y \n           }, \n           { \n             datasource_type :   GYROSCOPE_Z \n           } \n         ] \n       }, \n       { \n         id :   chest_sensor , \n         title :   Chest Sensor , \n         summary :   , \n         source :   [ \n           { \n             platform_type :   AUTOSENSE_CHEST \n           } \n         ] \n       }, \n       { \n         id :   wrist_sensor , \n         title :   Wrist Sensors , \n         summary :   , \n         source :   [ \n           { \n             platform_type :   AUTOSENSE_WRIST \n           } \n         ] \n       }, \n       { \n         id :   ema_intervention , \n         title :   Surveys , \n         summary :   , \n         source :   [ \n           { \n             datasource_type :   SURVEY \n           } \n         ] \n       } \n     ] \n   }  }",
            "title": "Complete Example"
        },
        {
            "location": "/mCerebrum/configuration-sensors/",
            "text": "Sensor Interface configurations\n\n\nPhone Sensor\n\n\nConfig file name and location: \nmCerebrum/org.md2k.phonesensor/default_config.json\n\n\nThe phone sensor configuration is a list of \ndata sources\n with a \nFREQUENCY\n specific to the sensor specified. The absence of a configuration file will allow the system to allow the configuration of all possible data sources.\n\n\nFrequency can be one of the following:\n\n\n\n\nSample rate in hertz: e.g. \"1.0 Hz\"\n\n\nSENSOR_DELAY_NORMAL\n\n\nSENSOR_DELAY_UI\n\n\nSENSOR_DELAY_GAME\n\n\nSENSOR_DELAY_FASTEST\n\n\nON_CHANGE for \nPROXIMITY\n only\n\n\n\n\nComplete Example\n\n\n[\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n1.0 Hz\n\n    \n},\n\n    \ntype\n:\n \nBATTERY\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \nSENSOR_DELAY_UI\n\n    \n},\n\n    \ntype\n:\n \nLOCATION\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \nSENSOR_DELAY_UI\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \nSENSOR_DELAY_UI\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \nSENSOR_DELAY_UI\n\n    \n},\n\n    \ntype\n:\n \nCOMPASS\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \nSENSOR_DELAY_UI\n\n    \n},\n\n    \ntype\n:\n \nAMBIENT_LIGHT\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n6.0 Hz\n\n    \n},\n\n    \ntype\n:\n \nPRESSURE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n1.0 Hz\n\n    \n},\n\n    \ntype\n:\n \nAMBIENT_TEMPERATURE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \nON_CHANGE\n\n    \n},\n\n    \ntype\n:\n \nPROXIMITY\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n1.0 Hz\n\n    \n},\n\n    \ntype\n:\n \nCPU\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n1.0 Hz\n\n    \n},\n\n    \ntype\n:\n \nMEMORY\n\n  \n}\n\n\n]\n\n\n\n\n\n\nAutosense\n\n\nConfig file name and location: \nmCerebrum/org.md2k.autosense/default_config.json\n\n\nAutoSense \ndata sources\n are associated with hardware sensors and are expected to be explicitly listed to enable.  The following example illustrates all possible sensors and data streams.  Remove entries to disable the UI for specific sensors. The absence of a configuration file will allow the system to allow the configuration of all possible data sources.\n\n\nComplete Example\n\n\n[\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nRESPIRATION\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nECG\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_X\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_Y\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_Z\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nGALVANIC_SKIN_RESPONSE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nBATTERY\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nSKIN_TEMPERATURE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nAMBIENT_TEMPERATURE\n\n  \n},\n\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_X\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_Y\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_Z\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE_X\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE_Y\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE_Z\n\n  \n}\n\n\n]\n\n\n\n\n\n\nMicrosoft Band\n\n\nConfig file name and location: \nmCerebrum/org.md2k.microsoftband/default_config.json\n\n\nMicrosoft Band \ndata sources\n are associated with hardware and software sensors and are expected to be explicitly listed to enable.  The following example illustrates all possible sensors and data streams.  Remove entries to disable the UI for specific sensors.  The absence of a configuration file will allow the system to allow the configuration of all possible data sources.\n\n\nACCELEROMETER\n and \nGYROSCOPE\n sensors must have their frequency configured to one of the following:\n\n\n\n\n8Hz\n\n\n31Hz\n\n\n62Hz\n\n\n\n\nComplete Example\n\n\n[\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nDATA_QUALITY\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n31 Hz\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n31 Hz\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \nmetadata\n:\n \n{\n\n      \nFREQUENCY\n:\n \n???\n\n    \n},\n\n    \ntype\n:\n \nAIR_PRESSSURE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nAMBIENT_LIGHT\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nAMBIENT_TEMPERATURE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nBAND_CONTACT\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nCALORY_BURN\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nDISTANCE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nGALVANIC_SKIN_RESPONSE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nHEART_RATE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nMOTION_TYPE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nPACE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nRR_INTERVAL\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nSKIN_TEMPERATURE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nSPEED\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nSTEP_COUNT\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nULTRA_VIOLET_RADIATION\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nALTIMETER\n\n  \n}\n\n\n]",
            "title": "Configuration-Sensors"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#sensor-interface-configurations",
            "text": "",
            "title": "Sensor Interface configurations"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#phone-sensor",
            "text": "Config file name and location:  mCerebrum/org.md2k.phonesensor/default_config.json  The phone sensor configuration is a list of  data sources  with a  FREQUENCY  specific to the sensor specified. The absence of a configuration file will allow the system to allow the configuration of all possible data sources.  Frequency can be one of the following:   Sample rate in hertz: e.g. \"1.0 Hz\"  SENSOR_DELAY_NORMAL  SENSOR_DELAY_UI  SENSOR_DELAY_GAME  SENSOR_DELAY_FASTEST  ON_CHANGE for  PROXIMITY  only",
            "title": "Phone Sensor"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#complete-example",
            "text": "[ \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   1.0 Hz \n     }, \n     type :   BATTERY \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   SENSOR_DELAY_UI \n     }, \n     type :   LOCATION \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   SENSOR_DELAY_UI \n     }, \n     type :   ACCELEROMETER \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   SENSOR_DELAY_UI \n     }, \n     type :   GYROSCOPE \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   SENSOR_DELAY_UI \n     }, \n     type :   COMPASS \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   SENSOR_DELAY_UI \n     }, \n     type :   AMBIENT_LIGHT \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   6.0 Hz \n     }, \n     type :   PRESSURE \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   1.0 Hz \n     }, \n     type :   AMBIENT_TEMPERATURE \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   ON_CHANGE \n     }, \n     type :   PROXIMITY \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   1.0 Hz \n     }, \n     type :   CPU \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     metadata :   { \n       FREQUENCY :   1.0 Hz \n     }, \n     type :   MEMORY \n   }  ]",
            "title": "Complete Example"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#autosense",
            "text": "Config file name and location:  mCerebrum/org.md2k.autosense/default_config.json  AutoSense  data sources  are associated with hardware sensors and are expected to be explicitly listed to enable.  The following example illustrates all possible sensors and data streams.  Remove entries to disable the UI for specific sensors. The absence of a configuration file will allow the system to allow the configuration of all possible data sources.",
            "title": "Autosense"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#complete-example_1",
            "text": "[ \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   RESPIRATION \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   ECG \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   ACCELEROMETER_X \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   ACCELEROMETER_Y \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   ACCELEROMETER_Z \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   GALVANIC_SKIN_RESPONSE \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   BATTERY \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   SKIN_TEMPERATURE \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   AMBIENT_TEMPERATURE \n   }, \n\n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   ACCELEROMETER_X \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   ACCELEROMETER_Y \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   ACCELEROMETER_Z \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   GYROSCOPE_X \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   GYROSCOPE_Y \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   GYROSCOPE_Z \n   }  ]",
            "title": "Complete Example"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#microsoft-band",
            "text": "Config file name and location:  mCerebrum/org.md2k.microsoftband/default_config.json  Microsoft Band  data sources  are associated with hardware and software sensors and are expected to be explicitly listed to enable.  The following example illustrates all possible sensors and data streams.  Remove entries to disable the UI for specific sensors.  The absence of a configuration file will allow the system to allow the configuration of all possible data sources.  ACCELEROMETER  and  GYROSCOPE  sensors must have their frequency configured to one of the following:   8Hz  31Hz  62Hz",
            "title": "Microsoft Band"
        },
        {
            "location": "/mCerebrum/configuration-sensors/#complete-example_2",
            "text": "[ \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   DATA_QUALITY \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     metadata :   { \n       FREQUENCY :   31 Hz \n     }, \n     type :   ACCELEROMETER \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     metadata :   { \n       FREQUENCY :   31 Hz \n     }, \n     type :   GYROSCOPE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     metadata :   { \n       FREQUENCY :   ??? \n     }, \n     type :   AIR_PRESSSURE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   AMBIENT_LIGHT \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   AMBIENT_TEMPERATURE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   BAND_CONTACT \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   CALORY_BURN \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   DISTANCE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   GALVANIC_SKIN_RESPONSE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   HEART_RATE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   MOTION_TYPE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   PACE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   RR_INTERVAL \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   SKIN_TEMPERATURE \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   SPEED \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   STEP_COUNT \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   ULTRA_VIOLET_RADIATION \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   ALTIMETER \n   }  ]",
            "title": "Complete Example"
        },
        {
            "location": "/mCerebrum/configuration-plotter/",
            "text": "Plotter\n\n\nConfig file name and location: \nmCerebrum/org.md2k.plotter/default_config.json\n\n\nThis JSON array should contain the data sources that should be made available to the plotting tool.  The absence of this configuration file will show all \ndata sources\n in the user interface\n\n\nExample\n\n\nThis example allows for the displaying of specific sensor streams from the phone,\nAutoSense, and Microsoft band.\n\n[\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nPHONE\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nRESPIRATION\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nECG\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_CHEST\n,\n\n      \nid\n:\n \nCHEST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_X\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nAUTOSENSE_WRIST\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER_X\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nACCELEROMETER\n\n  \n},\n\n  \n{\n\n    \nplatform\n:\n \n{\n\n      \ntype\n:\n \nMICROSOFT_BAND\n\n    \n},\n\n    \ntype\n:\n \nGYROSCOPE\n\n  \n}\n\n\n]",
            "title": "Configuration-Plotter"
        },
        {
            "location": "/mCerebrum/configuration-plotter/#plotter",
            "text": "Config file name and location:  mCerebrum/org.md2k.plotter/default_config.json  This JSON array should contain the data sources that should be made available to the plotting tool.  The absence of this configuration file will show all  data sources  in the user interface",
            "title": "Plotter"
        },
        {
            "location": "/mCerebrum/configuration-plotter/#example",
            "text": "This example allows for the displaying of specific sensor streams from the phone,\nAutoSense, and Microsoft band. [ \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     type :   ACCELEROMETER \n   }, \n   { \n     platform :   { \n       type :   PHONE \n     }, \n     type :   GYROSCOPE \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   RESPIRATION \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   ECG \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_CHEST , \n       id :   CHEST \n     }, \n     type :   ACCELEROMETER_X \n   }, \n   { \n     platform :   { \n       type :   AUTOSENSE_WRIST \n     }, \n     type :   ACCELEROMETER_X \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   ACCELEROMETER \n   }, \n   { \n     platform :   { \n       type :   MICROSOFT_BAND \n     }, \n     type :   GYROSCOPE \n   }  ]",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-ema/",
            "text": "EMA\n\n\nConfig file name and location: \nmCerebrum/org.md2k.ema/config_ema.json\n\n\nThis JSON array contains a listing of all defined EMA configurations in the system.\nEach structure contains:\n\n\n\n\nid\n: unique EMA identifier\n\n\nname\n: string that is displayed to the user describing an EMA\n\n\nfile_name\n: file name of a json document located in this folder for a specific EMA\n\n\npackage_name\n: Application reference which handles the specified \nfile_name\n\n\ntimeout\n: Time in milliseconds after which an EMA is considered abandoned\n\n\n\n\nExample\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nrandom_experience_sampling\n,\n\n    \nname\n:\n \nRandom Experience Sampling\n,\n\n    \nfile_name\n:\n \nrandom_experience_sampling.json\n,\n\n    \npackage_name\n:\n \norg.md2k.ema\n,\n\n    \ntimeout\n:\n \n300000\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nevent_contingent_recording\n,\n\n    \nname\n:\n \nEvent Contingent Recording\n,\n\n    \npackage_name\n:\n \norg.md2k.ema\n,\n\n    \nfile_name\n:\n \nevent_contingent_recording.json\n,\n\n    \ntimeout\n:\n \n300000\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nend_of_day_recording\n,\n\n    \nname\n:\n \nEnd of Day Recording\n,\n\n    \npackage_name\n:\n \norg.md2k.ema\n,\n\n    \nfile_name\n:\n \nend_of_day_recording.json\n,\n\n    \ntimeout\n:\n \n300000\n\n  \n}\n\n\n]",
            "title": "Configuration-EMA"
        },
        {
            "location": "/mCerebrum/configuration-ema/#ema",
            "text": "Config file name and location:  mCerebrum/org.md2k.ema/config_ema.json  This JSON array contains a listing of all defined EMA configurations in the system.\nEach structure contains:   id : unique EMA identifier  name : string that is displayed to the user describing an EMA  file_name : file name of a json document located in this folder for a specific EMA  package_name : Application reference which handles the specified  file_name  timeout : Time in milliseconds after which an EMA is considered abandoned",
            "title": "EMA"
        },
        {
            "location": "/mCerebrum/configuration-ema/#example",
            "text": "[ \n   { \n     id :   random_experience_sampling , \n     name :   Random Experience Sampling , \n     file_name :   random_experience_sampling.json , \n     package_name :   org.md2k.ema , \n     timeout :   300000 \n   }, \n   { \n     id :   event_contingent_recording , \n     name :   Event Contingent Recording , \n     package_name :   org.md2k.ema , \n     file_name :   event_contingent_recording.json , \n     timeout :   300000 \n   }, \n   { \n     id :   end_of_day_recording , \n     name :   End of Day Recording , \n     package_name :   org.md2k.ema , \n     file_name :   end_of_day_recording.json , \n     timeout :   300000 \n   }  ]",
            "title": "Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/",
            "text": "EMA Scheduler\n\n\nConfig file name and location: \nmCerebrum/org.md2k.ema_scheduler/config.json\n\n\nEMA scheduler configuration structure:\n\n[\n\n  \nEMA_EMI_OBJECT_\n1\n,\n\n  \nEMA_EMI_OBJECT_\n2\n,\n\n  \n...\n\n\n]\n\n\n\n\n\n\nEMA/EMI Object\n\n\nThe EMA/EMI object defines what, when, and under which conditions an event will be sent to the participant.\n\n\n\n\nid\n: unique object identifier string\n\n\ntype\n: must be one of the following\n\n\nEMA\n for ecological momentary assessment\n\n\nEMI\n for ecological momentary intervention\n\n\n\n\n\n\ntrigger_type\n: Must be one of the following:\n\n\nRANDOM\n: A randomly generated assessment time subject to the criteria of the \nblock\n definition\n\n\nSELF_REPORT\n: Participant has generated a self-reported response\n\n\nEVENT\n: Generated by a processing sensor data and computing specific events such as high stress or a smoking puff\n\n\n\n\n\n\nname\n: Description that is provided to a participant through mCerebrum's interface\n\n\nenabled\n: \ntrue\n or \nfalse\n to enable or disable this object\n\n\napplication\n: Defines where the EMA/EMI is located and which application utilized to execute it\n\n\nid\n: unique EMA identifier\n\n\nname\n: string that is displayed to the user describing an EMA\n\n\nfile_name\n: file name of a JSON document located in this folder for a specific EMA\n\n\npackage_name\n: Application reference which handles the specified \nfile_name\n\n\ntimeout\n: Time in milliseconds after which an EMA is considered abandoned\n\n\n\n\n\n\nblocks\n: A list of \nblock\n object each designating:\n\n\nscheduler_rules\n: List of \nschedule\n objects each designating:\n\n\nnotifications\n: A list of \nnotification\n objects, each of which include:\n\n\nincentive_rules\n: A list of \nincentive\n objects to apply\n\n\n\n\nPartial Example\n\n\n{\n\n  \nid\n:\n \nRANDOM_EMA\n,\n\n  \ntype\n:\n \nEMA\n,\n\n  \ntrigger_type\n:\n \nRANDOM\n,\n\n  \nname\n:\n \nRandom Experience Sampling\n,\n\n  \nenable\n:\n \ntrue\n,\n\n  \napplication\n:\n \n{\n\n    \nid\n:\n \nrandom_experience_sampling\n,\n\n    \nname\n:\n \nRandom Experience Sampling\n,\n\n    \nfile_name\n:\n \nrandom_experience_sampling.json\n,\n\n    \npackage_name\n:\n \norg.md2k.ema\n,\n\n    \ntimeout\n:\n \n600000\n\n  \n},\n\n  \nblocks\n:\n \n[\nSEE_BELOW\n],\n\n  \nscheduler_rules\n:\n \n[\nSEE_BELOW\n],\n\n  \nnotifications\n:\n \n[\nSEE_BELOW\n],\n\n  \nincentive_rules\n:\n \n[\nSEE_BELOW\n]\n\n\n}\n\n\n\n\n\n\nBlock object\n\n\nA block object defines a time window within event can occur and provides a way to limit the total number of EMA/EMI events.  These are the fields that must be specified:\n\n\n\n\ntotal\n: Total number of times this object should be shown to a participant\n\n\nbase\n: A reference from which to start the offsets: \nbase\n\n\nstart_offset\n: Offset time in milliseconds from the value defined in \nbase\n\n\nend_offset\n: Offset time in milliseconds from the value defined in \nbase\n\n\n\n\nBlock Example\n\n\n{\n\n  \ntotal\n:\n \n1\n,\n\n  \nbase\n:\n \nDAY_START\n,\n\n  \nstart_offset\n:\n \n14400000\n,\n\n  \nend_offset\n:\n \n28800000\n\n\n}\n\n\n\n\n\n\nBlock List Example\n\n\nblocks\n:\n \n[\n\n  \n{\n\n    \ntotal\n:\n \n1\n,\n\n    \nbase\n:\n \nDAY_START\n,\n\n    \nstart_offset\n:\n \n0\n,\n\n    \nend_offset\n:\n \n14400000\n\n  \n},\n\n  \n{\n\n    \ntotal\n:\n \n1\n,\n\n    \nbase\n:\n \nDAY_START\n,\n\n    \nstart_offset\n:\n \n14400000\n,\n\n    \nend_offset\n:\n \n28800000\n\n  \n},\n\n  \n{\n\n    \ntotal\n:\n \n1\n,\n\n    \nbase\n:\n \nDAY_START\n,\n\n    \nstart_offset\n:\n \n28800000\n,\n\n    \nend_offset\n:\n \n43200000\n\n  \n}\n\n\n]\n\n\n\n\n\n\nScheduler object\n\n\nTODO: This section is incomplete.  Missing EMI-specific configurations.  Discuss with Monowar\n\n\nA scheduler object designates the rules for delivering the specified EMA/EMI to a participant and contains the following parameters:\n\n\n\n\ntype\n: Must choose one\n\n\nRANDOM\n: Randomly deliver the EMA/EMI within the current \nblock\n\n\nIMMEDIATE\n: Immediately deliver the EMA/EMI\n\n\n\n\n\n\nstart_time\n: Currently must be \nBLOCK_START\n but will be more flexible in a future release\n\n\nend_time\n: Currently must be \nBLOCK_END\n but will be more flexible in a future release\n\n\ndivide\n: Divisor in which to segment the remaining time for random EMA/EMI delivery\n\n\nconditions\n: A list from a a set of \nconditions\n, all which are required to be met for a notification to be delivered\n\n\n\n\nScheduler Example\n\n\nThis example configures a \nRANDOM\n ...\n\n{\n\n  \ntype\n:\n \nRANDOM\n,\n\n  \nstart_time\n:\n \nBLOCK_START\n,\n\n  \nend_time\n:\n \nBLOCK_END\n,\n\n  \ndivide\n:\n \n2\n,\n\n  \nconditions\n:\n \n[\n\n    \nPRIVACY\n,\n\n    \nVALID_BLOCK_RANDOM_EMA\n,\n\n    \nRANDOM_EMA_60\n,\n\n    \nSMOKING_EMA_10\n,\n\n    \nEMI_10\n,\n\n    \nDATA_QUALITY_5\n,\n\n    \nNOT_DRIVING_5\n,\n\n    \nPHONE_BATTERY_10\n\n  \n]\n\n\n}\n\n\n\n\n\n\nScheduler List Example\n\n\nscheduler_rules\n:\n \n[\n\n  \n{\n\n    \ntype\n:\n \nRANDOM\n,\n\n    \nstart_time\n:\n \nBLOCK_START\n,\n\n    \nend_time\n:\n \nBLOCK_END\n,\n\n    \ndivide\n:\n \n2\n,\n\n    \nconditions\n:\n \n[\n\n      \nPRIVACY\n,\n\n      \nVALID_BLOCK_RANDOM_EMA\n,\n\n      \nRANDOM_EMA_60\n,\n\n      \nSMOKING_EMA_10\n,\n\n      \nEMI_10\n,\n\n      \nDATA_QUALITY_5\n,\n\n      \nNOT_DRIVING_5\n,\n\n      \nPHONE_BATTERY_10\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \ntype\n:\n \nRANDOM\n,\n\n    \nstart_time\n:\n \nLAST_SCHEDULE\n,\n\n    \nend_time\n:\n \nBLOCK_END\n,\n\n    \ndivide\n:\n \n2\n,\n\n    \nconditions\n:\n \n[\n\n      \nPRIVACY\n,\n\n      \nVALID_BLOCK_RANDOM_EMA\n,\n\n      \nRANDOM_EMA_60\n,\n\n      \nSMOKING_EMA_10\n,\n\n      \nEMI_10\n,\n\n      \nDATA_QUALITY_5\n,\n\n      \nNOT_DRIVING_5\n,\n\n      \nPHONE_BATTERY_10\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \ntype\n:\n \nIMMEDIATE\n,\n\n    \nconditions\n:\n \n[\n\n      \nPRIVACY\n,\n\n      \nVALID_BLOCK_RANDOM_EMA\n,\n\n      \nRANDOM_EMA_60\n,\n\n      \nSMOKING_EMA_10\n,\n\n      \nEMI_10\n\n    \n]\n\n  \n}\n\n\n]\n\n\n\n\n\n\nNotification object\n\n\nThe notification objects define what types of alerts can be sent to the participant and their duration(s).\n\n\nThere are two fields that must be specified:\n\n\n\n\ntime\n: Milliseconds after the object generation time when to deliver the specified notification(s)\n\n\ntypes\n: A list of \nnotification types\n\n\n\n\nNotification Example\n\n\nIn this example, 2 minutes (120000 milliseconds) after the EMA/EMI was triggered, it sends the \nMICROSOFT_BAND_VIBRATE_3\n and \nPHONE_VIBRATE_3\n notifications to the Notification Manager for delivery to the participant.\n\n\n{\n\n  \ntime\n:\n \n120000\n,\n\n  \ntypes\n:\n \n[\n\n    \nMICROSOFT_BAND_VIBRATE_3\n,\n\n    \nPHONE_VIBRATE_3\n\n  \n]\n\n\n}\n\n\n\n\n\n\nNotification List Example\n\n\nnotifications\n:\n \n[\n\n  \n{\n\n    \ntime\n:\n \n0\n,\n\n    \ntypes\n:\n \n[\n\n      \nMICROSOFT_BAND_VIBRATE_3\n,\n\n      \nMICROSOFT_BAND_MESSAGE_EMA\n,\n\n      \nPHONE_VIBRATE_3\n,\n\n      \nPHONE_MESSAGE_DELAY_EMA\n,\n\n      \nPHONE_SCREEN\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \ntime\n:\n \n120000\n,\n\n    \ntypes\n:\n \n[\n\n      \nMICROSOFT_BAND_VIBRATE_3\n,\n\n      \nPHONE_VIBRATE_3\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \ntime\n:\n \n240000\n,\n\n    \ntypes\n:\n \n[\n\n      \nMICROSOFT_BAND_VIBRATE_3\n,\n\n      \nPHONE_VIBRATE_3\n\n    \n]\n\n  \n}\n\n\n]\n\n\n\n\n\n\nIncentive object\n\n\nIncentives allow the system to be configuration for micro-payments based on the participant meeting a set of \nconditions\n or rules.  The following must be specified:\n\n\n\n\nincentive\n: Payment in dollars\n\n\nmessages\n: List of strings to be shown to the participant\n\n\nconditions\n: A set of \nconditions\n that must be met to receive this incentive.\n\n\n\n\nIncentive Example\n\n\n{\n\n  \nincentive\n:\n \n0.75\n,\n\n  \nmessages\n:\n \n[\n\n    \nThank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started.\n,\n\n    \nYou will be paid $0.75\n,\n\n    \nTotal Earning: $\n\n  \n],\n\n  \nconditions\n:\n \n[\n\n    \nDATA_QUALITY_DAY_START\n,\n\n    \nEMA_ANSWER_5\n\n  \n]\n\n\n}\n\n\n\n\n\n\nIncentive List Example\n\n\nincentive_rules\n:\n \n[\n\n  \n{\n\n    \nincentive\n:\n \n0.75\n,\n\n    \nmessages\n:\n \n[\n\n      \nThank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started.\n,\n\n      \nYou will be paid $0.75\n,\n\n      \nTotal Earning: $\n\n    \n],\n\n    \nconditions\n:\n \n[\n\n      \nDATA_QUALITY_DAY_START\n,\n\n      \nEMA_ANSWER_5\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nincentive\n:\n \n0.5\n,\n\n    \nmessages\n:\n \n[\n\n      \nThank you. You will be paid $0.50 for taking the survey and wearing the sensors for more than 60% of the time since day started. But you missed $0.25 bonus for not answering the survey within 5 minutes.\n,\n\n      \nYou will be paid $0.50\n,\n\n      \nTotal Earning: $\n\n    \n],\n\n    \nconditions\n:\n \n[\n\n      \nDATA_QUALITY_DAY_START\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nincentive\n:\n \n0\n,\n\n    \nmessages\n:\n \n[\n\n      \nThank you. Unfortunately, you will be paid $0.00 because you have not worn sensors for at least 60% of the time since day started.\n,\n\n      \nYou will be paid $0.50\n,\n\n      \nTotal Earning: $\n\n    \n],\n\n    \nconditions\n:\n \n[]\n\n  \n}\n\n\n]\n\n\n\n\n\n\nComplete Example\n\n\n[\n\n  \n{\n\n    \nid\n:\n \nRANDOM_EMA\n,\n\n    \ntype\n:\n \nEMA\n,\n\n    \ntrigger_type\n:\n \nRANDOM\n,\n\n    \nname\n:\n \nRandom Experience Sampling\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \napplication\n:\n \n{\n\n      \nid\n:\n \nrandom_experience_sampling\n,\n\n      \nname\n:\n \nRandom Experience Sampling\n,\n\n      \nfile_name\n:\n \nrandom_experience_sampling.json\n,\n\n      \npackage_name\n:\n \norg.md2k.ema\n,\n\n      \ntimeout\n:\n \n600000\n\n    \n},\n\n    \nblocks\n:\n \n[\n\n      \n{\n\n        \ntotal\n:\n \n1\n,\n\n        \nbase\n:\n \nDAY_START\n,\n\n        \nstart_offset\n:\n \n0\n,\n\n        \nend_offset\n:\n \n14400000\n\n      \n},\n\n      \n{\n\n        \ntotal\n:\n \n1\n,\n\n        \nbase\n:\n \nDAY_START\n,\n\n        \nstart_offset\n:\n \n14400000\n,\n\n        \nend_offset\n:\n \n28800000\n\n      \n},\n\n      \n{\n\n        \ntotal\n:\n \n1\n,\n\n        \nbase\n:\n \nDAY_START\n,\n\n        \nstart_offset\n:\n \n28800000\n,\n\n        \nend_offset\n:\n \n43200000\n\n      \n}\n\n    \n],\n\n    \nscheduler_rules\n:\n \n[\n\n      \n{\n\n        \ntype\n:\n \nRANDOM\n,\n\n        \nstart_time\n:\n \nBLOCK_START\n,\n\n        \nend_time\n:\n \nBLOCK_END\n,\n\n        \ndivide\n:\n \n2\n,\n\n        \nconditions\n:\n \n[\n\n          \nPRIVACY\n,\n\n          \nVALID_BLOCK_RANDOM_EMA\n,\n\n          \nRANDOM_EMA_60\n,\n\n          \nSMOKING_EMA_10\n,\n\n          \nEMI_10\n,\n\n          \nDATA_QUALITY_5\n,\n\n          \nNOT_DRIVING_5\n,\n\n          \nPHONE_BATTERY_10\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntype\n:\n \nRANDOM\n,\n\n        \nstart_time\n:\n \nLAST_SCHEDULE\n,\n\n        \nend_time\n:\n \nBLOCK_END\n,\n\n        \ndivide\n:\n \n2\n,\n\n        \nconditions\n:\n \n[\n\n          \nPRIVACY\n,\n\n          \nVALID_BLOCK_RANDOM_EMA\n,\n\n          \nRANDOM_EMA_60\n,\n\n          \nSMOKING_EMA_10\n,\n\n          \nEMI_10\n,\n\n          \nDATA_QUALITY_5\n,\n\n          \nNOT_DRIVING_5\n,\n\n          \nPHONE_BATTERY_10\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntype\n:\n \nIMMEDIATE\n,\n\n        \nconditions\n:\n \n[\n\n          \nPRIVACY\n,\n\n          \nVALID_BLOCK_RANDOM_EMA\n,\n\n          \nRANDOM_EMA_60\n,\n\n          \nSMOKING_EMA_10\n,\n\n          \nEMI_10\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \nnotifications\n:\n \n[\n\n      \n{\n\n        \ntime\n:\n \n0\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nMICROSOFT_BAND_MESSAGE_EMA\n,\n\n          \nPHONE_VIBRATE_3\n,\n\n          \nPHONE_MESSAGE_DELAY_EMA\n,\n\n          \nPHONE_SCREEN\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntime\n:\n \n120000\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nPHONE_VIBRATE_3\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntime\n:\n \n240000\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nPHONE_VIBRATE_3\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \nincentive_rules\n:\n \n[\n\n      \n{\n\n        \nincentive\n:\n \n0.75\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started.\n,\n\n          \nYou will be paid $0.75\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[\n\n          \nDATA_QUALITY_DAY_START\n,\n\n          \nEMA_ANSWER_5\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nincentive\n:\n \n0.5\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. You will be paid $0.50 for taking the survey and wearing the sensors for more than 60% of the time since day started. But you missed $0.25 bonus for not answering the survey within 5 minutes.\n,\n\n          \nYou will be paid $0.50\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[\n\n          \nDATA_QUALITY_DAY_START\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nincentive\n:\n \n0\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. Unfortunately, you will be paid $0.00 because you have not worn sensors for at least 60% of the time since day started.\n,\n\n          \nYou will be paid $0.50\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nSMOKING_EMA\n,\n\n    \ntype\n:\n \nEMA\n,\n\n    \ntrigger_type\n:\n \nSELF_REPORT\n,\n\n    \nname\n:\n \nEvent Contingent EMA\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \napplication\n:\n \n{\n\n      \nid\n:\n \nevent_contingent_recording\n,\n\n      \nname\n:\n \nEvent Contingent Recording\n,\n\n      \npackage_name\n:\n \norg.md2k.ema\n,\n\n      \nfile_name\n:\n \nevent_contingent_recording.json\n,\n\n      \ntimeout\n:\n \n600000\n\n    \n},\n\n    \nblocks\n:\n \n[\n\n      \n{\n\n        \ntotal\n:\n \n1\n,\n\n        \nbase\n:\n \nDAY_START\n,\n\n        \nstart_offset\n:\n \n0\n,\n\n        \nend_offset\n:\n \n14400000\n\n      \n},\n\n      \n{\n\n        \ntotal\n:\n \n1\n,\n\n        \nbase\n:\n \nDAY_START\n,\n\n        \nstart_offset\n:\n \n14400000\n,\n\n        \nend_offset\n:\n \n28800000\n\n      \n},\n\n      \n{\n\n        \ntotal\n:\n \n1\n,\n\n        \nbase\n:\n \nDAY_START\n,\n\n        \nstart_offset\n:\n \n28800000\n,\n\n        \nend_offset\n:\n \n43200000\n\n      \n}\n\n    \n],\n\n    \nscheduler_rules\n:\n \n[\n\n      \n{\n\n        \ntype\n:\n \nIMMEDIATE\n,\n\n        \ndata_source\n:\n \n{\n\n          \ntype\n:\n \nEVENT\n\n        \n},\n\n        \nparameters\n:\n \n[\n\n          \nSMOKING\n\n        \n],\n\n        \nconditions\n:\n \n[\n\n          \nPRIVACY\n,\n\n          \nVALID_BLOCK_SMOKING_EMA\n,\n\n          \nRANDOM_EMA_10\n,\n\n          \nSMOKING_EMA_30\n,\n\n          \nEMI_10\n,\n\n          \nDATA_QUALITY_5\n,\n\n          \nNOT_DRIVING_5\n,\n\n          \nPHONE_BATTERY_10\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \nnotifications\n:\n \n[\n\n      \n{\n\n        \ntime\n:\n \n0\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nMICROSOFT_BAND_MESSAGE_EMA\n,\n\n          \nPHONE_VIBRATE_3\n,\n\n          \nPHONE_MESSAGE_DELAY_EMA\n,\n\n          \nPHONE_SCREEN\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntime\n:\n \n120000\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nPHONE_VIBRATE_3\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntime\n:\n \n240000\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nPHONE_VIBRATE_3\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \nincentive_rules\n:\n \n[\n\n      \n{\n\n        \nincentive\n:\n \n0.75\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started.\n,\n\n          \nYou will be paid $0.75\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[\n\n          \nDATA_QUALITY_DAY_START\n,\n\n          \nEMA_ANSWER_5\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nincentive\n:\n \n0.5\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. You will be paid $0.50 for taking the survey and wearing the sensors for more than 60% of the time since day started. But you missed $0.25 bonus for not answering the survey within 5 minutes.\n,\n\n          \nYou will be paid $0.50\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[\n\n          \nDATA_QUALITY_DAY_START\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \nincentive\n:\n \n0\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. Unfortunately, you will be paid $0.00 because you have not worn sensors for at least 60% of the time since day started.\n,\n\n          \nYou will be paid $0.50\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nEND_OF_DAY_EMA\n,\n\n    \ntype\n:\n \nEMA\n,\n\n    \ntrigger_type\n:\n \nSELF_REPORT\n,\n\n    \nname\n:\n \nEnd of day EMA\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \napplication\n:\n \n{\n\n      \nid\n:\n \nend_of_day_recording\n,\n\n      \nname\n:\n \nEnd of Day Recording\n,\n\n      \npackage_name\n:\n \norg.md2k.ema\n,\n\n      \nfile_name\n:\n \nend_of_day_recording.json\n,\n\n      \ntimeout\n:\n \n600000\n\n    \n},\n\n    \nscheduler_rules\n:\n \n[\n\n      \n{\n\n        \ntype\n:\n \nIMMEDIATE\n,\n\n        \ndata_source\n:\n \n{\n\n          \ntype\n:\n \nDAY_END\n\n        \n}\n\n      \n}\n\n    \n],\n\n    \nnotifications\n:\n \n[\n\n      \n{\n\n        \ntime\n:\n \n0\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nMICROSOFT_BAND_MESSAGE_EMA\n,\n\n          \nPHONE_VIBRATE_3\n,\n\n          \nPHONE_MESSAGE_DELAY_EMA_15_30_60_120\n,\n\n          \nPHONE_SCREEN\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntime\n:\n \n120000\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nPHONE_VIBRATE_3\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \ntime\n:\n \n240000\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nPHONE_VIBRATE_3\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \nincentive_rules\n:\n \n[\n\n      \n{\n\n        \nincentive\n:\n \n1\n,\n\n        \nmessages\n:\n \n[\n\n          \nThank you. You will be paid $1.00 for taking the End of Day survey.\n,\n\n          \nYou will be paid $1.00\n,\n\n          \nTotal Earning: $\n\n        \n],\n\n        \nconditions\n:\n \n[]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nEMI\n,\n\n    \ntype\n:\n \nEMI\n,\n\n    \ntrigger_type\n:\n \nEVENT\n,\n\n    \nname\n:\n \nIntervention\n,\n\n    \nenable\n:\n \ntrue\n,\n\n    \nscheduler_rules\n:\n \n[\n\n      \n{\n\n        \ntype\n:\n \nIMMEDIATE\n,\n\n        \ndata_source\n:\n \n{\n\n          \ntype\n:\n \nORG_MD2K_CSTRESS_STRESS_EPISODE_CLASSIFICATION\n\n        \n},\n\n        \nparameters\n:\n \n[\n\n          \n0\n,\n\n          \n2\n\n        \n],\n\n        \nconditions\n:\n \n[\n\n          \nPRIVACY\n,\n\n          \nRANDOM_EMA_10\n,\n\n          \nSMOKING_EMA_10\n,\n\n          \nEMI_60\n,\n\n          \nDATA_QUALITY_5\n,\n\n          \nNOT_DRIVING_5\n,\n\n          \nPHONE_BATTERY_10\n\n        \n]\n\n      \n}\n\n    \n],\n\n    \nincentive_rules\n:\n \n[\n\n      \n{\n\n        \nincentive\n:\n \n1\n,\n\n        \nconditions\n:\n \n[]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nMOODSURFING\n,\n\n    \ntype\n:\n \nEMI\n,\n\n    \nname\n:\n \nMoodSurfing\n,\n\n    \ntrigger_type\n:\n \nEVENT\n,\n\n    \nenable\n:\n \nfalse\n,\n\n    \napplication\n:\n \n{\n\n      \nid\n:\n \nmoodsurfing\n,\n\n      \nname\n:\n \nMoodSurfing\n,\n\n      \npackage_name\n:\n \norg.md2k.moodsurfing\n,\n\n      \ntimeout\n:\n \n600000\n\n    \n},\n\n    \nnotifications\n:\n \n[\n\n      \n{\n\n        \ntime\n:\n \n0\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nMICROSOFT_BAND_MESSAGE_MOODSURFING\n,\n\n          \nPHONE_VIBRATE_3\n,\n\n          \nPHONE_MESSAGE_MOODSURFING\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nTHOUGHT_SHAKEUP\n,\n\n    \ntype\n:\n \nEMI\n,\n\n    \nname\n:\n \nThought Shakeup\n,\n\n    \ntrigger_type\n:\n \nEVENT\n,\n\n    \nenable\n:\n \nfalse\n,\n\n    \napplication\n:\n \n{\n\n      \nid\n:\n \nthought_shakeup\n,\n\n      \nname\n:\n \nThought Shakeup\n,\n\n      \npackage_name\n:\n \norg.md2k.thoughtshakeup\n,\n\n      \ntimeout\n:\n \n600000\n\n    \n},\n\n    \nnotifications\n:\n \n[\n\n      \n{\n\n        \ntime\n:\n \n0\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nMICROSOFT_BAND_MESSAGE_THOUGHTSHAKEUP\n,\n\n          \nPHONE_VIBRATE_3\n,\n\n          \nPHONE_MESSAGE_THOUGHTSHAKEUP\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n{\n\n    \nid\n:\n \nHEADSPACE\n,\n\n    \ntype\n:\n \nEMI\n,\n\n    \nname\n:\n \nHeadSpace\n,\n\n    \ntrigger_type\n:\n \nEVENT\n,\n\n    \nenable\n:\n \nfalse\n,\n\n    \napplication\n:\n \n{\n\n      \nid\n:\n \nhead_space\n,\n\n      \nname\n:\n \nHeadSpace\n,\n\n      \npackage_name\n:\n \ncom.getsomeheadspace.android\n,\n\n      \ntimeout\n:\n \n1000\n\n    \n},\n\n    \nnotifications\n:\n \n[\n\n      \n{\n\n        \ntime\n:\n \n0\n,\n\n        \ntypes\n:\n \n[\n\n          \nMICROSOFT_BAND_VIBRATE_3\n,\n\n          \nMICROSOFT_BAND_MESSAGE_HEADSPACE\n,\n\n          \nPHONE_VIBRATE_3\n,\n\n          \nPHONE_MESSAGE_HEADSPACE\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n}\n\n\n]",
            "title": "Configuration-EMA Scheduler"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#ema-scheduler",
            "text": "Config file name and location:  mCerebrum/org.md2k.ema_scheduler/config.json  EMA scheduler configuration structure: [ \n   EMA_EMI_OBJECT_ 1 , \n   EMA_EMI_OBJECT_ 2 , \n   ...  ]",
            "title": "EMA Scheduler"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#emaemi-object",
            "text": "The EMA/EMI object defines what, when, and under which conditions an event will be sent to the participant.   id : unique object identifier string  type : must be one of the following  EMA  for ecological momentary assessment  EMI  for ecological momentary intervention    trigger_type : Must be one of the following:  RANDOM : A randomly generated assessment time subject to the criteria of the  block  definition  SELF_REPORT : Participant has generated a self-reported response  EVENT : Generated by a processing sensor data and computing specific events such as high stress or a smoking puff    name : Description that is provided to a participant through mCerebrum's interface  enabled :  true  or  false  to enable or disable this object  application : Defines where the EMA/EMI is located and which application utilized to execute it  id : unique EMA identifier  name : string that is displayed to the user describing an EMA  file_name : file name of a JSON document located in this folder for a specific EMA  package_name : Application reference which handles the specified  file_name  timeout : Time in milliseconds after which an EMA is considered abandoned    blocks : A list of  block  object each designating:  scheduler_rules : List of  schedule  objects each designating:  notifications : A list of  notification  objects, each of which include:  incentive_rules : A list of  incentive  objects to apply",
            "title": "EMA/EMI Object"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#partial-example",
            "text": "{ \n   id :   RANDOM_EMA , \n   type :   EMA , \n   trigger_type :   RANDOM , \n   name :   Random Experience Sampling , \n   enable :   true , \n   application :   { \n     id :   random_experience_sampling , \n     name :   Random Experience Sampling , \n     file_name :   random_experience_sampling.json , \n     package_name :   org.md2k.ema , \n     timeout :   600000 \n   }, \n   blocks :   [ SEE_BELOW ], \n   scheduler_rules :   [ SEE_BELOW ], \n   notifications :   [ SEE_BELOW ], \n   incentive_rules :   [ SEE_BELOW ]  }",
            "title": "Partial Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#block-object",
            "text": "A block object defines a time window within event can occur and provides a way to limit the total number of EMA/EMI events.  These are the fields that must be specified:   total : Total number of times this object should be shown to a participant  base : A reference from which to start the offsets:  base  start_offset : Offset time in milliseconds from the value defined in  base  end_offset : Offset time in milliseconds from the value defined in  base",
            "title": "Block object"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#block-example",
            "text": "{ \n   total :   1 , \n   base :   DAY_START , \n   start_offset :   14400000 , \n   end_offset :   28800000  }",
            "title": "Block Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#block-list-example",
            "text": "blocks :   [ \n   { \n     total :   1 , \n     base :   DAY_START , \n     start_offset :   0 , \n     end_offset :   14400000 \n   }, \n   { \n     total :   1 , \n     base :   DAY_START , \n     start_offset :   14400000 , \n     end_offset :   28800000 \n   }, \n   { \n     total :   1 , \n     base :   DAY_START , \n     start_offset :   28800000 , \n     end_offset :   43200000 \n   }  ]",
            "title": "Block List Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#scheduler-object",
            "text": "TODO: This section is incomplete.  Missing EMI-specific configurations.  Discuss with Monowar  A scheduler object designates the rules for delivering the specified EMA/EMI to a participant and contains the following parameters:   type : Must choose one  RANDOM : Randomly deliver the EMA/EMI within the current  block  IMMEDIATE : Immediately deliver the EMA/EMI    start_time : Currently must be  BLOCK_START  but will be more flexible in a future release  end_time : Currently must be  BLOCK_END  but will be more flexible in a future release  divide : Divisor in which to segment the remaining time for random EMA/EMI delivery  conditions : A list from a a set of  conditions , all which are required to be met for a notification to be delivered",
            "title": "Scheduler object"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#scheduler-example",
            "text": "This example configures a  RANDOM  ... { \n   type :   RANDOM , \n   start_time :   BLOCK_START , \n   end_time :   BLOCK_END , \n   divide :   2 , \n   conditions :   [ \n     PRIVACY , \n     VALID_BLOCK_RANDOM_EMA , \n     RANDOM_EMA_60 , \n     SMOKING_EMA_10 , \n     EMI_10 , \n     DATA_QUALITY_5 , \n     NOT_DRIVING_5 , \n     PHONE_BATTERY_10 \n   ]  }",
            "title": "Scheduler Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#scheduler-list-example",
            "text": "scheduler_rules :   [ \n   { \n     type :   RANDOM , \n     start_time :   BLOCK_START , \n     end_time :   BLOCK_END , \n     divide :   2 , \n     conditions :   [ \n       PRIVACY , \n       VALID_BLOCK_RANDOM_EMA , \n       RANDOM_EMA_60 , \n       SMOKING_EMA_10 , \n       EMI_10 , \n       DATA_QUALITY_5 , \n       NOT_DRIVING_5 , \n       PHONE_BATTERY_10 \n     ] \n   }, \n   { \n     type :   RANDOM , \n     start_time :   LAST_SCHEDULE , \n     end_time :   BLOCK_END , \n     divide :   2 , \n     conditions :   [ \n       PRIVACY , \n       VALID_BLOCK_RANDOM_EMA , \n       RANDOM_EMA_60 , \n       SMOKING_EMA_10 , \n       EMI_10 , \n       DATA_QUALITY_5 , \n       NOT_DRIVING_5 , \n       PHONE_BATTERY_10 \n     ] \n   }, \n   { \n     type :   IMMEDIATE , \n     conditions :   [ \n       PRIVACY , \n       VALID_BLOCK_RANDOM_EMA , \n       RANDOM_EMA_60 , \n       SMOKING_EMA_10 , \n       EMI_10 \n     ] \n   }  ]",
            "title": "Scheduler List Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#notification-object",
            "text": "The notification objects define what types of alerts can be sent to the participant and their duration(s).  There are two fields that must be specified:   time : Milliseconds after the object generation time when to deliver the specified notification(s)  types : A list of  notification types",
            "title": "Notification object"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#notification-example",
            "text": "In this example, 2 minutes (120000 milliseconds) after the EMA/EMI was triggered, it sends the  MICROSOFT_BAND_VIBRATE_3  and  PHONE_VIBRATE_3  notifications to the Notification Manager for delivery to the participant.  { \n   time :   120000 , \n   types :   [ \n     MICROSOFT_BAND_VIBRATE_3 , \n     PHONE_VIBRATE_3 \n   ]  }",
            "title": "Notification Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#notification-list-example",
            "text": "notifications :   [ \n   { \n     time :   0 , \n     types :   [ \n       MICROSOFT_BAND_VIBRATE_3 , \n       MICROSOFT_BAND_MESSAGE_EMA , \n       PHONE_VIBRATE_3 , \n       PHONE_MESSAGE_DELAY_EMA , \n       PHONE_SCREEN \n     ] \n   }, \n   { \n     time :   120000 , \n     types :   [ \n       MICROSOFT_BAND_VIBRATE_3 , \n       PHONE_VIBRATE_3 \n     ] \n   }, \n   { \n     time :   240000 , \n     types :   [ \n       MICROSOFT_BAND_VIBRATE_3 , \n       PHONE_VIBRATE_3 \n     ] \n   }  ]",
            "title": "Notification List Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#incentive-object",
            "text": "Incentives allow the system to be configuration for micro-payments based on the participant meeting a set of  conditions  or rules.  The following must be specified:   incentive : Payment in dollars  messages : List of strings to be shown to the participant  conditions : A set of  conditions  that must be met to receive this incentive.",
            "title": "Incentive object"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#incentive-example",
            "text": "{ \n   incentive :   0.75 , \n   messages :   [ \n     Thank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started. , \n     You will be paid $0.75 , \n     Total Earning: $ \n   ], \n   conditions :   [ \n     DATA_QUALITY_DAY_START , \n     EMA_ANSWER_5 \n   ]  }",
            "title": "Incentive Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#incentive-list-example",
            "text": "incentive_rules :   [ \n   { \n     incentive :   0.75 , \n     messages :   [ \n       Thank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started. , \n       You will be paid $0.75 , \n       Total Earning: $ \n     ], \n     conditions :   [ \n       DATA_QUALITY_DAY_START , \n       EMA_ANSWER_5 \n     ] \n   }, \n   { \n     incentive :   0.5 , \n     messages :   [ \n       Thank you. You will be paid $0.50 for taking the survey and wearing the sensors for more than 60% of the time since day started. But you missed $0.25 bonus for not answering the survey within 5 minutes. , \n       You will be paid $0.50 , \n       Total Earning: $ \n     ], \n     conditions :   [ \n       DATA_QUALITY_DAY_START \n     ] \n   }, \n   { \n     incentive :   0 , \n     messages :   [ \n       Thank you. Unfortunately, you will be paid $0.00 because you have not worn sensors for at least 60% of the time since day started. , \n       You will be paid $0.50 , \n       Total Earning: $ \n     ], \n     conditions :   [] \n   }  ]",
            "title": "Incentive List Example"
        },
        {
            "location": "/mCerebrum/configuration-emascheduler/#complete-example",
            "text": "[ \n   { \n     id :   RANDOM_EMA , \n     type :   EMA , \n     trigger_type :   RANDOM , \n     name :   Random Experience Sampling , \n     enable :   true , \n     application :   { \n       id :   random_experience_sampling , \n       name :   Random Experience Sampling , \n       file_name :   random_experience_sampling.json , \n       package_name :   org.md2k.ema , \n       timeout :   600000 \n     }, \n     blocks :   [ \n       { \n         total :   1 , \n         base :   DAY_START , \n         start_offset :   0 , \n         end_offset :   14400000 \n       }, \n       { \n         total :   1 , \n         base :   DAY_START , \n         start_offset :   14400000 , \n         end_offset :   28800000 \n       }, \n       { \n         total :   1 , \n         base :   DAY_START , \n         start_offset :   28800000 , \n         end_offset :   43200000 \n       } \n     ], \n     scheduler_rules :   [ \n       { \n         type :   RANDOM , \n         start_time :   BLOCK_START , \n         end_time :   BLOCK_END , \n         divide :   2 , \n         conditions :   [ \n           PRIVACY , \n           VALID_BLOCK_RANDOM_EMA , \n           RANDOM_EMA_60 , \n           SMOKING_EMA_10 , \n           EMI_10 , \n           DATA_QUALITY_5 , \n           NOT_DRIVING_5 , \n           PHONE_BATTERY_10 \n         ] \n       }, \n       { \n         type :   RANDOM , \n         start_time :   LAST_SCHEDULE , \n         end_time :   BLOCK_END , \n         divide :   2 , \n         conditions :   [ \n           PRIVACY , \n           VALID_BLOCK_RANDOM_EMA , \n           RANDOM_EMA_60 , \n           SMOKING_EMA_10 , \n           EMI_10 , \n           DATA_QUALITY_5 , \n           NOT_DRIVING_5 , \n           PHONE_BATTERY_10 \n         ] \n       }, \n       { \n         type :   IMMEDIATE , \n         conditions :   [ \n           PRIVACY , \n           VALID_BLOCK_RANDOM_EMA , \n           RANDOM_EMA_60 , \n           SMOKING_EMA_10 , \n           EMI_10 \n         ] \n       } \n     ], \n     notifications :   [ \n       { \n         time :   0 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           MICROSOFT_BAND_MESSAGE_EMA , \n           PHONE_VIBRATE_3 , \n           PHONE_MESSAGE_DELAY_EMA , \n           PHONE_SCREEN \n         ] \n       }, \n       { \n         time :   120000 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           PHONE_VIBRATE_3 \n         ] \n       }, \n       { \n         time :   240000 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           PHONE_VIBRATE_3 \n         ] \n       } \n     ], \n     incentive_rules :   [ \n       { \n         incentive :   0.75 , \n         messages :   [ \n           Thank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started. , \n           You will be paid $0.75 , \n           Total Earning: $ \n         ], \n         conditions :   [ \n           DATA_QUALITY_DAY_START , \n           EMA_ANSWER_5 \n         ] \n       }, \n       { \n         incentive :   0.5 , \n         messages :   [ \n           Thank you. You will be paid $0.50 for taking the survey and wearing the sensors for more than 60% of the time since day started. But you missed $0.25 bonus for not answering the survey within 5 minutes. , \n           You will be paid $0.50 , \n           Total Earning: $ \n         ], \n         conditions :   [ \n           DATA_QUALITY_DAY_START \n         ] \n       }, \n       { \n         incentive :   0 , \n         messages :   [ \n           Thank you. Unfortunately, you will be paid $0.00 because you have not worn sensors for at least 60% of the time since day started. , \n           You will be paid $0.50 , \n           Total Earning: $ \n         ], \n         conditions :   [] \n       } \n     ] \n   }, \n   { \n     id :   SMOKING_EMA , \n     type :   EMA , \n     trigger_type :   SELF_REPORT , \n     name :   Event Contingent EMA , \n     enable :   true , \n     application :   { \n       id :   event_contingent_recording , \n       name :   Event Contingent Recording , \n       package_name :   org.md2k.ema , \n       file_name :   event_contingent_recording.json , \n       timeout :   600000 \n     }, \n     blocks :   [ \n       { \n         total :   1 , \n         base :   DAY_START , \n         start_offset :   0 , \n         end_offset :   14400000 \n       }, \n       { \n         total :   1 , \n         base :   DAY_START , \n         start_offset :   14400000 , \n         end_offset :   28800000 \n       }, \n       { \n         total :   1 , \n         base :   DAY_START , \n         start_offset :   28800000 , \n         end_offset :   43200000 \n       } \n     ], \n     scheduler_rules :   [ \n       { \n         type :   IMMEDIATE , \n         data_source :   { \n           type :   EVENT \n         }, \n         parameters :   [ \n           SMOKING \n         ], \n         conditions :   [ \n           PRIVACY , \n           VALID_BLOCK_SMOKING_EMA , \n           RANDOM_EMA_10 , \n           SMOKING_EMA_30 , \n           EMI_10 , \n           DATA_QUALITY_5 , \n           NOT_DRIVING_5 , \n           PHONE_BATTERY_10 \n         ] \n       } \n     ], \n     notifications :   [ \n       { \n         time :   0 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           MICROSOFT_BAND_MESSAGE_EMA , \n           PHONE_VIBRATE_3 , \n           PHONE_MESSAGE_DELAY_EMA , \n           PHONE_SCREEN \n         ] \n       }, \n       { \n         time :   120000 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           PHONE_VIBRATE_3 \n         ] \n       }, \n       { \n         time :   240000 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           PHONE_VIBRATE_3 \n         ] \n       } \n     ], \n     incentive_rules :   [ \n       { \n         incentive :   0.75 , \n         messages :   [ \n           Thank you. You will be paid $0.75 for taking the survey within 5 minutes and wearing the sensors for more than 60% of the time since day started. , \n           You will be paid $0.75 , \n           Total Earning: $ \n         ], \n         conditions :   [ \n           DATA_QUALITY_DAY_START , \n           EMA_ANSWER_5 \n         ] \n       }, \n       { \n         incentive :   0.5 , \n         messages :   [ \n           Thank you. You will be paid $0.50 for taking the survey and wearing the sensors for more than 60% of the time since day started. But you missed $0.25 bonus for not answering the survey within 5 minutes. , \n           You will be paid $0.50 , \n           Total Earning: $ \n         ], \n         conditions :   [ \n           DATA_QUALITY_DAY_START \n         ] \n       }, \n       { \n         incentive :   0 , \n         messages :   [ \n           Thank you. Unfortunately, you will be paid $0.00 because you have not worn sensors for at least 60% of the time since day started. , \n           You will be paid $0.50 , \n           Total Earning: $ \n         ], \n         conditions :   [] \n       } \n     ] \n   }, \n   { \n     id :   END_OF_DAY_EMA , \n     type :   EMA , \n     trigger_type :   SELF_REPORT , \n     name :   End of day EMA , \n     enable :   true , \n     application :   { \n       id :   end_of_day_recording , \n       name :   End of Day Recording , \n       package_name :   org.md2k.ema , \n       file_name :   end_of_day_recording.json , \n       timeout :   600000 \n     }, \n     scheduler_rules :   [ \n       { \n         type :   IMMEDIATE , \n         data_source :   { \n           type :   DAY_END \n         } \n       } \n     ], \n     notifications :   [ \n       { \n         time :   0 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           MICROSOFT_BAND_MESSAGE_EMA , \n           PHONE_VIBRATE_3 , \n           PHONE_MESSAGE_DELAY_EMA_15_30_60_120 , \n           PHONE_SCREEN \n         ] \n       }, \n       { \n         time :   120000 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           PHONE_VIBRATE_3 \n         ] \n       }, \n       { \n         time :   240000 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           PHONE_VIBRATE_3 \n         ] \n       } \n     ], \n     incentive_rules :   [ \n       { \n         incentive :   1 , \n         messages :   [ \n           Thank you. You will be paid $1.00 for taking the End of Day survey. , \n           You will be paid $1.00 , \n           Total Earning: $ \n         ], \n         conditions :   [] \n       } \n     ] \n   }, \n   { \n     id :   EMI , \n     type :   EMI , \n     trigger_type :   EVENT , \n     name :   Intervention , \n     enable :   true , \n     scheduler_rules :   [ \n       { \n         type :   IMMEDIATE , \n         data_source :   { \n           type :   ORG_MD2K_CSTRESS_STRESS_EPISODE_CLASSIFICATION \n         }, \n         parameters :   [ \n           0 , \n           2 \n         ], \n         conditions :   [ \n           PRIVACY , \n           RANDOM_EMA_10 , \n           SMOKING_EMA_10 , \n           EMI_60 , \n           DATA_QUALITY_5 , \n           NOT_DRIVING_5 , \n           PHONE_BATTERY_10 \n         ] \n       } \n     ], \n     incentive_rules :   [ \n       { \n         incentive :   1 , \n         conditions :   [] \n       } \n     ] \n   }, \n   { \n     id :   MOODSURFING , \n     type :   EMI , \n     name :   MoodSurfing , \n     trigger_type :   EVENT , \n     enable :   false , \n     application :   { \n       id :   moodsurfing , \n       name :   MoodSurfing , \n       package_name :   org.md2k.moodsurfing , \n       timeout :   600000 \n     }, \n     notifications :   [ \n       { \n         time :   0 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           MICROSOFT_BAND_MESSAGE_MOODSURFING , \n           PHONE_VIBRATE_3 , \n           PHONE_MESSAGE_MOODSURFING \n         ] \n       } \n     ] \n   }, \n   { \n     id :   THOUGHT_SHAKEUP , \n     type :   EMI , \n     name :   Thought Shakeup , \n     trigger_type :   EVENT , \n     enable :   false , \n     application :   { \n       id :   thought_shakeup , \n       name :   Thought Shakeup , \n       package_name :   org.md2k.thoughtshakeup , \n       timeout :   600000 \n     }, \n     notifications :   [ \n       { \n         time :   0 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           MICROSOFT_BAND_MESSAGE_THOUGHTSHAKEUP , \n           PHONE_VIBRATE_3 , \n           PHONE_MESSAGE_THOUGHTSHAKEUP \n         ] \n       } \n     ] \n   }, \n   { \n     id :   HEADSPACE , \n     type :   EMI , \n     name :   HeadSpace , \n     trigger_type :   EVENT , \n     enable :   false , \n     application :   { \n       id :   head_space , \n       name :   HeadSpace , \n       package_name :   com.getsomeheadspace.android , \n       timeout :   1000 \n     }, \n     notifications :   [ \n       { \n         time :   0 , \n         types :   [ \n           MICROSOFT_BAND_VIBRATE_3 , \n           MICROSOFT_BAND_MESSAGE_HEADSPACE , \n           PHONE_VIBRATE_3 , \n           PHONE_MESSAGE_HEADSPACE \n         ] \n       } \n     ] \n   }  ]",
            "title": "Complete Example"
        },
        {
            "location": "/mCerebrum/troubleshooting/",
            "text": "Troubleshooting Guide\n\n\nmCerebrum app crashing\n\n\nIf the app crashes perpetually:\n\n\n\n\nClear all data from the DataKit app.\n\n\nClear all data from the mCerebrum app.\n\n\nDelete the configuration folder located in the internal memory \n/mCerebrum\n\n\nMake sure you have installed the proper update for each app.\n\n\nDelete the mCerebrum app from the phone and re-install it.\n\n\n\n\nMicrosoft Band\n\n\nIf you are experiencing bad data quality:\n\n\n\n\nMake sure the Placement setting is designated for the correct wrist (left or right).\n\n\nMake sure the clasp on the Band is securely locked around the wrist.\n\n\nReset the application, wait 15 seconds and check again.\n\n\nRestart the phone, wait one minute and check again.\n\n\nMake sure the Band is charged and powered ON.\n\n\n\n\nIf you are experiencing pairing issues:\n\n\n\n\nClear all data from the DataKit app and mCerebrum app and try again.\n\n\nPerform a factory reset on the Band and try again.\n\n\n\n\nIf you are experiencing short battery life:\n\n\n\n\nMake sure the battery is at 100% before disconnecting the charger.\n\n\nLower the Band\u2019s brightness setting.\n\n\nTurn off the Band\u2019s GPS feature.\n\n\nTurn off the Band\u2019s Daily Heart Rate feature.\n\n\nTurn off the Band\u2019s Watch Mode feature.\n\n\n\n\nAutoSense Wrist\n\n\nIf you are experiencing poor data quality:\n\n\n\n\nMake sure the wrist sensor is paired to the phone with the correct ID number.\n\n\nMake sure the Placement setting is designated for the correct wrist (left or right).\n\n\nReset the application, wait 15 seconds and check again.\n\n\nRestart the phone, wait one minute and check again.\n\n\nMake sure the wrist sensor power switch is ON.\n\n\nMake sure the wrist sensor is charged.\n\n\n\n\nAutoSense RIP\n\n\nIf you are experiencing poor data quality:\n\n\n\n\nMake sure the chest sensor is paired to the phone with the correct ID number.\n\n\nMake sure all cable connections are secure.\n\n\nMake sure the RIP connector is inserted into the correct port of the chest sensor.\n\n\nTighten the chest band so it fits snugly under the armpits.\n\n\nReset the application, wait 15 seconds and check again.\n\n\nRestart the phone, wait one minute and check again.\n\n\nMake sure the chest sensor is charged and powered ON.\n\n\n\n\nAutoSense ECG\n\n\nIf you are experiencing poor data quality:\n\n\n\n\nMake sure the chest sensor is paired to the phone with the correct ID number.\n\n\nMake sure all cable connections are secure.\n\n\nMake sure the ECG connector is inserted into the correct port of the chest sensor.\n\n\nAdjust the position of the electrodes on the body.\n\n\nThe positive electrode should be under the sternum in the center of the chest.\n\n\nThe negative electrode should be on the left side of the ribcage at approximately the same height as the positive electrode.\n\n\n\n\n\n\nReset the application, wait 15 seconds and check again.\n\n\nRestart the phone, wait one minute and check again.\n\n\nMake sure the chest sensor is charged and powered ON.\n\n\nDisconnect and reconnect each connector and electrode. You will hear a snap to indicate a good connection.  \n\n\nTry cleaning the skin where the electrode is placed. There should be no lotion or residue on the skin.\n\n\nMoisten the adhesive surface of the electrode and try again.",
            "title": "Troubleshooting"
        },
        {
            "location": "/mCerebrum/troubleshooting/#troubleshooting-guide",
            "text": "",
            "title": "Troubleshooting Guide"
        },
        {
            "location": "/mCerebrum/troubleshooting/#mcerebrum-app-crashing",
            "text": "If the app crashes perpetually:   Clear all data from the DataKit app.  Clear all data from the mCerebrum app.  Delete the configuration folder located in the internal memory  /mCerebrum  Make sure you have installed the proper update for each app.  Delete the mCerebrum app from the phone and re-install it.",
            "title": "mCerebrum app crashing"
        },
        {
            "location": "/mCerebrum/troubleshooting/#microsoft-band",
            "text": "If you are experiencing bad data quality:   Make sure the Placement setting is designated for the correct wrist (left or right).  Make sure the clasp on the Band is securely locked around the wrist.  Reset the application, wait 15 seconds and check again.  Restart the phone, wait one minute and check again.  Make sure the Band is charged and powered ON.   If you are experiencing pairing issues:   Clear all data from the DataKit app and mCerebrum app and try again.  Perform a factory reset on the Band and try again.   If you are experiencing short battery life:   Make sure the battery is at 100% before disconnecting the charger.  Lower the Band\u2019s brightness setting.  Turn off the Band\u2019s GPS feature.  Turn off the Band\u2019s Daily Heart Rate feature.  Turn off the Band\u2019s Watch Mode feature.",
            "title": "Microsoft Band"
        },
        {
            "location": "/mCerebrum/troubleshooting/#autosense-wrist",
            "text": "If you are experiencing poor data quality:   Make sure the wrist sensor is paired to the phone with the correct ID number.  Make sure the Placement setting is designated for the correct wrist (left or right).  Reset the application, wait 15 seconds and check again.  Restart the phone, wait one minute and check again.  Make sure the wrist sensor power switch is ON.  Make sure the wrist sensor is charged.",
            "title": "AutoSense Wrist"
        },
        {
            "location": "/mCerebrum/troubleshooting/#autosense-rip",
            "text": "If you are experiencing poor data quality:   Make sure the chest sensor is paired to the phone with the correct ID number.  Make sure all cable connections are secure.  Make sure the RIP connector is inserted into the correct port of the chest sensor.  Tighten the chest band so it fits snugly under the armpits.  Reset the application, wait 15 seconds and check again.  Restart the phone, wait one minute and check again.  Make sure the chest sensor is charged and powered ON.",
            "title": "AutoSense RIP"
        },
        {
            "location": "/mCerebrum/troubleshooting/#autosense-ecg",
            "text": "If you are experiencing poor data quality:   Make sure the chest sensor is paired to the phone with the correct ID number.  Make sure all cable connections are secure.  Make sure the ECG connector is inserted into the correct port of the chest sensor.  Adjust the position of the electrodes on the body.  The positive electrode should be under the sternum in the center of the chest.  The negative electrode should be on the left side of the ribcage at approximately the same height as the positive electrode.    Reset the application, wait 15 seconds and check again.  Restart the phone, wait one minute and check again.  Make sure the chest sensor is charged and powered ON.  Disconnect and reconnect each connector and electrode. You will hear a snap to indicate a good connection.    Try cleaning the skin where the electrode is placed. There should be no lotion or residue on the skin.  Moisten the adhesive surface of the electrode and try again.",
            "title": "AutoSense ECG"
        },
        {
            "location": "/cerebralcortex/",
            "text": "Cerebral Cortex\n\n\ndesigned to facilitate mobile health data analytics and interventions\n\n\n\n\n\nIt brings state-of-the-art research techniques and methodologies\ntogether in a single system to affect clinical outcomes with adaptable,\njust-in-time interventions delivered to participants in the field.\n\n\nFunctionality and Architecture of Cerebral Cortex\n\n\n\n\nCerebral Cortex is a flexible layered architecture designed around different functional layers so that each component can be adapted and extended without adversely affecting the other components.  A Kernel links the layers to provide security controls between modules and a unified data interface to abstract implementation specifics. To meet future needs, we anticipate continuing to adapt and augment the Cerebral Cortex platform to support future technologies and the needs of new studies. Cerebral Cortex has the following layers and associated modules:\n\n\nGateway\n\n\nA gateway layer operates in front of all the other layers to provide secure interfaces and APIs for interfacing with the platform.  This currently includes maintaining HTTP over SSL and routing requests to the appropriate internal platforms.\n\n\nUser interfaces\n\n\nThe user interface layer is currently composed of four core applications:\n\n\n\n\nA \nstudy administration web portal\n which provides a secure and encrypted interface that allows study coordinators to conduct, configure, and monitor field studies with mCerebrum.\n\n\nPersonal Activity and Location Measurement System\n (PALMS) that is designed to process GPS information and produce features based on physical activity and location. It also provides a set of APIs on which other applications can utilizes its functionality.\n\n\nA \nhealth science visualization\n through our Discovery Dashboard provides data visualizations designed for the health community, which aid in data interpretation by transforming the high-frequency sensor data streams into key digital biomarkers.\n\n\nA \ndata science visualization\n complements Discovery Dashboard by providing a mechanism for inspecting multiple high-frequency data streams.\n\n\n\n\nMachine interfaces\n\n\nA set of machine interfaces complements the UI by providing several different APIs for both Cerebral Cortex\u2019s internal applications and as an interface to external web services and other data sources.\n\n\n\n\nThe \nCerebral Cortex API\n is designed to work in conjunction with the kernel to provide an interface for external applications such as mCerebrum to produce and consume data from the system. This is the primary interface on which our high-frequency data streams arrive from mCerebrum.\n\n\nThe \nOpen mHealth APIs\n provide a translation layer between our internal data storage system and their schemas. This allows Cerebral Cortex to pull in data from supported external web services and provide certain MD2K data streams as outputs.\n\n\nA \ndata import and export\n module is designed to translate high-frequency data streams into commonly usable formats for use by health and data science researchers. It will also support inserting data into Cerebral Cortex from these same formats.\n\n\n\n\nBoth the user and machine interfaces are built around a rapidly deployable containerized platform (Docker) to support a more flexible set of deployments across multiple different cloud architectures.\n\n\nAnalytics\n\n\nThe analytics layer contains modules primarily designed around the Apache Spark toolchain to run algorithm on the population-scale data sets that Cerebral Cortex contains.  Many processes parallel what is computed in mCerebrum and extends the analysis to examine data at larger time resolutions (e.g., processing the entire day\u2019s worth of data for better estimate of baseline physiology rather than relying on history for online computation in mCerebrum) for higher accuracy and for population scale analytics. Described are several modules within the system.\n\n\n\n\nStress\n is a cloud implementation of the cStress research and is designed to run on an entire person\u2019s data instead of the real-time implementation on mCerebrum.\n\n\npuffMarker\n the cloud implementation of the puffMarker research where it can also look at an entire person\u2019s dataset.\n\n\nFeature/Marker computation\n contains additional feature and marker computations that support research or models and generally do not fit into specific algorithms.\n\n\nThe \ndata quality\n module is designed to determine the effectiveness (i.e., yield) of collected data streams and provides a classification of potential problems and errors. This module is designed to aid in diagnosing data failures in the mCerebrum platform.\n\n\nA \nbatch processor\n provides a mechanism to read data from HBase and run algorithms on it without worrying about writing specialized distributed processing code.\n\n\nMachine learning\n support multiple libraries include Scikit-learn and Spark\u2019s MLlib. The ultimate goal for machine learning is to interoperate with the Discover Dashboard to provide an interactive interface on which various machine learning techniques can quickly be evaluated and tunes. Models learned on population-scale data can be sent back to a smartphone in the field to improve detection and classification accuracy.\n\n\n\n\nData Storage\n\n\nData storage is currently provided by a combination of the Apache Hadoop Distributed File System (HDFS) and HBase, a distributed bigtable datastore. HBase is responsible for storing the vast majority of the high-frequency time series data streams and provides a queryable interface that integrates well with the analytics layer tools.",
            "title": "Overview"
        },
        {
            "location": "/cerebralcortex/#cerebral-cortex",
            "text": "designed to facilitate mobile health data analytics and interventions   It brings state-of-the-art research techniques and methodologies\ntogether in a single system to affect clinical outcomes with adaptable,\njust-in-time interventions delivered to participants in the field.",
            "title": "Cerebral Cortex"
        },
        {
            "location": "/cerebralcortex/#functionality-and-architecture-of-cerebral-cortex",
            "text": "Cerebral Cortex is a flexible layered architecture designed around different functional layers so that each component can be adapted and extended without adversely affecting the other components.  A Kernel links the layers to provide security controls between modules and a unified data interface to abstract implementation specifics. To meet future needs, we anticipate continuing to adapt and augment the Cerebral Cortex platform to support future technologies and the needs of new studies. Cerebral Cortex has the following layers and associated modules:",
            "title": "Functionality and Architecture of Cerebral Cortex"
        },
        {
            "location": "/cerebralcortex/#gateway",
            "text": "A gateway layer operates in front of all the other layers to provide secure interfaces and APIs for interfacing with the platform.  This currently includes maintaining HTTP over SSL and routing requests to the appropriate internal platforms.",
            "title": "Gateway"
        },
        {
            "location": "/cerebralcortex/#user-interfaces",
            "text": "The user interface layer is currently composed of four core applications:   A  study administration web portal  which provides a secure and encrypted interface that allows study coordinators to conduct, configure, and monitor field studies with mCerebrum.  Personal Activity and Location Measurement System  (PALMS) that is designed to process GPS information and produce features based on physical activity and location. It also provides a set of APIs on which other applications can utilizes its functionality.  A  health science visualization  through our Discovery Dashboard provides data visualizations designed for the health community, which aid in data interpretation by transforming the high-frequency sensor data streams into key digital biomarkers.  A  data science visualization  complements Discovery Dashboard by providing a mechanism for inspecting multiple high-frequency data streams.",
            "title": "User interfaces"
        },
        {
            "location": "/cerebralcortex/#machine-interfaces",
            "text": "A set of machine interfaces complements the UI by providing several different APIs for both Cerebral Cortex\u2019s internal applications and as an interface to external web services and other data sources.   The  Cerebral Cortex API  is designed to work in conjunction with the kernel to provide an interface for external applications such as mCerebrum to produce and consume data from the system. This is the primary interface on which our high-frequency data streams arrive from mCerebrum.  The  Open mHealth APIs  provide a translation layer between our internal data storage system and their schemas. This allows Cerebral Cortex to pull in data from supported external web services and provide certain MD2K data streams as outputs.  A  data import and export  module is designed to translate high-frequency data streams into commonly usable formats for use by health and data science researchers. It will also support inserting data into Cerebral Cortex from these same formats.   Both the user and machine interfaces are built around a rapidly deployable containerized platform (Docker) to support a more flexible set of deployments across multiple different cloud architectures.",
            "title": "Machine interfaces"
        },
        {
            "location": "/cerebralcortex/#analytics",
            "text": "The analytics layer contains modules primarily designed around the Apache Spark toolchain to run algorithm on the population-scale data sets that Cerebral Cortex contains.  Many processes parallel what is computed in mCerebrum and extends the analysis to examine data at larger time resolutions (e.g., processing the entire day\u2019s worth of data for better estimate of baseline physiology rather than relying on history for online computation in mCerebrum) for higher accuracy and for population scale analytics. Described are several modules within the system.   Stress  is a cloud implementation of the cStress research and is designed to run on an entire person\u2019s data instead of the real-time implementation on mCerebrum.  puffMarker  the cloud implementation of the puffMarker research where it can also look at an entire person\u2019s dataset.  Feature/Marker computation  contains additional feature and marker computations that support research or models and generally do not fit into specific algorithms.  The  data quality  module is designed to determine the effectiveness (i.e., yield) of collected data streams and provides a classification of potential problems and errors. This module is designed to aid in diagnosing data failures in the mCerebrum platform.  A  batch processor  provides a mechanism to read data from HBase and run algorithms on it without worrying about writing specialized distributed processing code.  Machine learning  support multiple libraries include Scikit-learn and Spark\u2019s MLlib. The ultimate goal for machine learning is to interoperate with the Discover Dashboard to provide an interactive interface on which various machine learning techniques can quickly be evaluated and tunes. Models learned on population-scale data can be sent back to a smartphone in the field to improve detection and classification accuracy.",
            "title": "Analytics"
        },
        {
            "location": "/cerebralcortex/#data-storage",
            "text": "Data storage is currently provided by a combination of the Apache Hadoop Distributed File System (HDFS) and HBase, a distributed bigtable datastore. HBase is responsible for storing the vast majority of the high-frequency time series data streams and provides a queryable interface that integrates well with the analytics layer tools.",
            "title": "Data Storage"
        },
        {
            "location": "/cerebralcortex/api/",
            "text": "Cerebral Cortex API Reference\n\n\nHeader information\n\n\nAll POST resquests must specify:\n\nContent-Type: application/josn\n\n\nWorkflow for Cerebral Cortex API\n\n\nJSON API\n\n\nRegister Participant\n\n\nURL:\n \nhttps://cerebralcortex/participants\n\n\nRequest: POST\n\n{\n\n    \nidentifier\n:\n \nParticipant Name/Identifier\n\n\n}\n\n\n\n\n\n\nRegister Study\n\n\nURL:\n \nhttps://cerebralcortex/studies\n\n\nRequest: POST\n\n{\n\n    \nidentifier\n:\n \nStudy XYZ\n,\n\n    \nname\n:\n \nStudy Name\n\n\n}\n\n\n\n\n\n\nRegister Participant in Study\n\n\nURL:\n \nhttps://cerebralcortex/studies/register_participant\n\n\nRequest: POST\n\n{\n\n    \nparticipant_id\n:\n \nb1c966b4-06c8-4ebd-9aee-67bcfd38d0d6\n,\n\n    \nstudy_id\n:\n \n4\n\n\n}\n\n\n\n\n\n\nRegister Data Source\n\n\nURL:\n \nhttps://cerebralcortex/datasources/register\n\n\nRequest: POST\n\n{\n\n    \nparticipant_id\n:\n \nb1c966b4-06c8-4ebd-9aee-67bcfd38d0d6\n,\n\n    \ndatasource\n:\n \n{\n\n        \ntype\n:\n \nMEMORY\n,\n\n        \nplatform\n:\n \n{\n\n            \ntype\n:\n \nPHONE\n,\n\n            \nmetadata\n:\n \n{\n\n                \nOPERATING_SYSTEM\n:\n \n5.1.1\n,\n\n                \nMODEL\n:\n \nSAMSUNG-SM-G900A\n,\n\n                \nMANUFACTURER\n:\n \nsamsung\n,\n\n                \nNAME\n:\n \nPhone\n\n            \n}\n\n        \n},\n\n        \napplication\n:\n \n{\n\n            \nid\n:\n \norg.md2k.phonesensor\n,\n\n            \nmetadata\n:\n \n{\n\n                \nVERSION_NAME\n:\n \n0.8.0\n,\n\n                \nVERSION_NUMBER\n:\n \n11\n\n            \n}\n\n        \n},\n\n        \ndataDescriptors\n:\n \n[\n\n            \n{\n\n                \nUNIT\n:\n \nmegabyte\n,\n\n                \nDESCRIPTION\n:\n \nSize of the memory\n,\n\n                \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n                \nMAX_VALUE\n:\n \n2048\n,\n\n                \nMIN_VALUE\n:\n \n0\n,\n\n                \nDATA_TYPE\n:\n \nfloat\n,\n\n                \nNAME\n:\n \nSize\n\n            \n},\n\n            \n{\n\n                \nUNIT\n:\n \nmegabyte\n,\n\n                \nDESCRIPTION\n:\n \nAvailable memory\n,\n\n                \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n                \nMAX_VALUE\n:\n \n2048\n,\n\n                \nMIN_VALUE\n:\n \n0\n,\n\n                \nDATA_TYPE\n:\n \nfloat\n,\n\n                \nNAME\n:\n \nAvailable\n\n            \n}\n\n        \n],\n\n        \nmetadata\n:\n \n{\n\n            \nDESCRIPTION\n:\n \nmeasures usage of memory\n,\n\n            \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n            \nDATA_TYPE\n:\n \norg.md2k.datakitapi.datatype.DataTypeFloatArray\n,\n\n            \nNAME\n:\n \nMemory\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\nLoad data for each data stream\n\n\nURL:\n \nhttps://cerebralcortex/datapoints/bulkload\n or \nhttps://cerebralcortex/rawdatapoints/bulkload\n\n\nRequest: POST\n\n{\n\n    \ndatastream_id\n:\n \n5\n,\n\n    \ndata\n:\n \n[\n\n        \n{\n\n            \ndateTime\n:\n \n1455862218000\n,\n\n            \noffset\n:\n \n-21600000\n,\n\n            \nsample\n:\n \n[\n1\n,\n2\n,\n3\n,\n4\n]\n\n        \n},\n\n        \n{\n\n            \ndateTime\n:\n \n1455862219000\n,\n\n            \noffset\n:\n \n-21600000\n,\n\n            \nsample\n:\n \n[\n\n                \n{\n\n                    \nfoo\n:\nbar\n\n                \n},\n\n                \n{\n\n                    \nfoo\n:\nbar\n\n                \n}\n\n            \n]\n\n        \n}\n\n    \n]\n\n\n}\n\n\n\n\n\n\nParticipant registration\n\n\nJSON API for participant registration\n\n\nRequest fields\n\n\n\n\nidentifier\n: String identifier\n\n\nid\n (optional): UUID of this form: a37fbcab-0f90-4dd3-907d-f0cb3f247302\n\n\n\n\nResponse fields\n\n\n\n\nidentifier\n: String\n\n\nid\n: UUID\n\n\ncreated_at\n: DateTime\n\n\nupdated_at\n: DateTime\n\n\n\n\nExample\n\n\nURL:\n \nhttps://cerebralcortex/participants\n\n\nRequest: POST\n\n{\n\n    \nidentifier\n:\n \nParticipant Name/Identifier\n\n\n}\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \na37fbcab-0f90-4dd3-907d-f0cb3f247302\n,\n\n  \nidentifier\n:\n \nParticipant Name/Identifier\n,\n\n  \ncreated_at\n:\n \n2016-04-28T01:56:38.217Z\n,\n\n  \nupdated_at\n:\n \n2016-04-28T01:56:38.217Z\n\n\n}\n\n\n\n\n\n\nExample\n\n\nURL:\n \nhttps://cerebralcortex/participants\n\n\nRequest: POST\n\n{\n\n    \nidentifier\n:\n \nParticipant Name/Identifier\n,\n\n    \nid\n:\n \na37fbcab-0f90-4dd3-907d-f0cb3f247302\n\n\n}\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \na37fbcab-0f90-4dd3-907d-f0cb3f247302\n,\n\n  \nidentifier\n:\n \nParticipant Name/Identifier\n,\n\n  \ncreated_at\n:\n \n2016-04-28T01:56:38.217Z\n,\n\n  \nupdated_at\n:\n \n2016-04-28T01:56:38.217Z\n\n\n}\n\n\n\n\n\n\nStudy registration\n\n\nJSON API for study registration\n\n\nRequest Fields\n\n\n\n\nidentifier\n: String identifier (typically a study or protocol number)\n\n\nname\n: Human readable study name\n\n\n\n\nResponse fields\n\n\n\n\nid\n: Integer\n\n\nidentifier\n: String\n\n\nname\n: String\n\n\ncreated_at\n: DateTime\n\n\nupdated_at\n: DateTime\n\n\n\n\nExample\n\n\nURL:\n \nhttps://cerebralcortex/studies\n\n\nRequest: POST\n\n{\n\n    \nidentifier\n:\n \nStudy XYZ\n,\n\n    \nname\n:\n \nStudy Name\n\n\n}\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \n4\n,\n\n  \nidentifier\n:\n \nStudy XYZ\n,\n\n  \nname\n:\n \nStudy Name\n,\n\n  \ncreated_at\n:\n \n2016-04-18T20:09:00.286Z\n,\n\n  \nupdated_at\n:\n \n2016-04-18T20:09:00.286Z\n\n\n}\n\n\n\n\n\n\nParticipant-Study registration\n\n\nJSON API for registering an existing participant in and existing study\n\n\nRequest Fields\n\n\n\n\nparticipant_id\n: UUID from \nparticipant_registration.id\n response\n\n\nstudy_id\n: Integer from \nstudy_registration.id\n response\n\n\n\n\nResponse fields\n\n\n\n\nid\n: Integer\n\n\nparticipant_id\n: UUID\n\n\nstudy_id\n: Integer\n\n\ncreated_at\n: DateTime\n\n\nupdated_at\n: DateTime\n\n\n\n\nExample\n\n\nURL:\n \nhttps://cerebralcortex/studies\n\n\nRequest: POST\n\n{\n\n    \nparticipant_id\n:\n \nb1c966b4-06c8-4ebd-9aee-67bcfd38d0d6\n,\n\n    \nstudy_id\n:\n \n4\n\n\n}\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \n19\n,\n\n  \nparticipant_id\n:\n \nb1c966b4-06c8-4ebd-9aee-67bcfd38d0d6\n,\n\n  \nstudy_id\n:\n \n4\n,\n\n  \ncreated_at\n:\n \n2016-04-28T02:15:04.213Z\n,\n\n  \nupdated_at\n:\n \n2016-04-28T02:15:04.213Z\n\n\n}\n\n\n\n\n\n\nDatasource registration\n\n\nJSON API for data source registration\n\n\nRequest Structure\n\n{\n\n    \nparticipant_id\n:\n \nUUID\n,\n\n    \ndatasource\n:\n \n{\n\n        \ntype\n:\n \nString\n,\n\n        \nid\n \n(optional)\n:\n \nString\n,\n\n        \nmetadata\n \n(optional)\n:\n \nJsonObject\n \nrepresenting\n \na\n \n,\n\n        \nplatform\n \n(optional)\n:\n \n{\n\n            \ntype\n:\n \nString\n,\n\n            \nid\n:\n \nString\n,\n\n            \nmetadata\n:\n \nJsonObject\n \nrepresenting\n \na\n \nHashMap\n\n        \n},\n\n        \napplication\n \n(optional)\n:\n \n{\n\n            \ntype\n:\n \nString\n,\n\n            \nid\n:\n \nString\n,\n\n            \nmetadata\n:\n \nJsonObject\n \nrepresenting\n \na\n\n        \n},\n\n        \nplatform\n \n(optional)\n:\n \n{\n\n            \ntype\n:\n \nString\n,\n\n            \nid\n:\n \nString\n,\n\n            \nmetadata\n:\n \nJsonObject\n \nrepresenting\n \na\n\n        \n},\n\n        \nplatformapp\n \n(optional)\n:\n \n{\n\n            \ntype\n:\n \nString\n,\n\n            \nid\n:\n \nString\n,\n\n            \nmetadata\n:\n \nJsonObject\n \nrepresenting\n \na\n\n        \n},\n\n        \ndataDescriptors\n \n(optional)\n:\n \n[\n\n            \n{\n\n                \nJsonObject\n \nfor\n \neach\n \nitem\n \nin\n \nthe\n \ndatapoint\n \nsample\n\n            \n},\n\n            \n...\n\n        \n]\n\n    \n}\n\n\n}\n\n\n\n\n\n\nResponse fields\n\n\n\n\nstatus\n: Enum: (OK, ERROR)\n\n\nmessage\n: String\n\n\ndatastream_id\n: Integer\n\n\n\n\nExample\n\n\nURL:\n \nhttps://cerebralcortex/datasources/register\n\n\nRequest: POST\n\n{\n\n    \nparticipant_id\n:\n \nb1c966b4-06c8-4ebd-9aee-67bcfd38d0d6\n,\n\n    \ndatasource\n:\n \n{\n\n        \ntype\n:\n \nMEMORY\n,\n\n        \nplatform\n:\n \n{\n\n            \ntype\n:\n \nPHONE\n,\n\n            \nmetadata\n:\n \n{\n\n                \nOPERATING_SYSTEM\n:\n \n5.1.1\n,\n\n                \nMODEL\n:\n \nSAMSUNG-SM-G900A\n,\n\n                \nMANUFACTURER\n:\n \nsamsung\n,\n\n                \nNAME\n:\n \nPhone\n\n            \n}\n\n        \n},\n\n        \napplication\n:\n \n{\n\n            \nid\n:\n \norg.md2k.phonesensor\n,\n\n            \nmetadata\n:\n \n{\n\n                \nVERSION_NAME\n:\n \n0.8.0\n,\n\n                \nVERSION_NUMBER\n:\n \n11\n\n            \n}\n\n        \n},\n\n        \ndataDescriptors\n:\n \n[\n\n            \n{\n\n                \nUNIT\n:\n \nmegabyte\n,\n\n                \nDESCRIPTION\n:\n \nSize of the memory\n,\n\n                \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n                \nMAX_VALUE\n:\n \n2048\n,\n\n                \nMIN_VALUE\n:\n \n0\n,\n\n                \nDATA_TYPE\n:\n \nfloat\n,\n\n                \nNAME\n:\n \nSize\n\n            \n},\n\n            \n{\n\n                \nUNIT\n:\n \nmegabyte\n,\n\n                \nDESCRIPTION\n:\n \nAvailable memory\n,\n\n                \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n                \nMAX_VALUE\n:\n \n2048\n,\n\n                \nMIN_VALUE\n:\n \n0\n,\n\n                \nDATA_TYPE\n:\n \nfloat\n,\n\n                \nNAME\n:\n \nAvailable\n\n            \n}\n\n        \n],\n\n        \nmetadata\n:\n \n{\n\n            \nDESCRIPTION\n:\n \nmeasures usage of memory\n,\n\n            \nFREQUENCY\n:\n \n1.0 Hz\n,\n\n            \nDATA_TYPE\n:\n \norg.md2k.datakitapi.datatype.DataTypeFloatArray\n,\n\n            \nNAME\n:\n \nMemory\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nstatus\n:\n \nok\n,\n\n  \nmessage\n:\n \nSuccessfully loaded datasource\n,\n\n  \ndatastream_id\n:\n \n908\n\n\n}\n\n\n\n\n\n\nData point bulk loader\n\n\nJSON API for data point bulk loading\n\n\nThe URL determines where data is persisted.\n\n\n\n\nPostgresql (datapoints)\n\n\nPostgresql and Cassandra (rawdatapoints)\n\n\n\n\nRequest Structure\n\n{\n\n    \ndatastream_id\n:\n \nInteger\n \nfrom\n \ndatasource_registration\n \nprocess\n,\n\n    \ndata\n:\n \n[\n\n        \n{\n\n            \ndateTime\n:\n \nLong\n \nmilliseconds\n \nsince\n \n1970\n,\n\n            \noffset\n:\n \nLong\n \noffset\n \nin\n \nmilliseconds\n \nfrom\n \nUTC\n \nto\n \ncurrent\n \ntimezone\n,\n\n            \nsample\n:\n \nArray\n \nof\n \nJsonObjects\n\n        \n},\n\n        \n...\n\n    \n]\n\n\n}\n\n\n\n\n\n\nResponse fields\n\n\n\n\nstatus\n: Enum: (OK, ERROR)\n\n\nmessage\n: String\n\n\ncount\n: Integer indicating number of entries processed\n\n\n\n\nExample\n\n\nURL:\n \nhttps://cerebralcortex/datapoints/bulkload\n or \nhttps://cerebralcortex/rawdatapoints/bulkload\n\n\nRequest: POST\n\n{\n\n    \ndatastream_id\n:\n \n5\n,\n\n    \ndata\n:\n \n[\n\n        \n{\n\n            \ndateTime\n:\n \n1455862218000\n,\n\n            \noffset\n:\n \n-21600000\n,\n\n            \nsample\n:\n \n[\n1\n,\n2\n,\n3\n,\n4\n]\n\n        \n},\n\n        \n{\n\n            \ndateTime\n:\n \n1455862219000\n,\n\n            \noffset\n:\n \n-21600000\n,\n\n            \nsample\n:\n \n[\n\n                \n{\n\n                    \nfoo\n:\nbar\n\n                \n},\n\n                \n{\n\n                    \nfoo\n:\nbar\n\n                \n}\n\n            \n]\n\n        \n}\n\n    \n]\n\n\n}\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nstatus\n:\n \nok\n,\n\n  \nmessage\n:\n \nSuccessfully loaded datapoints\n,\n\n  \ncount\n:\n \n2\n\n\n}",
            "title": "API"
        },
        {
            "location": "/cerebralcortex/api/#cerebral-cortex-api-reference",
            "text": "",
            "title": "Cerebral Cortex API Reference"
        },
        {
            "location": "/cerebralcortex/api/#header-information",
            "text": "All POST resquests must specify: Content-Type: application/josn",
            "title": "Header information"
        },
        {
            "location": "/cerebralcortex/api/#workflow-for-cerebral-cortex-api",
            "text": "JSON API",
            "title": "Workflow for Cerebral Cortex API"
        },
        {
            "location": "/cerebralcortex/api/#register-participant",
            "text": "URL:   https://cerebralcortex/participants  Request: POST { \n     identifier :   Participant Name/Identifier  }",
            "title": "Register Participant"
        },
        {
            "location": "/cerebralcortex/api/#register-study",
            "text": "URL:   https://cerebralcortex/studies  Request: POST { \n     identifier :   Study XYZ , \n     name :   Study Name  }",
            "title": "Register Study"
        },
        {
            "location": "/cerebralcortex/api/#register-participant-in-study",
            "text": "URL:   https://cerebralcortex/studies/register_participant  Request: POST { \n     participant_id :   b1c966b4-06c8-4ebd-9aee-67bcfd38d0d6 , \n     study_id :   4  }",
            "title": "Register Participant in Study"
        },
        {
            "location": "/cerebralcortex/api/#register-data-source",
            "text": "URL:   https://cerebralcortex/datasources/register  Request: POST { \n     participant_id :   b1c966b4-06c8-4ebd-9aee-67bcfd38d0d6 , \n     datasource :   { \n         type :   MEMORY , \n         platform :   { \n             type :   PHONE , \n             metadata :   { \n                 OPERATING_SYSTEM :   5.1.1 , \n                 MODEL :   SAMSUNG-SM-G900A , \n                 MANUFACTURER :   samsung , \n                 NAME :   Phone \n             } \n         }, \n         application :   { \n             id :   org.md2k.phonesensor , \n             metadata :   { \n                 VERSION_NAME :   0.8.0 , \n                 VERSION_NUMBER :   11 \n             } \n         }, \n         dataDescriptors :   [ \n             { \n                 UNIT :   megabyte , \n                 DESCRIPTION :   Size of the memory , \n                 FREQUENCY :   1.0 Hz , \n                 MAX_VALUE :   2048 , \n                 MIN_VALUE :   0 , \n                 DATA_TYPE :   float , \n                 NAME :   Size \n             }, \n             { \n                 UNIT :   megabyte , \n                 DESCRIPTION :   Available memory , \n                 FREQUENCY :   1.0 Hz , \n                 MAX_VALUE :   2048 , \n                 MIN_VALUE :   0 , \n                 DATA_TYPE :   float , \n                 NAME :   Available \n             } \n         ], \n         metadata :   { \n             DESCRIPTION :   measures usage of memory , \n             FREQUENCY :   1.0 Hz , \n             DATA_TYPE :   org.md2k.datakitapi.datatype.DataTypeFloatArray , \n             NAME :   Memory \n         } \n     }  }",
            "title": "Register Data Source"
        },
        {
            "location": "/cerebralcortex/api/#load-data-for-each-data-stream",
            "text": "URL:   https://cerebralcortex/datapoints/bulkload  or  https://cerebralcortex/rawdatapoints/bulkload  Request: POST { \n     datastream_id :   5 , \n     data :   [ \n         { \n             dateTime :   1455862218000 , \n             offset :   -21600000 , \n             sample :   [ 1 , 2 , 3 , 4 ] \n         }, \n         { \n             dateTime :   1455862219000 , \n             offset :   -21600000 , \n             sample :   [ \n                 { \n                     foo : bar \n                 }, \n                 { \n                     foo : bar \n                 } \n             ] \n         } \n     ]  }",
            "title": "Load data for each data stream"
        },
        {
            "location": "/cerebralcortex/api/#participant-registration",
            "text": "JSON API for participant registration  Request fields   identifier : String identifier  id  (optional): UUID of this form: a37fbcab-0f90-4dd3-907d-f0cb3f247302   Response fields   identifier : String  id : UUID  created_at : DateTime  updated_at : DateTime",
            "title": "Participant registration"
        },
        {
            "location": "/cerebralcortex/api/#example",
            "text": "URL:   https://cerebralcortex/participants  Request: POST { \n     identifier :   Participant Name/Identifier  }    Response  { \n   id :   a37fbcab-0f90-4dd3-907d-f0cb3f247302 , \n   identifier :   Participant Name/Identifier , \n   created_at :   2016-04-28T01:56:38.217Z , \n   updated_at :   2016-04-28T01:56:38.217Z  }",
            "title": "Example"
        },
        {
            "location": "/cerebralcortex/api/#example_1",
            "text": "URL:   https://cerebralcortex/participants  Request: POST { \n     identifier :   Participant Name/Identifier , \n     id :   a37fbcab-0f90-4dd3-907d-f0cb3f247302  }    Response  { \n   id :   a37fbcab-0f90-4dd3-907d-f0cb3f247302 , \n   identifier :   Participant Name/Identifier , \n   created_at :   2016-04-28T01:56:38.217Z , \n   updated_at :   2016-04-28T01:56:38.217Z  }",
            "title": "Example"
        },
        {
            "location": "/cerebralcortex/api/#study-registration",
            "text": "JSON API for study registration  Request Fields   identifier : String identifier (typically a study or protocol number)  name : Human readable study name   Response fields   id : Integer  identifier : String  name : String  created_at : DateTime  updated_at : DateTime",
            "title": "Study registration"
        },
        {
            "location": "/cerebralcortex/api/#example_2",
            "text": "URL:   https://cerebralcortex/studies  Request: POST { \n     identifier :   Study XYZ , \n     name :   Study Name  }   Response  { \n   id :   4 , \n   identifier :   Study XYZ , \n   name :   Study Name , \n   created_at :   2016-04-18T20:09:00.286Z , \n   updated_at :   2016-04-18T20:09:00.286Z  }",
            "title": "Example"
        },
        {
            "location": "/cerebralcortex/api/#participant-study-registration",
            "text": "JSON API for registering an existing participant in and existing study  Request Fields   participant_id : UUID from  participant_registration.id  response  study_id : Integer from  study_registration.id  response   Response fields   id : Integer  participant_id : UUID  study_id : Integer  created_at : DateTime  updated_at : DateTime",
            "title": "Participant-Study registration"
        },
        {
            "location": "/cerebralcortex/api/#example_3",
            "text": "URL:   https://cerebralcortex/studies  Request: POST { \n     participant_id :   b1c966b4-06c8-4ebd-9aee-67bcfd38d0d6 , \n     study_id :   4  }    Response  { \n   id :   19 , \n   participant_id :   b1c966b4-06c8-4ebd-9aee-67bcfd38d0d6 , \n   study_id :   4 , \n   created_at :   2016-04-28T02:15:04.213Z , \n   updated_at :   2016-04-28T02:15:04.213Z  }",
            "title": "Example"
        },
        {
            "location": "/cerebralcortex/api/#datasource-registration",
            "text": "JSON API for data source registration  Request Structure { \n     participant_id :   UUID , \n     datasource :   { \n         type :   String , \n         id   (optional) :   String , \n         metadata   (optional) :   JsonObject   representing   a   , \n         platform   (optional) :   { \n             type :   String , \n             id :   String , \n             metadata :   JsonObject   representing   a   HashMap \n         }, \n         application   (optional) :   { \n             type :   String , \n             id :   String , \n             metadata :   JsonObject   representing   a \n         }, \n         platform   (optional) :   { \n             type :   String , \n             id :   String , \n             metadata :   JsonObject   representing   a \n         }, \n         platformapp   (optional) :   { \n             type :   String , \n             id :   String , \n             metadata :   JsonObject   representing   a \n         }, \n         dataDescriptors   (optional) :   [ \n             { \n                 JsonObject   for   each   item   in   the   datapoint   sample \n             }, \n             ... \n         ] \n     }  }    Response fields   status : Enum: (OK, ERROR)  message : String  datastream_id : Integer",
            "title": "Datasource registration"
        },
        {
            "location": "/cerebralcortex/api/#example_4",
            "text": "URL:   https://cerebralcortex/datasources/register  Request: POST { \n     participant_id :   b1c966b4-06c8-4ebd-9aee-67bcfd38d0d6 , \n     datasource :   { \n         type :   MEMORY , \n         platform :   { \n             type :   PHONE , \n             metadata :   { \n                 OPERATING_SYSTEM :   5.1.1 , \n                 MODEL :   SAMSUNG-SM-G900A , \n                 MANUFACTURER :   samsung , \n                 NAME :   Phone \n             } \n         }, \n         application :   { \n             id :   org.md2k.phonesensor , \n             metadata :   { \n                 VERSION_NAME :   0.8.0 , \n                 VERSION_NUMBER :   11 \n             } \n         }, \n         dataDescriptors :   [ \n             { \n                 UNIT :   megabyte , \n                 DESCRIPTION :   Size of the memory , \n                 FREQUENCY :   1.0 Hz , \n                 MAX_VALUE :   2048 , \n                 MIN_VALUE :   0 , \n                 DATA_TYPE :   float , \n                 NAME :   Size \n             }, \n             { \n                 UNIT :   megabyte , \n                 DESCRIPTION :   Available memory , \n                 FREQUENCY :   1.0 Hz , \n                 MAX_VALUE :   2048 , \n                 MIN_VALUE :   0 , \n                 DATA_TYPE :   float , \n                 NAME :   Available \n             } \n         ], \n         metadata :   { \n             DESCRIPTION :   measures usage of memory , \n             FREQUENCY :   1.0 Hz , \n             DATA_TYPE :   org.md2k.datakitapi.datatype.DataTypeFloatArray , \n             NAME :   Memory \n         } \n     }  }    Response  { \n   status :   ok , \n   message :   Successfully loaded datasource , \n   datastream_id :   908  }",
            "title": "Example"
        },
        {
            "location": "/cerebralcortex/api/#data-point-bulk-loader",
            "text": "JSON API for data point bulk loading  The URL determines where data is persisted.   Postgresql (datapoints)  Postgresql and Cassandra (rawdatapoints)   Request Structure { \n     datastream_id :   Integer   from   datasource_registration   process , \n     data :   [ \n         { \n             dateTime :   Long   milliseconds   since   1970 , \n             offset :   Long   offset   in   milliseconds   from   UTC   to   current   timezone , \n             sample :   Array   of   JsonObjects \n         }, \n         ... \n     ]  }    Response fields   status : Enum: (OK, ERROR)  message : String  count : Integer indicating number of entries processed",
            "title": "Data point bulk loader"
        },
        {
            "location": "/cerebralcortex/api/#example_5",
            "text": "URL:   https://cerebralcortex/datapoints/bulkload  or  https://cerebralcortex/rawdatapoints/bulkload  Request: POST { \n     datastream_id :   5 , \n     data :   [ \n         { \n             dateTime :   1455862218000 , \n             offset :   -21600000 , \n             sample :   [ 1 , 2 , 3 , 4 ] \n         }, \n         { \n             dateTime :   1455862219000 , \n             offset :   -21600000 , \n             sample :   [ \n                 { \n                     foo : bar \n                 }, \n                 { \n                     foo : bar \n                 } \n             ] \n         } \n     ]  }    Response  { \n   status :   ok , \n   message :   Successfully loaded datapoints , \n   count :   2  }",
            "title": "Example"
        },
        {
            "location": "/feedback/",
            "text": "Feedback\n\n\nPlease provide as many details as possible when reporting bugs or other feedback.\n\n\nmCerebrum and Cerebral Cortex\n\n\n\n\n\n\n\n\n\n\n\nFeedback Form\n\n\n\n\n\n\n  \nShort Description\n\n  \n\n  \n\n\n  \n\n\n\n\n\n\n\n\n  \nDetails\n\n  \n\n    \n\n  \n\n\n\n\n\n\n\n\n  \n\n  \n\n    \nSubmit Feedback\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n\n\n\n\n\n\n $(document).ready(function() {\n\n  function executeTrackerApiFetch() {\n    // get parameters\n    var token = 'a0a5ef1b94467ef44d393b7e2d01569d';\n    var projectId = 1982081;\n\n    // compose request URL\n    var url = 'https://www.pivotaltracker.com/services/v5';\n    url += '/projects/' + projectId;\n    url += '/stories';\n\n    object = {\n              name: $('#name').val(),\n              description: $('#description').val(),\n             }\n    console.log(object)\n    // do API request to get story names\n    $.ajax({\n      type: \"POST\",\n      url: url,\n      data: object,\n      dataType: \"json\",\n      beforeSend: function(xhr) {\n        xhr.setRequestHeader('X-TrackerToken', token);\n      }\n    }).done(displayTrackerApiResponse);\n  }\n\n  function displayTrackerApiResponse(stories) {\n    $('#result_title').html('Feedback submitted successfully');\n    $('#name').val('');\n    $('#description').val('');\n  }\n\n  $(function() {\n    $('#doit_link').click(executeTrackerApiFetch);\n  });\n});",
            "title": "Feedback"
        },
        {
            "location": "/feedback/#feedback",
            "text": "Please provide as many details as possible when reporting bugs or other feedback.",
            "title": "Feedback"
        },
        {
            "location": "/feedback/#mcerebrum-and-cerebral-cortex",
            "text": "Feedback Form   \n   Short Description \n   \n   \n\n      \n   Details \n   \n     \n      \n   \n   \n     Submit Feedback \n        \n   \n   \n     \n\n $(document).ready(function() {\n\n  function executeTrackerApiFetch() {\n    // get parameters\n    var token = 'a0a5ef1b94467ef44d393b7e2d01569d';\n    var projectId = 1982081;\n\n    // compose request URL\n    var url = 'https://www.pivotaltracker.com/services/v5';\n    url += '/projects/' + projectId;\n    url += '/stories';\n\n    object = {\n              name: $('#name').val(),\n              description: $('#description').val(),\n             }\n    console.log(object)\n    // do API request to get story names\n    $.ajax({\n      type: \"POST\",\n      url: url,\n      data: object,\n      dataType: \"json\",\n      beforeSend: function(xhr) {\n        xhr.setRequestHeader('X-TrackerToken', token);\n      }\n    }).done(displayTrackerApiResponse);\n  }\n\n  function displayTrackerApiResponse(stories) {\n    $('#result_title').html('Feedback submitted successfully');\n    $('#name').val('');\n    $('#description').val('');\n  }\n\n  $(function() {\n    $('#doit_link').click(executeTrackerApiFetch);\n  });\n});",
            "title": "mCerebrum and Cerebral Cortex"
        }
    ]
}